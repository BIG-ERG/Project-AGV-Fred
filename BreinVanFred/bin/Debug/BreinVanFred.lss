
bin\Debug\BreinVanFred.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800200  00001936  000019ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001936  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003c  00800222  00800222  00001a0c  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001a0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00001a0f  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a24  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000001d8  00000000  00000000  00001a68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   000035e4  00000000  00000000  00001c40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 000014e0  00000000  00000000  00005224  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00003cd8  00000000  00000000  00006704  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  000003f4  00000000  00000000  0000a3dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    000008eb  00000000  00000000  0000a7d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 0000023a  00000000  00000000  0000b0bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_loclists 00000ee5  00000000  00000000  0000b2f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_rnglists 0000001a  00000000  00000000  0000c1da  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 85 09 	jmp	0x130a	; 0x130a <__vector_1>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 43 0a 	jmp	0x1486	; 0x1486 <__vector_35>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <__vector_45>
      b8:	0c 94 e7 0b 	jmp	0x17ce	; 0x17ce <__vector_46>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 d3 0b 	jmp	0x17a6	; 0x17a6 <__vector_50>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	e6 e3       	ldi	r30, 0x36	; 54

000000fc <.Loc.4>:
      fc:	f9 e1       	ldi	r31, 0x19	; 25

000000fe <.Loc.5>:
      fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
     100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
     102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
     104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
     106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
     108:	a2 32       	cpi	r26, 0x22	; 34

0000010a <.Loc.11>:
     10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
     10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2

00000110 <.Loc.1>:
     110:	a2 e2       	ldi	r26, 0x22	; 34

00000112 <.Loc.2>:
     112:	b2 e0       	ldi	r27, 0x02	; 2

00000114 <.Loc.3>:
     114:	01 c0       	rjmp	.+2      	; 0x118 <.Loc.5>

00000116 <.Loc.4>:
     116:	1d 92       	st	X+, r1

00000118 <.Loc.5>:
     118:	ae 35       	cpi	r26, 0x5E	; 94

0000011a <.Loc.6>:
     11a:	b2 07       	cpc	r27, r18

0000011c <.Loc.7>:
     11c:	e1 f7       	brne	.-8      	; 0x116 <.Loc.4>

0000011e <L0^A>:
     11e:	0e 94 66 07 	call	0xecc	; 0xecc <main>
     122:	0c 94 99 0c 	jmp	0x1932	; 0x1932 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <init_display>:
	0x9C, 0x7A, 0x9E, 0x8E };

void init_display (void)
{
	// Initialiseer de pinnen voor datain, shiftclk en latchclk als output
	DDR_SDI    |= (1 << SDI_BIT);
     12a:	0f 9a       	sbi	0x01, 7	; 1

0000012c <.Loc.3>:
	DDR_SFTCLK |= (1 << SFTCLK_BIT);
     12c:	0b 9a       	sbi	0x01, 3	; 1

0000012e <.Loc.5>:
	DDR_LCHCLK |= (1 << LCHCLK_BIT);
     12e:	0d 9a       	sbi	0x01, 5	; 1

00000130 <.Loc.7>:

	// Maak shiftclk en latchclk laag
	PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
     130:	13 98       	cbi	0x02, 3	; 2

00000132 <.Loc.10>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
     132:	15 98       	cbi	0x02, 5	; 2

00000134 <.Loc.11>:
}
     134:	08 95       	ret

00000136 <send_data>:

void send_data(char data)
{
     136:	28 e0       	ldi	r18, 0x08	; 8
     138:	30 e0       	ldi	r19, 0x00	; 0
     13a:	08 c0       	rjmp	.+16     	; 0x14c <.L5>

0000013c <.L3>:
		{
			PORT_SDI |= (1 << SDI_BIT);
		}
		else
		{
			PORT_SDI &= ~(1 << SDI_BIT);
     13c:	17 98       	cbi	0x02, 7	; 2

0000013e <.L4>:
		}

		// Toggle shiftclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
		// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
		// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
		PORT_SFTCLK |= (1 << SFTCLK_BIT);
     13e:	13 9a       	sbi	0x02, 3	; 2

00000140 <.Loc.21>:
		PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
     140:	13 98       	cbi	0x02, 3	; 2

00000142 <.Loc.23>:
	for (unsigned i = 0; i < 8; i++)
     142:	21 50       	subi	r18, 0x01	; 1
     144:	31 09       	sbc	r19, r1

00000146 <.Loc.25>:
     146:	21 15       	cp	r18, r1
     148:	31 05       	cpc	r19, r1
     14a:	39 f0       	breq	.+14     	; 0x15a <.L7>

0000014c <.L5>:
		int bit = data & 1;
     14c:	98 2f       	mov	r25, r24
     14e:	91 70       	andi	r25, 0x01	; 1

00000150 <.Loc.27>:
		data >>= 1;
     150:	85 95       	asr	r24

00000152 <.Loc.29>:
		if (bit)
     152:	99 23       	and	r25, r25
     154:	99 f3       	breq	.-26     	; 0x13c <.L3>

00000156 <.Loc.31>:
			PORT_SDI |= (1 << SDI_BIT);
     156:	17 9a       	sbi	0x02, 7	; 2
     158:	f2 cf       	rjmp	.-28     	; 0x13e <.L4>

0000015a <.L7>:
	}
}
     15a:	08 95       	ret

0000015c <send_enable>:

void send_enable(int display_nummer)
{
	send_data(~(0x10 << display_nummer));
     15c:	20 e1       	ldi	r18, 0x10	; 16
     15e:	30 e0       	ldi	r19, 0x00	; 0
     160:	a9 01       	movw	r20, r18
     162:	02 c0       	rjmp	.+4      	; 0x168 <.L2^B1>

00000164 <.L1^B1>:
     164:	44 0f       	add	r20, r20
     166:	55 1f       	adc	r21, r21

00000168 <.L2^B1>:
     168:	8a 95       	dec	r24
     16a:	e2 f7       	brpl	.-8      	; 0x164 <.L1^B1>
     16c:	ca 01       	movw	r24, r20

0000016e <.Loc.38>:
     16e:	80 95       	com	r24
     170:	0e 94 9b 00 	call	0x136	; 0x136 <send_data>

00000174 <.LVL9>:
}
     174:	08 95       	ret

00000176 <display>:

void display(char data, int display_nummer)
{
     176:	cf 93       	push	r28
     178:	df 93       	push	r29
     17a:	d6 2f       	mov	r29, r22
     17c:	c7 2f       	mov	r28, r23

0000017e <.Loc.42>:
	send_data(data);
     17e:	0e 94 9b 00 	call	0x136	; 0x136 <send_data>

00000182 <.LVL11>:
	send_enable(display_nummer);
     182:	8d 2f       	mov	r24, r29
     184:	9c 2f       	mov	r25, r28
     186:	0e 94 ae 00 	call	0x15c	; 0x15c <send_enable>

0000018a <.LVL12>:

	// Toggle latchclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
	// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
	// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
	PORT_LCHCLK |= (1 << LCHCLK_BIT);
     18a:	15 9a       	sbi	0x02, 5	; 2

0000018c <.Loc.46>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
     18c:	15 98       	cbi	0x02, 5	; 2

0000018e <.Loc.48>:
}
     18e:	df 91       	pop	r29
     190:	cf 91       	pop	r28
     192:	08 95       	ret

00000194 <display_getal>:

void display_getal(unsigned int getal)
{
     194:	0f 93       	push	r16
     196:	1f 93       	push	r17
     198:	cf 93       	push	r28
     19a:	df 93       	push	r29
     19c:	c8 2f       	mov	r28, r24
     19e:	d9 2f       	mov	r29, r25

000001a0 <.LBB149>:
	for (int i = 0; i < 4; i++)
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	10 e0       	ldi	r17, 0x00	; 0

000001a4 <.L11>:
	{
		display(segmentcodes[getal%10], i);
     1a4:	9e 01       	movw	r18, r28
     1a6:	ad ec       	ldi	r26, 0xCD	; 205
     1a8:	bc ec       	ldi	r27, 0xCC	; 204
     1aa:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__umulhisi3>
     1ae:	9c 01       	movw	r18, r24
     1b0:	36 95       	lsr	r19
     1b2:	27 95       	ror	r18
     1b4:	36 95       	lsr	r19
     1b6:	27 95       	ror	r18
     1b8:	36 95       	lsr	r19
     1ba:	27 95       	ror	r18
     1bc:	c9 01       	movw	r24, r18
     1be:	88 0f       	add	r24, r24
     1c0:	99 1f       	adc	r25, r25
     1c2:	88 0f       	add	r24, r24
     1c4:	99 1f       	adc	r25, r25
     1c6:	82 0f       	add	r24, r18
     1c8:	93 1f       	adc	r25, r19
     1ca:	88 0f       	add	r24, r24
     1cc:	99 1f       	adc	r25, r25
     1ce:	fe 01       	movw	r30, r28
     1d0:	e8 1b       	sub	r30, r24
     1d2:	f9 0b       	sbc	r31, r25

000001d4 <.Loc.57>:
     1d4:	ee 0f       	add	r30, r30
     1d6:	ff 1f       	adc	r31, r31
     1d8:	ee 5f       	subi	r30, 0xFE	; 254
     1da:	fd 4f       	sbci	r31, 0xFD	; 253

000001dc <.Loc.58>:
     1dc:	b8 01       	movw	r22, r16
     1de:	80 81       	ld	r24, Z
     1e0:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000001e4 <.LVL16>:
		getal /= 10;
     1e4:	9e 01       	movw	r18, r28
     1e6:	ad ec       	ldi	r26, 0xCD	; 205
     1e8:	bc ec       	ldi	r27, 0xCC	; 204
     1ea:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__umulhisi3>
     1ee:	ec 01       	movw	r28, r24

000001f0 <.Loc.61>:
     1f0:	d6 95       	lsr	r29
     1f2:	c7 95       	ror	r28
     1f4:	d6 95       	lsr	r29
     1f6:	c7 95       	ror	r28
     1f8:	d6 95       	lsr	r29
     1fa:	c7 95       	ror	r28

000001fc <.LBB150>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1fc:	8f e9       	ldi	r24, 0x9F	; 159
     1fe:	9f e0       	ldi	r25, 0x0F	; 15

00000200 <.L1^B2>:
     200:	01 97       	sbiw	r24, 0x01	; 1
     202:	f1 f7       	brne	.-4      	; 0x200 <.L1^B2>
     204:	00 c0       	rjmp	.+0      	; 0x206 <L0^A>

00000206 <L0^A>:
	...

00000208 <.LBE150>:
	for (int i = 0; i < 4; i++)
     208:	0f 5f       	subi	r16, 0xFF	; 255
     20a:	1f 4f       	sbci	r17, 0xFF	; 255

0000020c <.Loc.72>:
     20c:	04 30       	cpi	r16, 0x04	; 4
     20e:	11 05       	cpc	r17, r1
     210:	49 f6       	brne	.-110    	; 0x1a4 <.L11>

00000212 <.LBE149>:
		_delay_ms(1);   // 1 kHz
	}
}
     212:	df 91       	pop	r29
     214:	cf 91       	pop	r28

00000216 <.Loc.74>:
     216:	1f 91       	pop	r17
     218:	0f 91       	pop	r16

0000021a <.Loc.75>:
     21a:	08 95       	ret

0000021c <aantal_pakje>:

void aantal_pakje()
{
     21c:	cf 93       	push	r28
     21e:	df 93       	push	r29

00000220 <.Loc.77>:
    static int back2_ingedrukt=0;
    static int plus2_ingedrukt=0;
    static int start_ingedrukt=0;
    static int h=0;

    DDR_knop &=~((1<<back)|(1<<next)|(1<<plus)|(1<<start));
     220:	81 b1       	in	r24, 0x01	; 1
     222:	8a 7a       	andi	r24, 0xAA	; 170
     224:	81 b9       	out	0x01, r24	; 1

00000226 <.Loc.90>:
    PORT_knop |=((1<<back)|(1<<next)|(1<<plus)|(1<<start));
     226:	82 b1       	in	r24, 0x02	; 2

00000228 <.Loc.91>:
     228:	85 65       	ori	r24, 0x55	; 85
     22a:	82 b9       	out	0x02, r24	; 2

0000022c <.Loc.92>:



    switch(h)
     22c:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <h.10>
     230:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <h.10+0x1>
     234:	82 30       	cpi	r24, 0x02	; 2
     236:	91 05       	cpc	r25, r1
     238:	09 f4       	brne	.+2      	; 0x23c <.LVUS51>

0000023a <L0^A>:
     23a:	50 c3       	rjmp	.+1696   	; 0x8dc <.L14>
     23c:	0c f0       	brlt	.+2      	; 0x240 <L0^A>

0000023e <L0^A>:
     23e:	4f c0       	rjmp	.+158    	; 0x2de <.L15>
     240:	00 97       	sbiw	r24, 0x00	; 0
     242:	09 f4       	brne	.+2      	; 0x246 <L0^A+0x2>

00000244 <L0^A>:
     244:	85 c0       	rjmp	.+266    	; 0x350 <.L16>
     246:	01 97       	sbiw	r24, 0x01	; 1
     248:	09 f0       	breq	.+2      	; 0x24c <.Loc.93>

0000024a <L0^A>:
     24a:	8c c5       	rjmp	.+2840   	; 0xd64 <.L13>

0000024c <.Loc.93>:
            }

        case 1:
        {

            switch(letter)
     24c:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <letter>
     250:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <letter+0x1>
     254:	81 30       	cpi	r24, 0x01	; 1
     256:	91 05       	cpc	r25, r1
     258:	09 f4       	brne	.+2      	; 0x25c <.LLST53>

0000025a <L0^A>:
     25a:	2e c2       	rjmp	.+1116   	; 0x6b8 <.L28>
     25c:	82 30       	cpi	r24, 0x02	; 2
     25e:	91 05       	cpc	r25, r1
     260:	09 f4       	brne	.+2      	; 0x264 <L0^A+0x2>

00000262 <L0^A>:
     262:	7a c2       	rjmp	.+1268   	; 0x758 <.L29>
     264:	89 2b       	or	r24, r25
     266:	09 f4       	brne	.+2      	; 0x26a <.L30>

00000268 <L0^A>:
     268:	b2 c1       	rjmp	.+868    	; 0x5ce <.L65>

0000026a <.L30>:
                        break;
                    }

            }

             if (((PIN_knop&(1<<next))==0)&&(next1_ingedrukt==0)) // naar volgede stand als next is ingedrukt
     26a:	04 99       	sbic	0x00, 4	; 0
     26c:	ea c2       	rjmp	.+1492   	; 0x842 <.L40>

0000026e <.Loc.96>:
     26e:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <next1_ingedrukt.5>
     272:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <next1_ingedrukt.5+0x1>
     276:	89 2b       	or	r24, r25
     278:	09 f0       	breq	.+2      	; 0x27c <.LBB152>

0000027a <L0^A>:
     27a:	e3 c2       	rjmp	.+1478   	; 0x842 <.L40>

0000027c <.LBB152>:
     27c:	8f e3       	ldi	r24, 0x3F	; 63
     27e:	9c e9       	ldi	r25, 0x9C	; 156

00000280 <.L1^B3>:
     280:	01 97       	sbiw	r24, 0x01	; 1
     282:	f1 f7       	brne	.-4      	; 0x280 <.L1^B3>
     284:	00 c0       	rjmp	.+0      	; 0x286 <L0^A>

00000286 <L0^A>:
	...

00000288 <.LBE152>:
                {
                _delay_ms(10);
                    if (((PIN_knop&(1<<next))==0)&&(next1_ingedrukt==0))
     288:	04 99       	sbic	0x00, 4	; 0
     28a:	db c2       	rjmp	.+1462   	; 0x842 <.L40>

0000028c <.Loc.108>:
     28c:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <next1_ingedrukt.5>
     290:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <next1_ingedrukt.5+0x1>
     294:	89 2b       	or	r24, r25
     296:	09 f0       	breq	.+2      	; 0x29a <.Loc.109>

00000298 <L0^A>:
     298:	d4 c2       	rjmp	.+1448   	; 0x842 <.L40>

0000029a <.Loc.109>:
                    {
                        next1_ingedrukt=1;
     29a:	81 e0       	ldi	r24, 0x01	; 1
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <next1_ingedrukt.5+0x1>
     2a2:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <next1_ingedrukt.5>

000002a6 <.Loc.111>:
                    }
                }
                 if (((PIN_knop&(1<<next))!=0)&&(next1_ingedrukt==1))
     2a6:	04 9b       	sbis	0x00, 4	; 0
     2a8:	d5 c2       	rjmp	.+1450   	; 0x854 <.L42>

000002aa <.L41>:
     2aa:	8f e3       	ldi	r24, 0x3F	; 63
     2ac:	9c e9       	ldi	r25, 0x9C	; 156

000002ae <.L1^B4>:
     2ae:	01 97       	sbiw	r24, 0x01	; 1
     2b0:	f1 f7       	brne	.-4      	; 0x2ae <.L1^B4>
     2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <L0^A>

000002b4 <L0^A>:
	...

000002b6 <.LBE154>:
                {
                _delay_ms(10);
                    if (((PIN_knop&(1<<next))!=0)&&(next1_ingedrukt==1))
     2b6:	04 9b       	sbis	0x00, 4	; 0
     2b8:	cd c2       	rjmp	.+1434   	; 0x854 <.L42>

000002ba <.Loc.124>:
     2ba:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <next1_ingedrukt.5>
     2be:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <next1_ingedrukt.5+0x1>
     2c2:	01 97       	sbiw	r24, 0x01	; 1
     2c4:	09 f0       	breq	.+2      	; 0x2c8 <.Loc.125>

000002c6 <L0^A>:
     2c6:	c6 c2       	rjmp	.+1420   	; 0x854 <.L42>

000002c8 <.Loc.125>:
                    {
                        next1_ingedrukt=0;
     2c8:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <next1_ingedrukt.5+0x1>
     2cc:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <next1_ingedrukt.5>

000002d0 <.Loc.127>:
                        h=2;
     2d0:	82 e0       	ldi	r24, 0x02	; 2
     2d2:	90 e0       	ldi	r25, 0x00	; 0
     2d4:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <h.10+0x1>
     2d8:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <h.10>
     2dc:	bb c2       	rjmp	.+1398   	; 0x854 <.L42>

000002de <.L15>:
    switch(h)
     2de:	03 97       	sbiw	r24, 0x03	; 3
     2e0:	09 f0       	breq	.+2      	; 0x2e4 <.Loc.130>

000002e2 <L0^A>:
     2e2:	40 c5       	rjmp	.+2688   	; 0xd64 <.L13>

000002e4 <.Loc.130>:
                }
             break;
            }
        case 3:     //transfer naar rest van de code
            {
                if (((PIN_knop&(1<<start))==0)&&(start_ingedrukt==0))
     2e4:	06 99       	sbic	0x00, 6	; 0
     2e6:	fe c4       	rjmp	.+2556   	; 0xce4 <.L61>

000002e8 <.Loc.132>:
     2e8:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <start_ingedrukt.0>
     2ec:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <start_ingedrukt.0+0x1>
     2f0:	89 2b       	or	r24, r25
     2f2:	09 f0       	breq	.+2      	; 0x2f6 <.LBB156>

000002f4 <L0^A>:
     2f4:	f7 c4       	rjmp	.+2542   	; 0xce4 <.L61>

000002f6 <.LBB156>:
     2f6:	8f e3       	ldi	r24, 0x3F	; 63
     2f8:	9c e9       	ldi	r25, 0x9C	; 156

000002fa <.L1^B5>:
     2fa:	01 97       	sbiw	r24, 0x01	; 1
     2fc:	f1 f7       	brne	.-4      	; 0x2fa <.L1^B5>
     2fe:	00 c0       	rjmp	.+0      	; 0x300 <L0^A>

00000300 <L0^A>:
	...

00000302 <.LBE156>:
                {
                    _delay_ms(10);
                    if (((PIN_knop&(1<<start))==0)&&(start_ingedrukt==0))
     302:	06 99       	sbic	0x00, 6	; 0
     304:	ef c4       	rjmp	.+2526   	; 0xce4 <.L61>

00000306 <.Loc.144>:
     306:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <start_ingedrukt.0>
     30a:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <start_ingedrukt.0+0x1>
     30e:	89 2b       	or	r24, r25
     310:	09 f0       	breq	.+2      	; 0x314 <.Loc.145>

00000312 <L0^A>:
     312:	e8 c4       	rjmp	.+2512   	; 0xce4 <.L61>

00000314 <.Loc.145>:
                    {
                        start_ingedrukt=1;
     314:	81 e0       	ldi	r24, 0x01	; 1
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <start_ingedrukt.0+0x1>
     31c:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <start_ingedrukt.0>

00000320 <.Loc.147>:
                    }
                }
                 if (((PIN_knop&(1<<start))!=0)&&(start_ingedrukt==1))
     320:	06 9b       	sbis	0x00, 6	; 0
     322:	e9 c4       	rjmp	.+2514   	; 0xcf6 <.L63>

00000324 <.L62>:
     324:	8f e3       	ldi	r24, 0x3F	; 63
     326:	9c e9       	ldi	r25, 0x9C	; 156

00000328 <.L1^B6>:
     328:	01 97       	sbiw	r24, 0x01	; 1
     32a:	f1 f7       	brne	.-4      	; 0x328 <.L1^B6>
     32c:	00 c0       	rjmp	.+0      	; 0x32e <L0^A>

0000032e <L0^A>:
	...

00000330 <.LBE158>:
                {
                _delay_ms(10);
                    if (((PIN_knop&(1<<start))!=0)&&(start_ingedrukt==1)) // start met rijden als start is indgedukt
     330:	06 9b       	sbis	0x00, 6	; 0
     332:	e1 c4       	rjmp	.+2498   	; 0xcf6 <.L63>

00000334 <.Loc.160>:
     334:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <start_ingedrukt.0>
     338:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <start_ingedrukt.0+0x1>
     33c:	01 97       	sbiw	r24, 0x01	; 1
     33e:	09 f0       	breq	.+2      	; 0x342 <.Loc.161>

00000340 <L0^A>:
     340:	da c4       	rjmp	.+2484   	; 0xcf6 <.L63>

00000342 <.Loc.161>:
                    {
                        // start met rijden
                        start_ingedrukt=0;
     342:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <start_ingedrukt.0+0x1>
     346:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <start_ingedrukt.0>

0000034a <.Loc.163>:
                        uitvoer();
     34a:	0e 94 5e 0a 	call	0x14bc	; 0x14bc <uitvoer>

0000034e <.LVL31>:
     34e:	d3 c4       	rjmp	.+2470   	; 0xcf6 <.L63>

00000350 <.L16>:
                    display(segmentcodes[pakjes%10],0); // laat 4 nullen op display zien
     350:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <pakjes>
     354:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <pakjes+0x1>
     358:	ca e0       	ldi	r28, 0x0A	; 10
     35a:	d0 e0       	ldi	r29, 0x00	; 0
     35c:	be 01       	movw	r22, r28
     35e:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <__divmodhi4>

00000362 <.Loc.166>:
     362:	fc 01       	movw	r30, r24
     364:	ee 0f       	add	r30, r30
     366:	ff 1f       	adc	r31, r31
     368:	ee 5f       	subi	r30, 0xFE	; 254
     36a:	fd 4f       	sbci	r31, 0xFD	; 253

0000036c <.Loc.167>:
     36c:	60 e0       	ldi	r22, 0x00	; 0
     36e:	70 e0       	ldi	r23, 0x00	; 0
     370:	80 81       	ld	r24, Z
     372:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000376 <.LBB160>:
     376:	8f e9       	ldi	r24, 0x9F	; 159
     378:	9f e0       	ldi	r25, 0x0F	; 15

0000037a <.L1^B7>:
     37a:	01 97       	sbiw	r24, 0x01	; 1
     37c:	f1 f7       	brne	.-4      	; 0x37a <.L1^B7>
     37e:	00 c0       	rjmp	.+0      	; 0x380 <L0^A>

00000380 <L0^A>:
	...

00000382 <.LBE160>:
                    display(segmentcodes[(pakjes/10)%10],1);
     382:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <pakjes>
     386:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <pakjes+0x1>
     38a:	be 01       	movw	r22, r28
     38c:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <__divmodhi4>
     390:	cb 01       	movw	r24, r22

00000392 <.Loc.179>:
     392:	be 01       	movw	r22, r28
     394:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <__divmodhi4>

00000398 <.Loc.180>:
     398:	fc 01       	movw	r30, r24
     39a:	ee 0f       	add	r30, r30
     39c:	ff 1f       	adc	r31, r31
     39e:	ee 5f       	subi	r30, 0xFE	; 254
     3a0:	fd 4f       	sbci	r31, 0xFD	; 253

000003a2 <.Loc.181>:
     3a2:	61 e0       	ldi	r22, 0x01	; 1
     3a4:	70 e0       	ldi	r23, 0x00	; 0
     3a6:	80 81       	ld	r24, Z
     3a8:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000003ac <.LBB162>:
     3ac:	8f e9       	ldi	r24, 0x9F	; 159
     3ae:	9f e0       	ldi	r25, 0x0F	; 15

000003b0 <.L1^B8>:
     3b0:	01 97       	sbiw	r24, 0x01	; 1
     3b2:	f1 f7       	brne	.-4      	; 0x3b0 <.L1^B8>
     3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <L0^A>

000003b6 <L0^A>:
	...

000003b8 <.LBE162>:
                    display(segmentcodes[(pakjes/100)%10],2);
     3b8:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <pakjes>
     3bc:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <pakjes+0x1>
     3c0:	64 e6       	ldi	r22, 0x64	; 100
     3c2:	70 e0       	ldi	r23, 0x00	; 0
     3c4:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <__divmodhi4>
     3c8:	cb 01       	movw	r24, r22

000003ca <.Loc.193>:
     3ca:	be 01       	movw	r22, r28
     3cc:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <__divmodhi4>

000003d0 <.Loc.194>:
     3d0:	fc 01       	movw	r30, r24
     3d2:	ee 0f       	add	r30, r30
     3d4:	ff 1f       	adc	r31, r31
     3d6:	ee 5f       	subi	r30, 0xFE	; 254
     3d8:	fd 4f       	sbci	r31, 0xFD	; 253

000003da <.Loc.195>:
     3da:	62 e0       	ldi	r22, 0x02	; 2
     3dc:	70 e0       	ldi	r23, 0x00	; 0
     3de:	80 81       	ld	r24, Z
     3e0:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000003e4 <.LBB164>:
     3e4:	8f e9       	ldi	r24, 0x9F	; 159
     3e6:	9f e0       	ldi	r25, 0x0F	; 15

000003e8 <.L1^B9>:
     3e8:	01 97       	sbiw	r24, 0x01	; 1
     3ea:	f1 f7       	brne	.-4      	; 0x3e8 <.L1^B9>
     3ec:	00 c0       	rjmp	.+0      	; 0x3ee <L0^A>

000003ee <L0^A>:
	...

000003f0 <.LBE164>:
                    display(segmentcodes[0],3);
     3f0:	63 e0       	ldi	r22, 0x03	; 3
     3f2:	70 e0       	ldi	r23, 0x00	; 0
     3f4:	8c ef       	ldi	r24, 0xFC	; 252
     3f6:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000003fa <.LBB166>:
     3fa:	8f e9       	ldi	r24, 0x9F	; 159
     3fc:	9f e0       	ldi	r25, 0x0F	; 15

000003fe <.L1^B10>:
     3fe:	01 97       	sbiw	r24, 0x01	; 1
     400:	f1 f7       	brne	.-4      	; 0x3fe <.L1^B10>
     402:	00 c0       	rjmp	.+0      	; 0x404 <L0^A>

00000404 <L0^A>:
	...

00000406 <.LBE166>:
                    display((char)~0b11111111,0123);
     406:	63 e5       	ldi	r22, 0x53	; 83
     408:	70 e0       	ldi	r23, 0x00	; 0
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000410 <.LBB168>:
     410:	8f e9       	ldi	r24, 0x9F	; 159
     412:	9f e0       	ldi	r25, 0x0F	; 15

00000414 <.L1^B11>:
     414:	01 97       	sbiw	r24, 0x01	; 1
     416:	f1 f7       	brne	.-4      	; 0x414 <.L1^B11>
     418:	00 c0       	rjmp	.+0      	; 0x41a <L0^A>

0000041a <L0^A>:
	...

0000041c <.LBE168>:
                 if (((PIN_knop&(1<<plus))==0)&&(plus_ingedrukt==0))
     41c:	02 99       	sbic	0x00, 2	; 0
     41e:	38 c0       	rjmp	.+112    	; 0x490 <.L20>

00000420 <.Loc.227>:
     420:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <plus_ingedrukt.9>
     424:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <plus_ingedrukt.9+0x1>
     428:	89 2b       	or	r24, r25
     42a:	91 f5       	brne	.+100    	; 0x490 <.L20>

0000042c <.LBB170>:
     42c:	8f e3       	ldi	r24, 0x3F	; 63
     42e:	9c e9       	ldi	r25, 0x9C	; 156

00000430 <.L1^B12>:
     430:	01 97       	sbiw	r24, 0x01	; 1
     432:	f1 f7       	brne	.-4      	; 0x430 <.L1^B12>
     434:	00 c0       	rjmp	.+0      	; 0x436 <L0^A>

00000436 <L0^A>:
	...

00000438 <.LBE170>:
                        if (((PIN_knop&(1<<plus))==0)&&(plus_ingedrukt==0))
     438:	02 99       	sbic	0x00, 2	; 0
     43a:	2a c0       	rjmp	.+84     	; 0x490 <.L20>

0000043c <.Loc.239>:
     43c:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <plus_ingedrukt.9>
     440:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <plus_ingedrukt.9+0x1>
     444:	89 2b       	or	r24, r25
     446:	21 f5       	brne	.+72     	; 0x490 <.L20>

00000448 <.Loc.240>:
                            plus_ingedrukt=1;
     448:	81 e0       	ldi	r24, 0x01	; 1
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <plus_ingedrukt.9+0x1>
     450:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <plus_ingedrukt.9>

00000454 <.Loc.242>:
                if (((PIN_knop&(1<<plus))!=0)&&(plus_ingedrukt==1))
     454:	02 9b       	sbis	0x00, 2	; 0
     456:	24 c0       	rjmp	.+72     	; 0x4a0 <.L22>

00000458 <.L21>:
     458:	8f e3       	ldi	r24, 0x3F	; 63
     45a:	9c e9       	ldi	r25, 0x9C	; 156

0000045c <.L1^B13>:
     45c:	01 97       	sbiw	r24, 0x01	; 1
     45e:	f1 f7       	brne	.-4      	; 0x45c <.L1^B13>
     460:	00 c0       	rjmp	.+0      	; 0x462 <L0^A>

00000462 <L0^A>:
	...

00000464 <.LBE172>:
                    if (((PIN_knop&(1<<plus))!=0&&(plus_ingedrukt==1)))
     464:	02 9b       	sbis	0x00, 2	; 0
     466:	1c c0       	rjmp	.+56     	; 0x4a0 <.L22>

00000468 <.Loc.255>:
     468:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <plus_ingedrukt.9>
     46c:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <plus_ingedrukt.9+0x1>
     470:	01 97       	sbiw	r24, 0x01	; 1
     472:	b1 f4       	brne	.+44     	; 0x4a0 <.L22>

00000474 <.Loc.256>:
                    pakjes++;                                   // instellen hoeveel pakjes er geteld moeten worden als plus is ingedrukt
     474:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <pakjes>
     478:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <pakjes+0x1>
     47c:	01 96       	adiw	r24, 0x01	; 1
     47e:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <pakjes+0x1>
     482:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <pakjes>

00000486 <.Loc.258>:
                    plus_ingedrukt=0;                           // en geef dat weer in oplopende getallen op display
     486:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <plus_ingedrukt.9+0x1>
     48a:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <plus_ingedrukt.9>
     48e:	08 c0       	rjmp	.+16     	; 0x4a0 <.L22>

00000490 <.L20>:
                if (((PIN_knop&(1<<plus))!=0)&&(plus_ingedrukt==1))
     490:	02 9b       	sbis	0x00, 2	; 0
     492:	06 c0       	rjmp	.+12     	; 0x4a0 <.L22>

00000494 <.Loc.262>:
     494:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <plus_ingedrukt.9>
     498:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <plus_ingedrukt.9+0x1>
     49c:	01 97       	sbiw	r24, 0x01	; 1
     49e:	e1 f2       	breq	.-72     	; 0x458 <.L21>

000004a0 <.L22>:
                if (((PIN_knop&(1<<next))==0)&&(next_ingedrukt==0)) // naar volgende stand
     4a0:	04 99       	sbic	0x00, 4	; 0
     4a2:	35 c0       	rjmp	.+106    	; 0x50e <.L23>

000004a4 <.Loc.265>:
     4a4:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <next_ingedrukt.8>
     4a8:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <next_ingedrukt.8+0x1>
     4ac:	89 2b       	or	r24, r25
     4ae:	79 f5       	brne	.+94     	; 0x50e <.L23>

000004b0 <.LBB174>:
     4b0:	8f e3       	ldi	r24, 0x3F	; 63
     4b2:	9c e9       	ldi	r25, 0x9C	; 156

000004b4 <.L1^B14>:
     4b4:	01 97       	sbiw	r24, 0x01	; 1
     4b6:	f1 f7       	brne	.-4      	; 0x4b4 <.L1^B14>
     4b8:	00 c0       	rjmp	.+0      	; 0x4ba <L0^A>

000004ba <L0^A>:
	...

000004bc <.LBE174>:
                    if (((PIN_knop&(1<<next))==0)&&(next_ingedrukt==0))
     4bc:	04 99       	sbic	0x00, 4	; 0
     4be:	27 c0       	rjmp	.+78     	; 0x50e <.L23>

000004c0 <.Loc.277>:
     4c0:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <next_ingedrukt.8>
     4c4:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <next_ingedrukt.8+0x1>
     4c8:	89 2b       	or	r24, r25
     4ca:	09 f5       	brne	.+66     	; 0x50e <.L23>

000004cc <.Loc.278>:
                        next_ingedrukt=1;
     4cc:	81 e0       	ldi	r24, 0x01	; 1
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <next_ingedrukt.8+0x1>
     4d4:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <next_ingedrukt.8>

000004d8 <.Loc.280>:
                 if (((PIN_knop&(1<<next))!=0)&&(next_ingedrukt==1))
     4d8:	04 9b       	sbis	0x00, 4	; 0
     4da:	21 c0       	rjmp	.+66     	; 0x51e <.L25>

000004dc <.L24>:
     4dc:	8f e3       	ldi	r24, 0x3F	; 63
     4de:	9c e9       	ldi	r25, 0x9C	; 156

000004e0 <.L1^B15>:
     4e0:	01 97       	sbiw	r24, 0x01	; 1
     4e2:	f1 f7       	brne	.-4      	; 0x4e0 <.L1^B15>
     4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <L0^A>

000004e6 <L0^A>:
	...

000004e8 <.LBE176>:
                    if (((PIN_knop&(1<<next))!=0)&&(next_ingedrukt==1))
     4e8:	04 9b       	sbis	0x00, 4	; 0
     4ea:	19 c0       	rjmp	.+50     	; 0x51e <.L25>

000004ec <.Loc.293>:
     4ec:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <next_ingedrukt.8>
     4f0:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <next_ingedrukt.8+0x1>
     4f4:	01 97       	sbiw	r24, 0x01	; 1
     4f6:	99 f4       	brne	.+38     	; 0x51e <.L25>

000004f8 <.Loc.294>:
                       next_ingedrukt=0;
     4f8:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <next_ingedrukt.8+0x1>
     4fc:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <next_ingedrukt.8>

00000500 <.Loc.296>:
                        h=1;
     500:	81 e0       	ldi	r24, 0x01	; 1
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <h.10+0x1>
     508:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <h.10>
     50c:	08 c0       	rjmp	.+16     	; 0x51e <.L25>

0000050e <.L23>:
                 if (((PIN_knop&(1<<next))!=0)&&(next_ingedrukt==1))
     50e:	04 9b       	sbis	0x00, 4	; 0
     510:	06 c0       	rjmp	.+12     	; 0x51e <.L25>

00000512 <.Loc.300>:
     512:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <next_ingedrukt.8>
     516:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <next_ingedrukt.8+0x1>
     51a:	01 97       	sbiw	r24, 0x01	; 1
     51c:	f9 f2       	breq	.-66     	; 0x4dc <.L24>

0000051e <.L25>:
                if (((PIN_knop&(1<<back))==0)&&(back_ingedrukt==0)) // aantal pakjes weer op 0 zetten en verwijderen hoeveel er is ingevoerd als back is ingedrukt
     51e:	00 99       	sbic	0x00, 0	; 0
     520:	21 c0       	rjmp	.+66     	; 0x564 <.L26>

00000522 <.Loc.303>:
     522:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <back_ingedrukt.7>
     526:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <back_ingedrukt.7+0x1>
     52a:	89 2b       	or	r24, r25
     52c:	d9 f4       	brne	.+54     	; 0x564 <.L26>

0000052e <.LBB178>:
     52e:	8f e3       	ldi	r24, 0x3F	; 63
     530:	9c e9       	ldi	r25, 0x9C	; 156

00000532 <.L1^B16>:
     532:	01 97       	sbiw	r24, 0x01	; 1
     534:	f1 f7       	brne	.-4      	; 0x532 <.L1^B16>
     536:	00 c0       	rjmp	.+0      	; 0x538 <L0^A>

00000538 <L0^A>:
	...

0000053a <.LBE178>:
                    if (((PIN_knop&(1<<back))==0)&&(back_ingedrukt==0))
     53a:	00 99       	sbic	0x00, 0	; 0
     53c:	13 c0       	rjmp	.+38     	; 0x564 <.L26>

0000053e <.Loc.315>:
     53e:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <back_ingedrukt.7>
     542:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <back_ingedrukt.7+0x1>
     546:	89 2b       	or	r24, r25
     548:	69 f4       	brne	.+26     	; 0x564 <.L26>

0000054a <.Loc.316>:
                        back_ingedrukt=1;
     54a:	81 e0       	ldi	r24, 0x01	; 1
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <back_ingedrukt.7+0x1>
     552:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <back_ingedrukt.7>

00000556 <.Loc.318>:
                        pakjes=0;
     556:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <pakjes+0x1>
     55a:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <pakjes>

0000055e <.Loc.320>:
                 if (((PIN_knop&(1<<back))!=0)&&(back_ingedrukt==1))
     55e:	00 9b       	sbis	0x00, 0	; 0
     560:	01 c4       	rjmp	.+2050   	; 0xd64 <.L13>
     562:	09 c0       	rjmp	.+18     	; 0x576 <.L27>

00000564 <.L26>:
     564:	00 9b       	sbis	0x00, 0	; 0
     566:	fe c3       	rjmp	.+2044   	; 0xd64 <.L13>

00000568 <.Loc.324>:
     568:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <back_ingedrukt.7>
     56c:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <back_ingedrukt.7+0x1>
     570:	01 97       	sbiw	r24, 0x01	; 1
     572:	09 f0       	breq	.+2      	; 0x576 <.L27>

00000574 <L0^A>:
     574:	f7 c3       	rjmp	.+2030   	; 0xd64 <.L13>

00000576 <.L27>:
     576:	8f e3       	ldi	r24, 0x3F	; 63
     578:	9c e9       	ldi	r25, 0x9C	; 156

0000057a <.L1^B17>:
     57a:	01 97       	sbiw	r24, 0x01	; 1
     57c:	f1 f7       	brne	.-4      	; 0x57a <.L1^B17>
     57e:	00 c0       	rjmp	.+0      	; 0x580 <L0^A>

00000580 <L0^A>:
	...

00000582 <.LBE180>:
                    if (((PIN_knop&(1<<back))!=0)&&(back_ingedrukt==1))
     582:	00 9b       	sbis	0x00, 0	; 0
     584:	ef c3       	rjmp	.+2014   	; 0xd64 <.L13>

00000586 <.Loc.336>:
     586:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <back_ingedrukt.7>
     58a:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <back_ingedrukt.7+0x1>
     58e:	01 97       	sbiw	r24, 0x01	; 1
     590:	09 f0       	breq	.+2      	; 0x594 <.Loc.337>

00000592 <L0^A>:
     592:	e8 c3       	rjmp	.+2000   	; 0xd64 <.L13>

00000594 <.Loc.337>:
                        display(segmentcodes[0],3);
     594:	63 e0       	ldi	r22, 0x03	; 3
     596:	70 e0       	ldi	r23, 0x00	; 0
     598:	8c ef       	ldi	r24, 0xFC	; 252
     59a:	0e 94 bb 00 	call	0x176	; 0x176 <display>

0000059e <.LBB182>:
     59e:	8f e9       	ldi	r24, 0x9F	; 159
     5a0:	9f e0       	ldi	r25, 0x0F	; 15

000005a2 <.L1^B18>:
     5a2:	01 97       	sbiw	r24, 0x01	; 1
     5a4:	f1 f7       	brne	.-4      	; 0x5a2 <.L1^B18>
     5a6:	00 c0       	rjmp	.+0      	; 0x5a8 <L0^A>

000005a8 <L0^A>:
	...

000005aa <.LBE182>:
                        display((char)~0b11111111,012);
     5aa:	6a e0       	ldi	r22, 0x0A	; 10
     5ac:	70 e0       	ldi	r23, 0x00	; 0
     5ae:	80 e0       	ldi	r24, 0x00	; 0
     5b0:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000005b4 <.LBB184>:
     5b4:	8f e9       	ldi	r24, 0x9F	; 159
     5b6:	9f e0       	ldi	r25, 0x0F	; 15

000005b8 <.L1^B19>:
     5b8:	01 97       	sbiw	r24, 0x01	; 1
     5ba:	f1 f7       	brne	.-4      	; 0x5b8 <.L1^B19>
     5bc:	00 c0       	rjmp	.+0      	; 0x5be <L0^A>

000005be <L0^A>:
	...

000005c0 <.LBE184>:
                        back_ingedrukt=1;
     5c0:	81 e0       	ldi	r24, 0x01	; 1
     5c2:	90 e0       	ldi	r25, 0x00	; 0
     5c4:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <back_ingedrukt.7+0x1>
     5c8:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <back_ingedrukt.7>
     5cc:	cb c3       	rjmp	.+1942   	; 0xd64 <.L13>

000005ce <.L65>:
                    if(((PIN_knop&(1<<plus))==0)&&(plus1_ingedrukt==0)) // punt pisplay bij het streepje als plus is ingedrukt
     5ce:	02 99       	sbic	0x00, 2	; 0
     5d0:	33 c0       	rjmp	.+102    	; 0x638 <.L31>

000005d2 <.Loc.361>:
     5d2:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <plus1_ingedrukt.6>
     5d6:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <plus1_ingedrukt.6+0x1>
     5da:	89 2b       	or	r24, r25
     5dc:	69 f5       	brne	.+90     	; 0x638 <.L31>

000005de <.LBB186>:
     5de:	8f e3       	ldi	r24, 0x3F	; 63
     5e0:	9c e9       	ldi	r25, 0x9C	; 156

000005e2 <.L1^B20>:
     5e2:	01 97       	sbiw	r24, 0x01	; 1
     5e4:	f1 f7       	brne	.-4      	; 0x5e2 <.L1^B20>
     5e6:	00 c0       	rjmp	.+0      	; 0x5e8 <L0^A>

000005e8 <L0^A>:
	...

000005ea <.LBE186>:
                        if (((PIN_knop&(1<<plus))==0)&&(plus1_ingedrukt==0))
     5ea:	02 99       	sbic	0x00, 2	; 0
     5ec:	25 c0       	rjmp	.+74     	; 0x638 <.L31>

000005ee <.Loc.373>:
     5ee:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <plus1_ingedrukt.6>
     5f2:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <plus1_ingedrukt.6+0x1>
     5f6:	89 2b       	or	r24, r25
     5f8:	f9 f4       	brne	.+62     	; 0x638 <.L31>

000005fa <.Loc.374>:
                            letter=1;
     5fa:	81 e0       	ldi	r24, 0x01	; 1
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <letter+0x1>
     602:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <letter>

00000606 <.Loc.376>:
                            plus1_ingedrukt=1;
     606:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <plus1_ingedrukt.6+0x1>
     60a:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <plus1_ingedrukt.6>

0000060e <.Loc.378>:
                    if(((PIN_knop&(1<<plus))!=0)&&(plus1_ingedrukt==1))
     60e:	02 9b       	sbis	0x00, 2	; 0
     610:	1b c0       	rjmp	.+54     	; 0x648 <.L33>

00000612 <.L32>:
     612:	8f e3       	ldi	r24, 0x3F	; 63
     614:	9c e9       	ldi	r25, 0x9C	; 156

00000616 <.L1^B21>:
     616:	01 97       	sbiw	r24, 0x01	; 1
     618:	f1 f7       	brne	.-4      	; 0x616 <.L1^B21>
     61a:	00 c0       	rjmp	.+0      	; 0x61c <L0^A>

0000061c <L0^A>:
	...

0000061e <.LBE188>:
                        if (((PIN_knop&(1<<plus))!=0)&&(plus1_ingedrukt==1))
     61e:	02 9b       	sbis	0x00, 2	; 0
     620:	13 c0       	rjmp	.+38     	; 0x648 <.L33>

00000622 <.Loc.391>:
     622:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <plus1_ingedrukt.6>
     626:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <plus1_ingedrukt.6+0x1>
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	69 f4       	brne	.+26     	; 0x648 <.L33>

0000062e <.Loc.392>:
                            plus1_ingedrukt=0;
     62e:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <plus1_ingedrukt.6+0x1>
     632:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <plus1_ingedrukt.6>
     636:	08 c0       	rjmp	.+16     	; 0x648 <.L33>

00000638 <.L31>:
                    if(((PIN_knop&(1<<plus))!=0)&&(plus1_ingedrukt==1))
     638:	02 9b       	sbis	0x00, 2	; 0
     63a:	06 c0       	rjmp	.+12     	; 0x648 <.L33>

0000063c <.Loc.396>:
     63c:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <plus1_ingedrukt.6>
     640:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <plus1_ingedrukt.6+0x1>
     644:	01 97       	sbiw	r24, 0x01	; 1
     646:	29 f3       	breq	.-54     	; 0x612 <.L32>

00000648 <.L33>:
                            display(segmentcodes[1],3); // laat 1 - L r op display zien met punt bij -
     648:	63 e0       	ldi	r22, 0x03	; 3
     64a:	70 e0       	ldi	r23, 0x00	; 0
     64c:	80 e6       	ldi	r24, 0x60	; 96
     64e:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000652 <.LBB190>:
     652:	8f e9       	ldi	r24, 0x9F	; 159
     654:	9f e0       	ldi	r25, 0x0F	; 15

00000656 <.L1^B22>:
     656:	01 97       	sbiw	r24, 0x01	; 1
     658:	f1 f7       	brne	.-4      	; 0x656 <.L1^B22>
     65a:	00 c0       	rjmp	.+0      	; 0x65c <L0^A>

0000065c <L0^A>:
	...

0000065e <.LBE190>:
                            display((char)~0b11111100,2);
     65e:	62 e0       	ldi	r22, 0x02	; 2
     660:	70 e0       	ldi	r23, 0x00	; 0
     662:	83 e0       	ldi	r24, 0x03	; 3
     664:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000668 <.LBB192>:
     668:	8f e9       	ldi	r24, 0x9F	; 159
     66a:	9f e0       	ldi	r25, 0x0F	; 15

0000066c <.L1^B23>:
     66c:	01 97       	sbiw	r24, 0x01	; 1
     66e:	f1 f7       	brne	.-4      	; 0x66c <.L1^B23>
     670:	00 c0       	rjmp	.+0      	; 0x672 <L0^A>

00000672 <L0^A>:
	...

00000674 <.LBE192>:
                            display((char)~0b11100011,1);
     674:	61 e0       	ldi	r22, 0x01	; 1
     676:	70 e0       	ldi	r23, 0x00	; 0
     678:	8c e1       	ldi	r24, 0x1C	; 28
     67a:	0e 94 bb 00 	call	0x176	; 0x176 <display>

0000067e <.LBB194>:
     67e:	8f e9       	ldi	r24, 0x9F	; 159
     680:	9f e0       	ldi	r25, 0x0F	; 15

00000682 <.L1^B24>:
     682:	01 97       	sbiw	r24, 0x01	; 1
     684:	f1 f7       	brne	.-4      	; 0x682 <.L1^B24>
     686:	00 c0       	rjmp	.+0      	; 0x688 <L0^A>

00000688 <L0^A>:
	...

0000068a <.LBE194>:
                            display((char)~0b01110011,0);
     68a:	60 e0       	ldi	r22, 0x00	; 0
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	8c e8       	ldi	r24, 0x8C	; 140
     690:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000694 <.LBB196>:
     694:	8f e9       	ldi	r24, 0x9F	; 159
     696:	9f e0       	ldi	r25, 0x0F	; 15

00000698 <.L1^B25>:
     698:	01 97       	sbiw	r24, 0x01	; 1
     69a:	f1 f7       	brne	.-4      	; 0x698 <.L1^B25>
     69c:	00 c0       	rjmp	.+0      	; 0x69e <L0^A>

0000069e <L0^A>:
	...

000006a0 <.LBE196>:
                            display((char)~0b11111111,0123);
     6a0:	63 e5       	ldi	r22, 0x53	; 83
     6a2:	70 e0       	ldi	r23, 0x00	; 0
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000006aa <.LBB198>:
     6aa:	8f e9       	ldi	r24, 0x9F	; 159
     6ac:	9f e0       	ldi	r25, 0x0F	; 15

000006ae <.L1^B26>:
     6ae:	01 97       	sbiw	r24, 0x01	; 1
     6b0:	f1 f7       	brne	.-4      	; 0x6ae <.L1^B26>
     6b2:	00 c0       	rjmp	.+0      	; 0x6b4 <L0^A>

000006b4 <L0^A>:
	...

000006b6 <.Loc.446>:
	}
	else
		__ticks = (uint16_t)__tmp;
	_delay_loop_2(__ticks);
#endif
}
     6b6:	d9 cd       	rjmp	.-1102   	; 0x26a <.L30>

000006b8 <.L28>:
                      if(((PIN_knop&(1<<plus))==0)&&(plus1_ingedrukt==0)) // punt display bij de letter L als plus is ingedrukt
     6b8:	02 99       	sbic	0x00, 2	; 0
     6ba:	57 c3       	rjmp	.+1710   	; 0xd6a <.L34>

000006bc <.Loc.450>:
     6bc:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <plus1_ingedrukt.6>
     6c0:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <plus1_ingedrukt.6+0x1>
     6c4:	89 2b       	or	r24, r25
     6c6:	09 f0       	breq	.+2      	; 0x6ca <.LBB200>

000006c8 <L0^A>:
     6c8:	50 c3       	rjmp	.+1696   	; 0xd6a <.L34>

000006ca <.LBB200>:
	__builtin_avr_delay_cycles(__ticks_dc);
     6ca:	8f e3       	ldi	r24, 0x3F	; 63
     6cc:	9c e9       	ldi	r25, 0x9C	; 156

000006ce <.L1^B27>:
     6ce:	01 97       	sbiw	r24, 0x01	; 1
     6d0:	f1 f7       	brne	.-4      	; 0x6ce <.L1^B27>
     6d2:	00 c0       	rjmp	.+0      	; 0x6d4 <L0^A>

000006d4 <L0^A>:
	...

000006d6 <.LBE200>:
                        if(((PIN_knop&(1<<plus))==0)&&(plus1_ingedrukt==0))
     6d6:	02 99       	sbic	0x00, 2	; 0
     6d8:	14 c0       	rjmp	.+40     	; 0x702 <.L35>

000006da <.Loc.462>:
     6da:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <plus1_ingedrukt.6>
     6de:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <plus1_ingedrukt.6+0x1>
     6e2:	89 2b       	or	r24, r25
     6e4:	71 f4       	brne	.+28     	; 0x702 <.L35>

000006e6 <.Loc.463>:
                            letter=2;
     6e6:	82 e0       	ldi	r24, 0x02	; 2
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <letter+0x1>
     6ee:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <letter>

000006f2 <.Loc.465>:
                            plus1_ingedrukt=1;
     6f2:	81 e0       	ldi	r24, 0x01	; 1
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <plus1_ingedrukt.6+0x1>
     6fa:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <plus1_ingedrukt.6>

000006fe <.Loc.467>:
                    if((((PIN_knop&(1<<plus))!=0)&&(letter==1))&&(plus1_ingedrukt==1))
     6fe:	80 b1       	in	r24, 0x00	; 0
     700:	36 c3       	rjmp	.+1644   	; 0xd6e <.L36>

00000702 <.L35>:
     702:	02 9b       	sbis	0x00, 2	; 0
     704:	34 c3       	rjmp	.+1640   	; 0xd6e <.L36>

00000706 <.Loc.471>:
     706:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <letter>
     70a:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <letter+0x1>
     70e:	01 97       	sbiw	r24, 0x01	; 1
     710:	09 f0       	breq	.+2      	; 0x714 <.L64>

00000712 <L0^A>:
     712:	2d c3       	rjmp	.+1626   	; 0xd6e <.L36>

00000714 <.L64>:
     714:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <plus1_ingedrukt.6>
     718:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <plus1_ingedrukt.6+0x1>
     71c:	01 97       	sbiw	r24, 0x01	; 1
     71e:	09 f0       	breq	.+2      	; 0x722 <.LBB202>

00000720 <L0^A>:
     720:	26 c3       	rjmp	.+1612   	; 0xd6e <.L36>

00000722 <.LBB202>:
     722:	8f e3       	ldi	r24, 0x3F	; 63
     724:	9c e9       	ldi	r25, 0x9C	; 156

00000726 <.L1^B28>:
     726:	01 97       	sbiw	r24, 0x01	; 1
     728:	f1 f7       	brne	.-4      	; 0x726 <.L1^B28>
     72a:	00 c0       	rjmp	.+0      	; 0x72c <L0^A>

0000072c <L0^A>:
	...

0000072e <.LBE202>:
                        if ((((PIN_knop&(1<<plus))!=0)&&(letter==1))&&(plus1_ingedrukt==1))
     72e:	02 9b       	sbis	0x00, 2	; 0
     730:	1e c3       	rjmp	.+1596   	; 0xd6e <.L36>

00000732 <.Loc.484>:
     732:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <letter>
     736:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <letter+0x1>
     73a:	01 97       	sbiw	r24, 0x01	; 1
     73c:	09 f0       	breq	.+2      	; 0x740 <.Loc.485>

0000073e <L0^A>:
     73e:	17 c3       	rjmp	.+1582   	; 0xd6e <.L36>

00000740 <.Loc.485>:
     740:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <plus1_ingedrukt.6>
     744:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <plus1_ingedrukt.6+0x1>
     748:	01 97       	sbiw	r24, 0x01	; 1
     74a:	09 f0       	breq	.+2      	; 0x74e <.Loc.486>

0000074c <L0^A>:
     74c:	10 c3       	rjmp	.+1568   	; 0xd6e <.L36>

0000074e <.Loc.486>:
                            plus1_ingedrukt=0;
     74e:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <plus1_ingedrukt.6+0x1>
     752:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <plus1_ingedrukt.6>
     756:	0b c3       	rjmp	.+1558   	; 0xd6e <.L36>

00000758 <.L29>:
                         if(((PIN_knop&(1<<plus))==0)&&(plus1_ingedrukt==0))// punt dispay bij de letter R als plus is ingedrukt
     758:	02 99       	sbic	0x00, 2	; 0
     75a:	33 c0       	rjmp	.+102    	; 0x7c2 <.L37>

0000075c <.Loc.490>:
     75c:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <plus1_ingedrukt.6>
     760:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <plus1_ingedrukt.6+0x1>
     764:	89 2b       	or	r24, r25
     766:	69 f5       	brne	.+90     	; 0x7c2 <.L37>

00000768 <.LBB204>:
     768:	8f e3       	ldi	r24, 0x3F	; 63
     76a:	9c e9       	ldi	r25, 0x9C	; 156

0000076c <.L1^B29>:
     76c:	01 97       	sbiw	r24, 0x01	; 1
     76e:	f1 f7       	brne	.-4      	; 0x76c <.L1^B29>
     770:	00 c0       	rjmp	.+0      	; 0x772 <L0^A>

00000772 <L0^A>:
	...

00000774 <.LBE204>:
                        if(((PIN_knop&(1<<plus))==0)&&(plus1_ingedrukt==0))
     774:	02 99       	sbic	0x00, 2	; 0
     776:	25 c0       	rjmp	.+74     	; 0x7c2 <.L37>

00000778 <.Loc.502>:
     778:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <plus1_ingedrukt.6>
     77c:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <plus1_ingedrukt.6+0x1>
     780:	89 2b       	or	r24, r25
     782:	f9 f4       	brne	.+62     	; 0x7c2 <.L37>

00000784 <.Loc.503>:
                            letter=0;
     784:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <letter+0x1>
     788:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <letter>

0000078c <.Loc.505>:
                            plus1_ingedrukt=1;
     78c:	81 e0       	ldi	r24, 0x01	; 1
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <plus1_ingedrukt.6+0x1>
     794:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <plus1_ingedrukt.6>

00000798 <.Loc.507>:
                        if(((PIN_knop&(1<<plus))!=0)&&(plus1_ingedrukt==1))
     798:	02 9b       	sbis	0x00, 2	; 0
     79a:	1b c0       	rjmp	.+54     	; 0x7d2 <.L39>

0000079c <.L38>:
     79c:	8f e3       	ldi	r24, 0x3F	; 63
     79e:	9c e9       	ldi	r25, 0x9C	; 156

000007a0 <.L1^B30>:
     7a0:	01 97       	sbiw	r24, 0x01	; 1
     7a2:	f1 f7       	brne	.-4      	; 0x7a0 <.L1^B30>
     7a4:	00 c0       	rjmp	.+0      	; 0x7a6 <L0^A>

000007a6 <L0^A>:
	...

000007a8 <.LBE206>:
                        if (((PIN_knop&(1<<plus))!=0)&&(plus1_ingedrukt==1))
     7a8:	02 9b       	sbis	0x00, 2	; 0
     7aa:	13 c0       	rjmp	.+38     	; 0x7d2 <.L39>

000007ac <.Loc.520>:
     7ac:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <plus1_ingedrukt.6>
     7b0:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <plus1_ingedrukt.6+0x1>
     7b4:	01 97       	sbiw	r24, 0x01	; 1
     7b6:	69 f4       	brne	.+26     	; 0x7d2 <.L39>

000007b8 <.Loc.521>:
                            plus1_ingedrukt=0;
     7b8:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <plus1_ingedrukt.6+0x1>
     7bc:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <plus1_ingedrukt.6>
     7c0:	08 c0       	rjmp	.+16     	; 0x7d2 <.L39>

000007c2 <.L37>:
                        if(((PIN_knop&(1<<plus))!=0)&&(plus1_ingedrukt==1))
     7c2:	02 9b       	sbis	0x00, 2	; 0
     7c4:	06 c0       	rjmp	.+12     	; 0x7d2 <.L39>

000007c6 <.Loc.525>:
     7c6:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <plus1_ingedrukt.6>
     7ca:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <plus1_ingedrukt.6+0x1>
     7ce:	01 97       	sbiw	r24, 0x01	; 1
     7d0:	29 f3       	breq	.-54     	; 0x79c <.L38>

000007d2 <.L39>:
                            display(segmentcodes[1],3);         //laat 1 - L r op display zien met punt bij r
     7d2:	63 e0       	ldi	r22, 0x03	; 3
     7d4:	70 e0       	ldi	r23, 0x00	; 0
     7d6:	80 e6       	ldi	r24, 0x60	; 96
     7d8:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000007dc <.LBB208>:
     7dc:	8f e9       	ldi	r24, 0x9F	; 159
     7de:	9f e0       	ldi	r25, 0x0F	; 15

000007e0 <.L1^B31>:
     7e0:	01 97       	sbiw	r24, 0x01	; 1
     7e2:	f1 f7       	brne	.-4      	; 0x7e0 <.L1^B31>
     7e4:	00 c0       	rjmp	.+0      	; 0x7e6 <L0^A>

000007e6 <L0^A>:
	...

000007e8 <.LBE208>:
                            display((char)~0b11111101,2);
     7e8:	62 e0       	ldi	r22, 0x02	; 2
     7ea:	70 e0       	ldi	r23, 0x00	; 0
     7ec:	82 e0       	ldi	r24, 0x02	; 2
     7ee:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000007f2 <.LBB210>:
     7f2:	8f e9       	ldi	r24, 0x9F	; 159
     7f4:	9f e0       	ldi	r25, 0x0F	; 15

000007f6 <.L1^B32>:
     7f6:	01 97       	sbiw	r24, 0x01	; 1
     7f8:	f1 f7       	brne	.-4      	; 0x7f6 <.L1^B32>
     7fa:	00 c0       	rjmp	.+0      	; 0x7fc <L0^A>

000007fc <L0^A>:
	...

000007fe <.LBE210>:
                            display((char)~0b11100011,1);
     7fe:	61 e0       	ldi	r22, 0x01	; 1
     800:	70 e0       	ldi	r23, 0x00	; 0
     802:	8c e1       	ldi	r24, 0x1C	; 28
     804:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000808 <.LBB212>:
     808:	8f e9       	ldi	r24, 0x9F	; 159
     80a:	9f e0       	ldi	r25, 0x0F	; 15

0000080c <.L1^B33>:
     80c:	01 97       	sbiw	r24, 0x01	; 1
     80e:	f1 f7       	brne	.-4      	; 0x80c <.L1^B33>
     810:	00 c0       	rjmp	.+0      	; 0x812 <L0^A>

00000812 <L0^A>:
	...

00000814 <.LBE212>:
                            display((char)~0b01110010,0);
     814:	60 e0       	ldi	r22, 0x00	; 0
     816:	70 e0       	ldi	r23, 0x00	; 0
     818:	8d e8       	ldi	r24, 0x8D	; 141
     81a:	0e 94 bb 00 	call	0x176	; 0x176 <display>

0000081e <.LBB214>:
     81e:	8f e9       	ldi	r24, 0x9F	; 159
     820:	9f e0       	ldi	r25, 0x0F	; 15

00000822 <.L1^B34>:
     822:	01 97       	sbiw	r24, 0x01	; 1
     824:	f1 f7       	brne	.-4      	; 0x822 <.L1^B34>
     826:	00 c0       	rjmp	.+0      	; 0x828 <L0^A>

00000828 <L0^A>:
	...

0000082a <.LBE214>:
                            display((char)~0b11111111,0123);
     82a:	63 e5       	ldi	r22, 0x53	; 83
     82c:	70 e0       	ldi	r23, 0x00	; 0
     82e:	80 e0       	ldi	r24, 0x00	; 0
     830:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000834 <.LBB216>:
     834:	8f e9       	ldi	r24, 0x9F	; 159
     836:	9f e0       	ldi	r25, 0x0F	; 15

00000838 <.L1^B35>:
     838:	01 97       	sbiw	r24, 0x01	; 1
     83a:	f1 f7       	brne	.-4      	; 0x838 <.L1^B35>
     83c:	00 c0       	rjmp	.+0      	; 0x83e <L0^A>

0000083e <L0^A>:
	...

00000840 <.Loc.575>:
}
     840:	14 cd       	rjmp	.-1496   	; 0x26a <.L30>

00000842 <.L40>:
                 if (((PIN_knop&(1<<next))!=0)&&(next1_ingedrukt==1))
     842:	04 9b       	sbis	0x00, 4	; 0
     844:	07 c0       	rjmp	.+14     	; 0x854 <.L42>

00000846 <.Loc.579>:
     846:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <next1_ingedrukt.5>
     84a:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <next1_ingedrukt.5+0x1>
     84e:	01 97       	sbiw	r24, 0x01	; 1
     850:	09 f4       	brne	.+2      	; 0x854 <.L42>

00000852 <L0^A>:
     852:	2b cd       	rjmp	.-1450   	; 0x2aa <.L41>

00000854 <.L42>:
                if (((PIN_knop&(1<<back))==0)&&(back1_ingedrukt==0)) // naar vorige stand als back is ingedrukt
     854:	00 99       	sbic	0x00, 0	; 0
     856:	21 c0       	rjmp	.+66     	; 0x89a <.L43>

00000858 <.Loc.582>:
     858:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <back1_ingedrukt.4>
     85c:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <back1_ingedrukt.4+0x1>
     860:	89 2b       	or	r24, r25
     862:	d9 f4       	brne	.+54     	; 0x89a <.L43>

00000864 <.LBB218>:
	__builtin_avr_delay_cycles(__ticks_dc);
     864:	8f e3       	ldi	r24, 0x3F	; 63
     866:	9c e9       	ldi	r25, 0x9C	; 156

00000868 <.L1^B36>:
     868:	01 97       	sbiw	r24, 0x01	; 1
     86a:	f1 f7       	brne	.-4      	; 0x868 <.L1^B36>
     86c:	00 c0       	rjmp	.+0      	; 0x86e <L0^A>

0000086e <L0^A>:
	...

00000870 <.LBE218>:
                    if (((PIN_knop&(1<<back))==0)&&(back1_ingedrukt==0))
     870:	00 99       	sbic	0x00, 0	; 0
     872:	13 c0       	rjmp	.+38     	; 0x89a <.L43>

00000874 <.Loc.594>:
     874:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <back1_ingedrukt.4>
     878:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <back1_ingedrukt.4+0x1>
     87c:	89 2b       	or	r24, r25
     87e:	69 f4       	brne	.+26     	; 0x89a <.L43>

00000880 <.Loc.595>:
                        letter=0;
     880:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <letter+0x1>
     884:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <letter>

00000888 <.Loc.597>:
                        back1_ingedrukt=1;
     888:	81 e0       	ldi	r24, 0x01	; 1
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <back1_ingedrukt.4+0x1>
     890:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <back1_ingedrukt.4>

00000894 <.Loc.599>:
                 if (((PIN_knop&(1<<back))!=0)&&(back1_ingedrukt==1))
     894:	00 9b       	sbis	0x00, 0	; 0
     896:	66 c2       	rjmp	.+1228   	; 0xd64 <.L13>
     898:	09 c0       	rjmp	.+18     	; 0x8ac <.L44>

0000089a <.L43>:
     89a:	00 9b       	sbis	0x00, 0	; 0
     89c:	63 c2       	rjmp	.+1222   	; 0xd64 <.L13>

0000089e <.Loc.603>:
     89e:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <back1_ingedrukt.4>
     8a2:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <back1_ingedrukt.4+0x1>
     8a6:	01 97       	sbiw	r24, 0x01	; 1
     8a8:	09 f0       	breq	.+2      	; 0x8ac <.L44>

000008aa <L0^A>:
     8aa:	5c c2       	rjmp	.+1208   	; 0xd64 <.L13>

000008ac <.L44>:
     8ac:	8f e3       	ldi	r24, 0x3F	; 63
     8ae:	9c e9       	ldi	r25, 0x9C	; 156

000008b0 <.L1^B37>:
     8b0:	01 97       	sbiw	r24, 0x01	; 1
     8b2:	f1 f7       	brne	.-4      	; 0x8b0 <.L1^B37>
     8b4:	00 c0       	rjmp	.+0      	; 0x8b6 <L0^A>

000008b6 <L0^A>:
	...

000008b8 <.LBE220>:
                    if (((PIN_knop&(1<<back))!=0)&&(back1_ingedrukt==1))
     8b8:	00 9b       	sbis	0x00, 0	; 0
     8ba:	54 c2       	rjmp	.+1192   	; 0xd64 <.L13>

000008bc <.Loc.615>:
     8bc:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <back1_ingedrukt.4>
     8c0:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <back1_ingedrukt.4+0x1>
     8c4:	01 97       	sbiw	r24, 0x01	; 1
     8c6:	09 f0       	breq	.+2      	; 0x8ca <.Loc.616>

000008c8 <L0^A>:
     8c8:	4d c2       	rjmp	.+1178   	; 0xd64 <.L13>

000008ca <.Loc.616>:
                        h=0;
     8ca:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <h.10+0x1>
     8ce:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <h.10>

000008d2 <.Loc.618>:
                        back1_ingedrukt=0;
     8d2:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <back1_ingedrukt.4+0x1>
     8d6:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <back1_ingedrukt.4>
     8da:	44 c2       	rjmp	.+1160   	; 0xd64 <.L13>

000008dc <.L14>:
            switch(lettertwee)
     8dc:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <lettertwee>
     8e0:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <lettertwee+0x1>
     8e4:	81 30       	cpi	r24, 0x01	; 1
     8e6:	91 05       	cpc	r25, r1
     8e8:	09 f4       	brne	.+2      	; 0x8ec <.LVUS168+0x1>

000008ea <L0^A>:
     8ea:	b5 c0       	rjmp	.+362    	; 0xa56 <.L45>
     8ec:	82 30       	cpi	r24, 0x02	; 2
     8ee:	91 05       	cpc	r25, r1
     8f0:	09 f4       	brne	.+2      	; 0x8f4 <L0^A+0x2>

000008f2 <L0^A>:
     8f2:	34 c1       	rjmp	.+616    	; 0xb5c <.L46>
     8f4:	89 2b       	or	r24, r25
     8f6:	d1 f1       	breq	.+116    	; 0x96c <.L66>

000008f8 <.L47>:
             if (((PIN_knop&(1<<next))==0)&&(next2_ingedrukt==0)) // ga naar volgende stand als next is ingedrukt
     8f8:	04 99       	sbic	0x00, 4	; 0
     8fa:	a5 c1       	rjmp	.+842    	; 0xc46 <.L56>

000008fc <.Loc.623>:
     8fc:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <next2_ingedrukt.2>
     900:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <next2_ingedrukt.2+0x1>
     904:	89 2b       	or	r24, r25
     906:	09 f0       	breq	.+2      	; 0x90a <.LBB222>

00000908 <L0^A>:
     908:	9e c1       	rjmp	.+828    	; 0xc46 <.L56>

0000090a <.LBB222>:
     90a:	8f e3       	ldi	r24, 0x3F	; 63
     90c:	9c e9       	ldi	r25, 0x9C	; 156

0000090e <.L1^B38>:
     90e:	01 97       	sbiw	r24, 0x01	; 1
     910:	f1 f7       	brne	.-4      	; 0x90e <.L1^B38>
     912:	00 c0       	rjmp	.+0      	; 0x914 <L0^A>

00000914 <L0^A>:
	...

00000916 <.LBE222>:
                    if (((PIN_knop&(1<<next))==0)&&(next2_ingedrukt==0))
     916:	04 99       	sbic	0x00, 4	; 0
     918:	96 c1       	rjmp	.+812    	; 0xc46 <.L56>

0000091a <.Loc.635>:
     91a:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <next2_ingedrukt.2>
     91e:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <next2_ingedrukt.2+0x1>
     922:	89 2b       	or	r24, r25
     924:	09 f0       	breq	.+2      	; 0x928 <.Loc.636>

00000926 <L0^A>:
     926:	8f c1       	rjmp	.+798    	; 0xc46 <.L56>

00000928 <.Loc.636>:
                        next2_ingedrukt=1;
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	90 93 2d 02 	sts	0x022D, r25	; 0x80022d <next2_ingedrukt.2+0x1>
     930:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <next2_ingedrukt.2>

00000934 <.Loc.638>:
                 if (((PIN_knop&(1<<next))!=0)&&(next2_ingedrukt==1))
     934:	04 9b       	sbis	0x00, 4	; 0
     936:	90 c1       	rjmp	.+800    	; 0xc58 <.L58>

00000938 <.L57>:
     938:	8f e3       	ldi	r24, 0x3F	; 63
     93a:	9c e9       	ldi	r25, 0x9C	; 156

0000093c <.L1^B39>:
     93c:	01 97       	sbiw	r24, 0x01	; 1
     93e:	f1 f7       	brne	.-4      	; 0x93c <.L1^B39>
     940:	00 c0       	rjmp	.+0      	; 0x942 <L0^A>

00000942 <L0^A>:
	...

00000944 <.LBE224>:
                    if (((PIN_knop&(1<<next))!=0)&&(next2_ingedrukt==1))
     944:	04 9b       	sbis	0x00, 4	; 0
     946:	88 c1       	rjmp	.+784    	; 0xc58 <.L58>

00000948 <.Loc.651>:
     948:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <next2_ingedrukt.2>
     94c:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <next2_ingedrukt.2+0x1>
     950:	01 97       	sbiw	r24, 0x01	; 1
     952:	09 f0       	breq	.+2      	; 0x956 <.Loc.652>

00000954 <L0^A>:
     954:	81 c1       	rjmp	.+770    	; 0xc58 <.L58>

00000956 <.Loc.652>:
                        next2_ingedrukt=0;
     956:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <next2_ingedrukt.2+0x1>
     95a:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <next2_ingedrukt.2>

0000095e <.Loc.654>:
                        h=3;
     95e:	83 e0       	ldi	r24, 0x03	; 3
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <h.10+0x1>
     966:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <h.10>
     96a:	76 c1       	rjmp	.+748    	; 0xc58 <.L58>

0000096c <.L66>:
                    if(((PIN_knop&(1<<plus))==0)&&(plus2_ingedrukt==0)) // punt pisplay bij het streepje als plus is ingedrukt
     96c:	02 99       	sbic	0x00, 2	; 0
     96e:	33 c0       	rjmp	.+102    	; 0x9d6 <.L48>

00000970 <.Loc.658>:
     970:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <plus2_ingedrukt.3>
     974:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <plus2_ingedrukt.3+0x1>
     978:	89 2b       	or	r24, r25
     97a:	69 f5       	brne	.+90     	; 0x9d6 <.L48>

0000097c <.LBB226>:
     97c:	8f e3       	ldi	r24, 0x3F	; 63
     97e:	9c e9       	ldi	r25, 0x9C	; 156

00000980 <.L1^B40>:
     980:	01 97       	sbiw	r24, 0x01	; 1
     982:	f1 f7       	brne	.-4      	; 0x980 <.L1^B40>
     984:	00 c0       	rjmp	.+0      	; 0x986 <L0^A>

00000986 <L0^A>:
	...

00000988 <.LBE226>:
                        if (((PIN_knop&(1<<plus))==0)&&(plus2_ingedrukt==0))
     988:	02 99       	sbic	0x00, 2	; 0
     98a:	25 c0       	rjmp	.+74     	; 0x9d6 <.L48>

0000098c <.Loc.670>:
     98c:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <plus2_ingedrukt.3>
     990:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <plus2_ingedrukt.3+0x1>
     994:	89 2b       	or	r24, r25
     996:	f9 f4       	brne	.+62     	; 0x9d6 <.L48>

00000998 <.Loc.671>:
                            lettertwee=1;
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <lettertwee+0x1>
     9a0:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <lettertwee>

000009a4 <.Loc.673>:
                            plus2_ingedrukt=1;
     9a4:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <plus2_ingedrukt.3+0x1>
     9a8:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <plus2_ingedrukt.3>

000009ac <.Loc.675>:
                    if(((PIN_knop&(1<<plus))!=0)&&(plus2_ingedrukt==1))
     9ac:	02 9b       	sbis	0x00, 2	; 0
     9ae:	1b c0       	rjmp	.+54     	; 0x9e6 <.L50>

000009b0 <.L49>:
     9b0:	8f e3       	ldi	r24, 0x3F	; 63
     9b2:	9c e9       	ldi	r25, 0x9C	; 156

000009b4 <.L1^B41>:
     9b4:	01 97       	sbiw	r24, 0x01	; 1
     9b6:	f1 f7       	brne	.-4      	; 0x9b4 <.L1^B41>
     9b8:	00 c0       	rjmp	.+0      	; 0x9ba <L0^A>

000009ba <L0^A>:
	...

000009bc <.LBE228>:
                        if (((PIN_knop&(1<<plus))!=0)&&(plus2_ingedrukt==1))
     9bc:	02 9b       	sbis	0x00, 2	; 0
     9be:	13 c0       	rjmp	.+38     	; 0x9e6 <.L50>

000009c0 <.Loc.688>:
     9c0:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <plus2_ingedrukt.3>
     9c4:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <plus2_ingedrukt.3+0x1>
     9c8:	01 97       	sbiw	r24, 0x01	; 1
     9ca:	69 f4       	brne	.+26     	; 0x9e6 <.L50>

000009cc <.Loc.689>:
                            plus2_ingedrukt=0;
     9cc:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <plus2_ingedrukt.3+0x1>
     9d0:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <plus2_ingedrukt.3>
     9d4:	08 c0       	rjmp	.+16     	; 0x9e6 <.L50>

000009d6 <.L48>:
                    if(((PIN_knop&(1<<plus))!=0)&&(plus2_ingedrukt==1))
     9d6:	02 9b       	sbis	0x00, 2	; 0
     9d8:	06 c0       	rjmp	.+12     	; 0x9e6 <.L50>

000009da <.Loc.693>:
     9da:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <plus2_ingedrukt.3>
     9de:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <plus2_ingedrukt.3+0x1>
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	29 f3       	breq	.-54     	; 0x9b0 <.L49>

000009e6 <.L50>:
                            display(segmentcodes[2],3);      // laat 1 - L r op display zien met punt bij -
     9e6:	63 e0       	ldi	r22, 0x03	; 3
     9e8:	70 e0       	ldi	r23, 0x00	; 0
     9ea:	8a ed       	ldi	r24, 0xDA	; 218
     9ec:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000009f0 <.LBB230>:
     9f0:	8f e9       	ldi	r24, 0x9F	; 159
     9f2:	9f e0       	ldi	r25, 0x0F	; 15

000009f4 <.L1^B42>:
     9f4:	01 97       	sbiw	r24, 0x01	; 1
     9f6:	f1 f7       	brne	.-4      	; 0x9f4 <.L1^B42>
     9f8:	00 c0       	rjmp	.+0      	; 0x9fa <L0^A>

000009fa <L0^A>:
	...

000009fc <.LBE230>:
                            display((char)~0b11111100,2);
     9fc:	62 e0       	ldi	r22, 0x02	; 2
     9fe:	70 e0       	ldi	r23, 0x00	; 0
     a00:	83 e0       	ldi	r24, 0x03	; 3
     a02:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000a06 <.LBB232>:
     a06:	8f e9       	ldi	r24, 0x9F	; 159
     a08:	9f e0       	ldi	r25, 0x0F	; 15

00000a0a <.L1^B43>:
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	f1 f7       	brne	.-4      	; 0xa0a <.L1^B43>
     a0e:	00 c0       	rjmp	.+0      	; 0xa10 <L0^A>

00000a10 <L0^A>:
	...

00000a12 <.LBE232>:
                            display((char)~0b11100011,1);
     a12:	61 e0       	ldi	r22, 0x01	; 1
     a14:	70 e0       	ldi	r23, 0x00	; 0
     a16:	8c e1       	ldi	r24, 0x1C	; 28
     a18:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000a1c <.LBB234>:
     a1c:	8f e9       	ldi	r24, 0x9F	; 159
     a1e:	9f e0       	ldi	r25, 0x0F	; 15

00000a20 <.L1^B44>:
     a20:	01 97       	sbiw	r24, 0x01	; 1
     a22:	f1 f7       	brne	.-4      	; 0xa20 <.L1^B44>
     a24:	00 c0       	rjmp	.+0      	; 0xa26 <L0^A>

00000a26 <L0^A>:
	...

00000a28 <.LBE234>:
                            display((char)~0b01110011,0);
     a28:	60 e0       	ldi	r22, 0x00	; 0
     a2a:	70 e0       	ldi	r23, 0x00	; 0
     a2c:	8c e8       	ldi	r24, 0x8C	; 140
     a2e:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000a32 <.LBB236>:
     a32:	8f e9       	ldi	r24, 0x9F	; 159
     a34:	9f e0       	ldi	r25, 0x0F	; 15

00000a36 <.L1^B45>:
     a36:	01 97       	sbiw	r24, 0x01	; 1
     a38:	f1 f7       	brne	.-4      	; 0xa36 <.L1^B45>
     a3a:	00 c0       	rjmp	.+0      	; 0xa3c <L0^A>

00000a3c <L0^A>:
	...

00000a3e <.LBE236>:
                            display((char)~0b11111111,0123);
     a3e:	63 e5       	ldi	r22, 0x53	; 83
     a40:	70 e0       	ldi	r23, 0x00	; 0
     a42:	80 e0       	ldi	r24, 0x00	; 0
     a44:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000a48 <.LBB238>:
     a48:	8f e9       	ldi	r24, 0x9F	; 159
     a4a:	9f e0       	ldi	r25, 0x0F	; 15

00000a4c <.L1^B46>:
     a4c:	01 97       	sbiw	r24, 0x01	; 1
     a4e:	f1 f7       	brne	.-4      	; 0xa4c <.L1^B46>
     a50:	00 c0       	rjmp	.+0      	; 0xa52 <L0^A>

00000a52 <L0^A>:
	...

00000a54 <.Loc.743>:
}
     a54:	51 cf       	rjmp	.-350    	; 0x8f8 <.L47>

00000a56 <.L45>:
                      if(((PIN_knop&(1<<plus))==0)&&(plus2_ingedrukt==0)) // punt display bij de letter L als plus is ingedrukt
     a56:	02 99       	sbic	0x00, 2	; 0
     a58:	20 c0       	rjmp	.+64     	; 0xa9a <.L51>

00000a5a <.Loc.747>:
     a5a:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <plus2_ingedrukt.3>
     a5e:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <plus2_ingedrukt.3+0x1>
     a62:	89 2b       	or	r24, r25
     a64:	d1 f4       	brne	.+52     	; 0xa9a <.L51>

00000a66 <.LBB240>:
	__builtin_avr_delay_cycles(__ticks_dc);
     a66:	8f e3       	ldi	r24, 0x3F	; 63
     a68:	9c e9       	ldi	r25, 0x9C	; 156

00000a6a <.L1^B47>:
     a6a:	01 97       	sbiw	r24, 0x01	; 1
     a6c:	f1 f7       	brne	.-4      	; 0xa6a <.L1^B47>
     a6e:	00 c0       	rjmp	.+0      	; 0xa70 <L0^A>

00000a70 <L0^A>:
	...

00000a72 <.LBE240>:
                        if(((PIN_knop&(1<<plus))==0)&&(plus2_ingedrukt==0))
     a72:	02 99       	sbic	0x00, 2	; 0
     a74:	12 c0       	rjmp	.+36     	; 0xa9a <.L51>

00000a76 <.Loc.759>:
     a76:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <plus2_ingedrukt.3>
     a7a:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <plus2_ingedrukt.3+0x1>
     a7e:	89 2b       	or	r24, r25
     a80:	61 f4       	brne	.+24     	; 0xa9a <.L51>

00000a82 <.Loc.760>:
                            lettertwee=2;
     a82:	82 e0       	ldi	r24, 0x02	; 2
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <lettertwee+0x1>
     a8a:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <lettertwee>

00000a8e <.Loc.762>:
                            plus2_ingedrukt=1;
     a8e:	81 e0       	ldi	r24, 0x01	; 1
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <plus2_ingedrukt.3+0x1>
     a96:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <plus2_ingedrukt.3>

00000a9a <.L51>:
                    if((((PIN_knop&(1<<plus))!=0)&&(letter==1))&&(plus2_ingedrukt==1))
     a9a:	02 9b       	sbis	0x00, 2	; 0
     a9c:	06 c0       	rjmp	.+12     	; 0xaaa <.L52>

00000a9e <.Loc.766>:
     a9e:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <letter>
     aa2:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <letter+0x1>
     aa6:	01 97       	sbiw	r24, 0x01	; 1
     aa8:	c1 f1       	breq	.+112    	; 0xb1a <.L67>

00000aaa <.L52>:
                            display(segmentcodes[2],3);         //laat 1 - L r op display zien met punt bij L
     aaa:	63 e0       	ldi	r22, 0x03	; 3
     aac:	70 e0       	ldi	r23, 0x00	; 0
     aae:	8a ed       	ldi	r24, 0xDA	; 218
     ab0:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000ab4 <.LBB242>:
     ab4:	8f e9       	ldi	r24, 0x9F	; 159
     ab6:	9f e0       	ldi	r25, 0x0F	; 15

00000ab8 <.L1^B48>:
     ab8:	01 97       	sbiw	r24, 0x01	; 1
     aba:	f1 f7       	brne	.-4      	; 0xab8 <.L1^B48>
     abc:	00 c0       	rjmp	.+0      	; 0xabe <L0^A>

00000abe <L0^A>:
	...

00000ac0 <.LBE242>:
                            display((char)~0b11111101,2);
     ac0:	62 e0       	ldi	r22, 0x02	; 2
     ac2:	70 e0       	ldi	r23, 0x00	; 0
     ac4:	82 e0       	ldi	r24, 0x02	; 2
     ac6:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000aca <.LBB244>:
     aca:	8f e9       	ldi	r24, 0x9F	; 159
     acc:	9f e0       	ldi	r25, 0x0F	; 15

00000ace <.L1^B49>:
     ace:	01 97       	sbiw	r24, 0x01	; 1
     ad0:	f1 f7       	brne	.-4      	; 0xace <.L1^B49>
     ad2:	00 c0       	rjmp	.+0      	; 0xad4 <L0^A>

00000ad4 <L0^A>:
	...

00000ad6 <.LBE244>:
                            display((char)~0b11100010,1);
     ad6:	61 e0       	ldi	r22, 0x01	; 1
     ad8:	70 e0       	ldi	r23, 0x00	; 0
     ada:	8d e1       	ldi	r24, 0x1D	; 29
     adc:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000ae0 <.LBB246>:
     ae0:	8f e9       	ldi	r24, 0x9F	; 159
     ae2:	9f e0       	ldi	r25, 0x0F	; 15

00000ae4 <.L1^B50>:
     ae4:	01 97       	sbiw	r24, 0x01	; 1
     ae6:	f1 f7       	brne	.-4      	; 0xae4 <.L1^B50>
     ae8:	00 c0       	rjmp	.+0      	; 0xaea <L0^A>

00000aea <L0^A>:
	...

00000aec <.LBE246>:
                            display((char)~0b01110011,0);
     aec:	60 e0       	ldi	r22, 0x00	; 0
     aee:	70 e0       	ldi	r23, 0x00	; 0
     af0:	8c e8       	ldi	r24, 0x8C	; 140
     af2:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000af6 <.LBB248>:
     af6:	8f e9       	ldi	r24, 0x9F	; 159
     af8:	9f e0       	ldi	r25, 0x0F	; 15

00000afa <.L1^B51>:
     afa:	01 97       	sbiw	r24, 0x01	; 1
     afc:	f1 f7       	brne	.-4      	; 0xafa <.L1^B51>
     afe:	00 c0       	rjmp	.+0      	; 0xb00 <L0^A>

00000b00 <L0^A>:
	...

00000b02 <.LBE248>:
                            display((char)~0b11111111,0123);
     b02:	63 e5       	ldi	r22, 0x53	; 83
     b04:	70 e0       	ldi	r23, 0x00	; 0
     b06:	80 e0       	ldi	r24, 0x00	; 0
     b08:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000b0c <.LBB250>:
     b0c:	8f e9       	ldi	r24, 0x9F	; 159
     b0e:	9f e0       	ldi	r25, 0x0F	; 15

00000b10 <.L1^B52>:
     b10:	01 97       	sbiw	r24, 0x01	; 1
     b12:	f1 f7       	brne	.-4      	; 0xb10 <.L1^B52>
     b14:	00 c0       	rjmp	.+0      	; 0xb16 <L0^A>

00000b16 <L0^A>:
	...

00000b18 <.Loc.816>:
}
     b18:	ef ce       	rjmp	.-546    	; 0x8f8 <.L47>

00000b1a <.L67>:
                    if((((PIN_knop&(1<<plus))!=0)&&(letter==1))&&(plus2_ingedrukt==1))
     b1a:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <plus2_ingedrukt.3>
     b1e:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <plus2_ingedrukt.3+0x1>
     b22:	01 97       	sbiw	r24, 0x01	; 1
     b24:	11 f6       	brne	.-124    	; 0xaaa <.L52>

00000b26 <.LBB252>:
	__builtin_avr_delay_cycles(__ticks_dc);
     b26:	8f e3       	ldi	r24, 0x3F	; 63
     b28:	9c e9       	ldi	r25, 0x9C	; 156

00000b2a <.L1^B53>:
     b2a:	01 97       	sbiw	r24, 0x01	; 1
     b2c:	f1 f7       	brne	.-4      	; 0xb2a <.L1^B53>
     b2e:	00 c0       	rjmp	.+0      	; 0xb30 <L0^A>

00000b30 <L0^A>:
	...

00000b32 <.LBE252>:
                        if ((((PIN_knop&(1<<plus))!=0)&&(letter==1))&&(plus2_ingedrukt==1))
     b32:	02 9b       	sbis	0x00, 2	; 0
     b34:	ba cf       	rjmp	.-140    	; 0xaaa <.L52>

00000b36 <.Loc.830>:
     b36:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <letter>
     b3a:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <letter+0x1>
     b3e:	01 97       	sbiw	r24, 0x01	; 1
     b40:	09 f0       	breq	.+2      	; 0xb44 <.Loc.831>

00000b42 <L0^A>:
     b42:	b3 cf       	rjmp	.-154    	; 0xaaa <.L52>

00000b44 <.Loc.831>:
     b44:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <plus2_ingedrukt.3>
     b48:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <plus2_ingedrukt.3+0x1>
     b4c:	01 97       	sbiw	r24, 0x01	; 1
     b4e:	09 f0       	breq	.+2      	; 0xb52 <.Loc.832>

00000b50 <L0^A>:
     b50:	ac cf       	rjmp	.-168    	; 0xaaa <.L52>

00000b52 <.Loc.832>:
                            plus2_ingedrukt=0;
     b52:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <plus2_ingedrukt.3+0x1>
     b56:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <plus2_ingedrukt.3>
     b5a:	a7 cf       	rjmp	.-178    	; 0xaaa <.L52>

00000b5c <.L46>:
                         if(((PIN_knop&(1<<plus))==0)&&(plus2_ingedrukt==0))        // punt dispay bij de letter R als plus is ingedrukt
     b5c:	02 99       	sbic	0x00, 2	; 0
     b5e:	33 c0       	rjmp	.+102    	; 0xbc6 <.L53>

00000b60 <.Loc.836>:
     b60:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <plus2_ingedrukt.3>
     b64:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <plus2_ingedrukt.3+0x1>
     b68:	89 2b       	or	r24, r25
     b6a:	69 f5       	brne	.+90     	; 0xbc6 <.L53>

00000b6c <.LBB254>:
     b6c:	8f e3       	ldi	r24, 0x3F	; 63
     b6e:	9c e9       	ldi	r25, 0x9C	; 156

00000b70 <.L1^B54>:
     b70:	01 97       	sbiw	r24, 0x01	; 1
     b72:	f1 f7       	brne	.-4      	; 0xb70 <.L1^B54>
     b74:	00 c0       	rjmp	.+0      	; 0xb76 <L0^A>

00000b76 <L0^A>:
	...

00000b78 <.LBE254>:
                        if(((PIN_knop&(1<<plus))==0)&&(plus2_ingedrukt==0))
     b78:	02 99       	sbic	0x00, 2	; 0
     b7a:	25 c0       	rjmp	.+74     	; 0xbc6 <.L53>

00000b7c <.Loc.848>:
     b7c:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <plus2_ingedrukt.3>
     b80:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <plus2_ingedrukt.3+0x1>
     b84:	89 2b       	or	r24, r25
     b86:	f9 f4       	brne	.+62     	; 0xbc6 <.L53>

00000b88 <.Loc.849>:
                            lettertwee=0;
     b88:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <lettertwee+0x1>
     b8c:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <lettertwee>

00000b90 <.Loc.851>:
                            plus2_ingedrukt=1;
     b90:	81 e0       	ldi	r24, 0x01	; 1
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <plus2_ingedrukt.3+0x1>
     b98:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <plus2_ingedrukt.3>

00000b9c <.Loc.853>:
                        if(((PIN_knop&(1<<plus))!=0)&&(plus2_ingedrukt==1))
     b9c:	02 9b       	sbis	0x00, 2	; 0
     b9e:	1b c0       	rjmp	.+54     	; 0xbd6 <.L55>

00000ba0 <.L54>:
     ba0:	8f e3       	ldi	r24, 0x3F	; 63
     ba2:	9c e9       	ldi	r25, 0x9C	; 156

00000ba4 <.L1^B55>:
     ba4:	01 97       	sbiw	r24, 0x01	; 1
     ba6:	f1 f7       	brne	.-4      	; 0xba4 <.L1^B55>
     ba8:	00 c0       	rjmp	.+0      	; 0xbaa <L0^A>

00000baa <L0^A>:
	...

00000bac <.LBE256>:
                        if (((PIN_knop&(1<<plus))!=0)&&(plus2_ingedrukt==1))
     bac:	02 9b       	sbis	0x00, 2	; 0
     bae:	13 c0       	rjmp	.+38     	; 0xbd6 <.L55>

00000bb0 <.Loc.866>:
     bb0:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <plus2_ingedrukt.3>
     bb4:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <plus2_ingedrukt.3+0x1>
     bb8:	01 97       	sbiw	r24, 0x01	; 1
     bba:	69 f4       	brne	.+26     	; 0xbd6 <.L55>

00000bbc <.Loc.867>:
                            plus2_ingedrukt=0;
     bbc:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <plus2_ingedrukt.3+0x1>
     bc0:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <plus2_ingedrukt.3>
     bc4:	08 c0       	rjmp	.+16     	; 0xbd6 <.L55>

00000bc6 <.L53>:
                        if(((PIN_knop&(1<<plus))!=0)&&(plus2_ingedrukt==1))
     bc6:	02 9b       	sbis	0x00, 2	; 0
     bc8:	06 c0       	rjmp	.+12     	; 0xbd6 <.L55>

00000bca <.Loc.871>:
     bca:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <plus2_ingedrukt.3>
     bce:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <plus2_ingedrukt.3+0x1>
     bd2:	01 97       	sbiw	r24, 0x01	; 1
     bd4:	29 f3       	breq	.-54     	; 0xba0 <.L54>

00000bd6 <.L55>:
                            display(segmentcodes[2],3);          //laat 1 - L r op display zien met punt bij r
     bd6:	63 e0       	ldi	r22, 0x03	; 3
     bd8:	70 e0       	ldi	r23, 0x00	; 0
     bda:	8a ed       	ldi	r24, 0xDA	; 218
     bdc:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000be0 <.LBB258>:
     be0:	8f e9       	ldi	r24, 0x9F	; 159
     be2:	9f e0       	ldi	r25, 0x0F	; 15

00000be4 <.L1^B56>:
     be4:	01 97       	sbiw	r24, 0x01	; 1
     be6:	f1 f7       	brne	.-4      	; 0xbe4 <.L1^B56>
     be8:	00 c0       	rjmp	.+0      	; 0xbea <L0^A>

00000bea <L0^A>:
	...

00000bec <.LBE258>:
                            display((char)~0b11111101,2);
     bec:	62 e0       	ldi	r22, 0x02	; 2
     bee:	70 e0       	ldi	r23, 0x00	; 0
     bf0:	82 e0       	ldi	r24, 0x02	; 2
     bf2:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000bf6 <.LBB260>:
     bf6:	8f e9       	ldi	r24, 0x9F	; 159
     bf8:	9f e0       	ldi	r25, 0x0F	; 15

00000bfa <.L1^B57>:
     bfa:	01 97       	sbiw	r24, 0x01	; 1
     bfc:	f1 f7       	brne	.-4      	; 0xbfa <.L1^B57>
     bfe:	00 c0       	rjmp	.+0      	; 0xc00 <L0^A>

00000c00 <L0^A>:
	...

00000c02 <.LBE260>:
                            display((char)~0b11100011,1);
     c02:	61 e0       	ldi	r22, 0x01	; 1
     c04:	70 e0       	ldi	r23, 0x00	; 0
     c06:	8c e1       	ldi	r24, 0x1C	; 28
     c08:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000c0c <.LBB262>:
     c0c:	8f e9       	ldi	r24, 0x9F	; 159
     c0e:	9f e0       	ldi	r25, 0x0F	; 15

00000c10 <.L1^B58>:
     c10:	01 97       	sbiw	r24, 0x01	; 1
     c12:	f1 f7       	brne	.-4      	; 0xc10 <.L1^B58>
     c14:	00 c0       	rjmp	.+0      	; 0xc16 <L0^A>

00000c16 <L0^A>:
	...

00000c18 <.LBE262>:
                            display((char)~0b01110010,0);
     c18:	60 e0       	ldi	r22, 0x00	; 0
     c1a:	70 e0       	ldi	r23, 0x00	; 0
     c1c:	8d e8       	ldi	r24, 0x8D	; 141
     c1e:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000c22 <.LBB264>:
     c22:	8f e9       	ldi	r24, 0x9F	; 159
     c24:	9f e0       	ldi	r25, 0x0F	; 15

00000c26 <.L1^B59>:
     c26:	01 97       	sbiw	r24, 0x01	; 1
     c28:	f1 f7       	brne	.-4      	; 0xc26 <.L1^B59>
     c2a:	00 c0       	rjmp	.+0      	; 0xc2c <L0^A>

00000c2c <L0^A>:
	...

00000c2e <.LBE264>:
                            display((char)~0b11111111,0123);
     c2e:	63 e5       	ldi	r22, 0x53	; 83
     c30:	70 e0       	ldi	r23, 0x00	; 0
     c32:	80 e0       	ldi	r24, 0x00	; 0
     c34:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000c38 <.LBB266>:
     c38:	8f e9       	ldi	r24, 0x9F	; 159
     c3a:	9f e0       	ldi	r25, 0x0F	; 15

00000c3c <.L1^B60>:
     c3c:	01 97       	sbiw	r24, 0x01	; 1
     c3e:	f1 f7       	brne	.-4      	; 0xc3c <.L1^B60>
     c40:	00 c0       	rjmp	.+0      	; 0xc42 <L0^A>

00000c42 <L0^A>:
	...

00000c44 <.Loc.921>:
}
     c44:	59 ce       	rjmp	.-846    	; 0x8f8 <.L47>

00000c46 <.L56>:
                 if (((PIN_knop&(1<<next))!=0)&&(next2_ingedrukt==1))
     c46:	04 9b       	sbis	0x00, 4	; 0
     c48:	07 c0       	rjmp	.+14     	; 0xc58 <.L58>

00000c4a <.Loc.925>:
     c4a:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <next2_ingedrukt.2>
     c4e:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <next2_ingedrukt.2+0x1>
     c52:	01 97       	sbiw	r24, 0x01	; 1
     c54:	09 f4       	brne	.+2      	; 0xc58 <.L58>

00000c56 <L0^A>:
     c56:	70 ce       	rjmp	.-800    	; 0x938 <.L57>

00000c58 <.L58>:
                if (((PIN_knop&(1<<back))==0)&&(back2_ingedrukt==0))// ga naar vorige stand als back is ingedrukt
     c58:	00 99       	sbic	0x00, 0	; 0
     c5a:	21 c0       	rjmp	.+66     	; 0xc9e <.L59>

00000c5c <.Loc.928>:
     c5c:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <back2_ingedrukt.1>
     c60:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <back2_ingedrukt.1+0x1>
     c64:	89 2b       	or	r24, r25
     c66:	d9 f4       	brne	.+54     	; 0xc9e <.L59>

00000c68 <.LBB268>:
	__builtin_avr_delay_cycles(__ticks_dc);
     c68:	8f e3       	ldi	r24, 0x3F	; 63
     c6a:	9c e9       	ldi	r25, 0x9C	; 156

00000c6c <.L1^B61>:
     c6c:	01 97       	sbiw	r24, 0x01	; 1
     c6e:	f1 f7       	brne	.-4      	; 0xc6c <.L1^B61>
     c70:	00 c0       	rjmp	.+0      	; 0xc72 <L0^A>

00000c72 <L0^A>:
	...

00000c74 <.LBE268>:
                    if (((PIN_knop&(1<<back))==0)&&(back2_ingedrukt==0))
     c74:	00 99       	sbic	0x00, 0	; 0
     c76:	13 c0       	rjmp	.+38     	; 0xc9e <.L59>

00000c78 <.Loc.940>:
     c78:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <back2_ingedrukt.1>
     c7c:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <back2_ingedrukt.1+0x1>
     c80:	89 2b       	or	r24, r25
     c82:	69 f4       	brne	.+26     	; 0xc9e <.L59>

00000c84 <.Loc.941>:
                        lettertwee=0;
     c84:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <lettertwee+0x1>
     c88:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <lettertwee>

00000c8c <.Loc.943>:
                        back2_ingedrukt=1;
     c8c:	81 e0       	ldi	r24, 0x01	; 1
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <back2_ingedrukt.1+0x1>
     c94:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <back2_ingedrukt.1>

00000c98 <.Loc.945>:
                 if (((PIN_knop&(1<<back))!=0)&&(back2_ingedrukt==1))
     c98:	00 9b       	sbis	0x00, 0	; 0
     c9a:	64 c0       	rjmp	.+200    	; 0xd64 <.L13>
     c9c:	09 c0       	rjmp	.+18     	; 0xcb0 <.L60>

00000c9e <.L59>:
     c9e:	00 9b       	sbis	0x00, 0	; 0
     ca0:	61 c0       	rjmp	.+194    	; 0xd64 <.L13>

00000ca2 <.Loc.949>:
     ca2:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <back2_ingedrukt.1>
     ca6:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <back2_ingedrukt.1+0x1>
     caa:	01 97       	sbiw	r24, 0x01	; 1
     cac:	09 f0       	breq	.+2      	; 0xcb0 <.L60>

00000cae <L0^A>:
     cae:	5a c0       	rjmp	.+180    	; 0xd64 <.L13>

00000cb0 <.L60>:
     cb0:	8f e3       	ldi	r24, 0x3F	; 63
     cb2:	9c e9       	ldi	r25, 0x9C	; 156

00000cb4 <.L1^B62>:
     cb4:	01 97       	sbiw	r24, 0x01	; 1
     cb6:	f1 f7       	brne	.-4      	; 0xcb4 <.L1^B62>
     cb8:	00 c0       	rjmp	.+0      	; 0xcba <L0^A>

00000cba <L0^A>:
	...

00000cbc <.LBE270>:
                    if (((PIN_knop&(1<<back))!=0)&&(back2_ingedrukt==1))
     cbc:	00 9b       	sbis	0x00, 0	; 0
     cbe:	52 c0       	rjmp	.+164    	; 0xd64 <.L13>

00000cc0 <.Loc.961>:
     cc0:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <back2_ingedrukt.1>
     cc4:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <back2_ingedrukt.1+0x1>
     cc8:	01 97       	sbiw	r24, 0x01	; 1
     cca:	09 f0       	breq	.+2      	; 0xcce <.Loc.962>

00000ccc <L0^A>:
     ccc:	4b c0       	rjmp	.+150    	; 0xd64 <.L13>

00000cce <.Loc.962>:
                        h=1;
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <h.10+0x1>
     cd6:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <h.10>

00000cda <.Loc.964>:
                        back2_ingedrukt=0;
     cda:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <back2_ingedrukt.1+0x1>
     cde:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <back2_ingedrukt.1>
     ce2:	40 c0       	rjmp	.+128    	; 0xd64 <.L13>

00000ce4 <.L61>:
                 if (((PIN_knop&(1<<start))!=0)&&(start_ingedrukt==1))
     ce4:	06 9b       	sbis	0x00, 6	; 0
     ce6:	07 c0       	rjmp	.+14     	; 0xcf6 <.L63>

00000ce8 <.Loc.968>:
     ce8:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <start_ingedrukt.0>
     cec:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <start_ingedrukt.0+0x1>
     cf0:	01 97       	sbiw	r24, 0x01	; 1
     cf2:	09 f4       	brne	.+2      	; 0xcf6 <.L63>

00000cf4 <L0^A>:
     cf4:	17 cb       	rjmp	.-2514   	; 0x324 <.L62>

00000cf6 <.L63>:
                    }
                }
                            //display "fred" totdat gebruiker op start drukt
                            display((char)~0b01110001,3); // geef fred op display weer
     cf6:	63 e0       	ldi	r22, 0x03	; 3
     cf8:	70 e0       	ldi	r23, 0x00	; 0
     cfa:	8e e8       	ldi	r24, 0x8E	; 142
     cfc:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000d00 <.LBB272>:
     d00:	8f e9       	ldi	r24, 0x9F	; 159
     d02:	9f e0       	ldi	r25, 0x0F	; 15

00000d04 <.L1^B63>:
     d04:	01 97       	sbiw	r24, 0x01	; 1
     d06:	f1 f7       	brne	.-4      	; 0xd04 <.L1^B63>
     d08:	00 c0       	rjmp	.+0      	; 0xd0a <L0^A>

00000d0a <L0^A>:
	...

00000d0c <.LBE272>:
                            _delay_ms(1);
                            display((char)~0b01110011,2);
     d0c:	62 e0       	ldi	r22, 0x02	; 2
     d0e:	70 e0       	ldi	r23, 0x00	; 0
     d10:	8c e8       	ldi	r24, 0x8C	; 140
     d12:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000d16 <.LBB274>:
     d16:	8f e9       	ldi	r24, 0x9F	; 159
     d18:	9f e0       	ldi	r25, 0x0F	; 15

00000d1a <.L1^B64>:
     d1a:	01 97       	sbiw	r24, 0x01	; 1
     d1c:	f1 f7       	brne	.-4      	; 0xd1a <.L1^B64>
     d1e:	00 c0       	rjmp	.+0      	; 0xd20 <L0^A>

00000d20 <L0^A>:
	...

00000d22 <.LBE274>:
                            _delay_ms(1);
                            display((char)~0b01100001,1);
     d22:	61 e0       	ldi	r22, 0x01	; 1
     d24:	70 e0       	ldi	r23, 0x00	; 0
     d26:	8e e9       	ldi	r24, 0x9E	; 158
     d28:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000d2c <.LBB276>:
     d2c:	8f e9       	ldi	r24, 0x9F	; 159
     d2e:	9f e0       	ldi	r25, 0x0F	; 15

00000d30 <.L1^B65>:
     d30:	01 97       	sbiw	r24, 0x01	; 1
     d32:	f1 f7       	brne	.-4      	; 0xd30 <.L1^B65>
     d34:	00 c0       	rjmp	.+0      	; 0xd36 <L0^A>

00000d36 <L0^A>:
	...

00000d38 <.LBE276>:
                            _delay_ms(1);
                            display((char)~0b10000101,0);
     d38:	60 e0       	ldi	r22, 0x00	; 0
     d3a:	70 e0       	ldi	r23, 0x00	; 0
     d3c:	8a e7       	ldi	r24, 0x7A	; 122
     d3e:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000d42 <.LBB278>:
     d42:	8f e9       	ldi	r24, 0x9F	; 159
     d44:	9f e0       	ldi	r25, 0x0F	; 15

00000d46 <.L1^B66>:
     d46:	01 97       	sbiw	r24, 0x01	; 1
     d48:	f1 f7       	brne	.-4      	; 0xd46 <.L1^B66>
     d4a:	00 c0       	rjmp	.+0      	; 0xd4c <L0^A>

00000d4c <L0^A>:
	...

00000d4e <.LBE278>:
                            _delay_ms(1);
                            display((char)~0b11111111,0123);
     d4e:	63 e5       	ldi	r22, 0x53	; 83
     d50:	70 e0       	ldi	r23, 0x00	; 0
     d52:	80 e0       	ldi	r24, 0x00	; 0
     d54:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000d58 <.LBB280>:
     d58:	8f e9       	ldi	r24, 0x9F	; 159
     d5a:	9f e0       	ldi	r25, 0x0F	; 15

00000d5c <.L1^B67>:
     d5c:	01 97       	sbiw	r24, 0x01	; 1
     d5e:	f1 f7       	brne	.-4      	; 0xd5c <.L1^B67>
     d60:	00 c0       	rjmp	.+0      	; 0xd62 <L0^A>

00000d62 <L0^A>:
	...

00000d64 <.L13>:
                break;


        }

}
     d64:	df 91       	pop	r29
     d66:	cf 91       	pop	r28
     d68:	08 95       	ret

00000d6a <.L34>:
                    if((((PIN_knop&(1<<plus))!=0)&&(letter==1))&&(plus1_ingedrukt==1))
     d6a:	02 99       	sbic	0x00, 2	; 0
     d6c:	d3 cc       	rjmp	.-1626   	; 0x714 <.L64>

00000d6e <.L36>:
                            display(segmentcodes[1],3); //laat 1 - L r op display zien met punt bij L
     d6e:	63 e0       	ldi	r22, 0x03	; 3
     d70:	70 e0       	ldi	r23, 0x00	; 0
     d72:	80 e6       	ldi	r24, 0x60	; 96
     d74:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000d78 <.LBB282>:
     d78:	8f e9       	ldi	r24, 0x9F	; 159
     d7a:	9f e0       	ldi	r25, 0x0F	; 15

00000d7c <.L1^B68>:
     d7c:	01 97       	sbiw	r24, 0x01	; 1
     d7e:	f1 f7       	brne	.-4      	; 0xd7c <.L1^B68>
     d80:	00 c0       	rjmp	.+0      	; 0xd82 <L0^A>

00000d82 <L0^A>:
	...

00000d84 <.LBE282>:
                            display((char)~0b11111101,2);
     d84:	62 e0       	ldi	r22, 0x02	; 2
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	82 e0       	ldi	r24, 0x02	; 2
     d8a:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000d8e <.LBB284>:
     d8e:	8f e9       	ldi	r24, 0x9F	; 159
     d90:	9f e0       	ldi	r25, 0x0F	; 15

00000d92 <.L1^B69>:
     d92:	01 97       	sbiw	r24, 0x01	; 1
     d94:	f1 f7       	brne	.-4      	; 0xd92 <.L1^B69>
     d96:	00 c0       	rjmp	.+0      	; 0xd98 <L0^A>

00000d98 <L0^A>:
	...

00000d9a <.LBE284>:
                            display((char)~0b11100010,1);
     d9a:	61 e0       	ldi	r22, 0x01	; 1
     d9c:	70 e0       	ldi	r23, 0x00	; 0
     d9e:	8d e1       	ldi	r24, 0x1D	; 29
     da0:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000da4 <.LBB286>:
     da4:	8f e9       	ldi	r24, 0x9F	; 159
     da6:	9f e0       	ldi	r25, 0x0F	; 15

00000da8 <.L1^B70>:
     da8:	01 97       	sbiw	r24, 0x01	; 1
     daa:	f1 f7       	brne	.-4      	; 0xda8 <.L1^B70>
     dac:	00 c0       	rjmp	.+0      	; 0xdae <L0^A>

00000dae <L0^A>:
	...

00000db0 <.LBE286>:
                            display((char)~0b01110011,0);
     db0:	60 e0       	ldi	r22, 0x00	; 0
     db2:	70 e0       	ldi	r23, 0x00	; 0
     db4:	8c e8       	ldi	r24, 0x8C	; 140
     db6:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000dba <.LBB288>:
     dba:	8f e9       	ldi	r24, 0x9F	; 159
     dbc:	9f e0       	ldi	r25, 0x0F	; 15

00000dbe <.L1^B71>:
     dbe:	01 97       	sbiw	r24, 0x01	; 1
     dc0:	f1 f7       	brne	.-4      	; 0xdbe <.L1^B71>
     dc2:	00 c0       	rjmp	.+0      	; 0xdc4 <L0^A>

00000dc4 <L0^A>:
	...

00000dc6 <.LBE288>:
                            display((char)~0b11111111,0123);
     dc6:	63 e5       	ldi	r22, 0x53	; 83
     dc8:	70 e0       	ldi	r23, 0x00	; 0
     dca:	80 e0       	ldi	r24, 0x00	; 0
     dcc:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000dd0 <.LBB290>:
     dd0:	8f e9       	ldi	r24, 0x9F	; 159
     dd2:	9f e0       	ldi	r25, 0x0F	; 15

00000dd4 <.L1^B72>:
     dd4:	01 97       	sbiw	r24, 0x01	; 1
     dd6:	f1 f7       	brne	.-4      	; 0xdd4 <.L1^B72>
     dd8:	00 c0       	rjmp	.+0      	; 0xdda <L0^A>

00000dda <L0^A>:
	...

00000ddc <.Loc.1071>:
}
     ddc:	46 ca       	rjmp	.-2932   	; 0x26a <.L30>

00000dde <telblokje>:

void telblokje()
{
    IR_RUN();
     dde:	0e 94 fd 06 	call	0xdfa	; 0xdfa <IR_RUN>

00000de2 <.LVL163>:
    display_getal(tel);
     de2:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <tel>
     de6:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <tel+0x1>
     dea:	0e 94 ca 00 	call	0x194	; 0x194 <display_getal>

00000dee <.LVL164>:
                    display(segmentcodes[((tel+tel2)/1000)%10],3);
                    _delay_ms(1);
                    display((char)~0b11111111,0123);
                    _delay_ms(1);
    */
}
     dee:	08 95       	ret

00000df0 <IR_init>:

int tel=-2;

void IR_init()
{
    ddr_irout&=~(1<<pinnummer_ir);
     df0:	3f 98       	cbi	0x07, 7	; 7

00000df2 <.Loc.3>:
    ddr_led|=(1<<led1);
     df2:	3d 9a       	sbi	0x07, 5	; 7

00000df4 <.Loc.5>:
    port_led|=(1<<led1);
     df4:	45 9a       	sbi	0x08, 5	; 8

00000df6 <.Loc.7>:

    ddr_irout&=~(1<<pinnummer_ir2);
     df6:	3e 98       	cbi	0x07, 6	; 7

00000df8 <.Loc.9>:
}
     df8:	08 95       	ret

00000dfa <IR_RUN>:

void IR_RUN()// check of pin hoog of laag is
{

    static int gedetecteerd = 0;
    if ((pin_ir&(1<<pinnummer_ir))==0)
     dfa:	37 99       	sbic	0x06, 7	; 6
     dfc:	23 c0       	rjmp	.+70     	; 0xe44 <.L3>

00000dfe <.LBB10>:
	__builtin_avr_delay_cycles(__ticks_dc);
     dfe:	2f ef       	ldi	r18, 0xFF	; 255
     e00:	89 ef       	ldi	r24, 0xF9	; 249
     e02:	90 e0       	ldi	r25, 0x00	; 0

00000e04 <.L1^B1>:
     e04:	21 50       	subi	r18, 0x01	; 1
     e06:	80 40       	sbci	r24, 0x00	; 0
     e08:	90 40       	sbci	r25, 0x00	; 0
     e0a:	e1 f7       	brne	.-8      	; 0xe04 <.L1^B1>
     e0c:	00 c0       	rjmp	.+0      	; 0xe0e <L0^A>

00000e0e <L0^A>:
	...

00000e10 <.LBE10>:
    {
        _delay_ms(20); // debounce
        if ((pin_ir&(1<<pinnummer_ir))==0)
     e10:	37 99       	sbic	0x06, 7	; 6
     e12:	05 c0       	rjmp	.+10     	; 0xe1e <.L4>

00000e14 <.Loc.25>:
        {
            gedetecteerd=0;
     e14:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <gedetecteerd.1+0x1>
     e18:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <gedetecteerd.1>

00000e1c <.Loc.27>:
            port_led&=~(1<<led1);//led aan
     e1c:	45 98       	cbi	0x08, 5	; 8

00000e1e <.L4>:
            port_led|=(1<<led1);//led uit
        }
    }

    static int gedetecteerd2 = 0;
    if ((pin_ir&(1<<pinnummer_ir2))==0)
     e1e:	36 99       	sbic	0x06, 6	; 6
     e20:	33 c0       	rjmp	.+102    	; 0xe88 <.L6>

00000e22 <.LBB12>:
     e22:	2f ef       	ldi	r18, 0xFF	; 255
     e24:	89 ef       	ldi	r24, 0xF9	; 249
     e26:	90 e0       	ldi	r25, 0x00	; 0

00000e28 <.L1^B2>:
     e28:	21 50       	subi	r18, 0x01	; 1
     e2a:	80 40       	sbci	r24, 0x00	; 0
     e2c:	90 40       	sbci	r25, 0x00	; 0
     e2e:	e1 f7       	brne	.-8      	; 0xe28 <.L1^B2>
     e30:	00 c0       	rjmp	.+0      	; 0xe32 <L0^A>

00000e32 <L0^A>:
	...

00000e34 <.LBE12>:
    {
        _delay_ms(20); // debounce
        if ((pin_ir&(1<<pinnummer_ir2))==0)
     e34:	36 99       	sbic	0x06, 6	; 6
     e36:	49 c0       	rjmp	.+146    	; 0xeca <.L2>

00000e38 <.Loc.43>:
        {
            gedetecteerd2=0;
     e38:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <gedetecteerd2.0+0x1>
     e3c:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <gedetecteerd2.0>

00000e40 <.Loc.45>:
            port_led&=~(1<<led1);//led aan
     e40:	45 98       	cbi	0x08, 5	; 8
     e42:	08 95       	ret

00000e44 <.L3>:
     e44:	2f ef       	ldi	r18, 0xFF	; 255
     e46:	89 ef       	ldi	r24, 0xF9	; 249
     e48:	90 e0       	ldi	r25, 0x00	; 0

00000e4a <.L1^B3>:
     e4a:	21 50       	subi	r18, 0x01	; 1
     e4c:	80 40       	sbci	r24, 0x00	; 0
     e4e:	90 40       	sbci	r25, 0x00	; 0
     e50:	e1 f7       	brne	.-8      	; 0xe4a <.L1^B3>
     e52:	00 c0       	rjmp	.+0      	; 0xe54 <L0^A>

00000e54 <L0^A>:
	...

00000e56 <.LBE14>:
        if ((pin_ir&(1<<pinnummer_ir))!=0)
     e56:	37 9b       	sbis	0x06, 7	; 6
     e58:	e2 cf       	rjmp	.-60     	; 0xe1e <.L4>

00000e5a <.Loc.58>:
            if(!gedetecteerd)
     e5a:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <gedetecteerd.1>
     e5e:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <gedetecteerd.1+0x1>
     e62:	89 2b       	or	r24, r25
     e64:	49 f4       	brne	.+18     	; 0xe78 <.L5>

00000e66 <.Loc.60>:
                tel++;
     e66:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <tel>
     e6a:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <tel+0x1>
     e6e:	01 96       	adiw	r24, 0x01	; 1
     e70:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <tel+0x1>
     e74:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <tel>

00000e78 <.L5>:
            gedetecteerd=1;
     e78:	81 e0       	ldi	r24, 0x01	; 1
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <gedetecteerd.1+0x1>
     e80:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <gedetecteerd.1>

00000e84 <.Loc.64>:
            port_led|=(1<<led1);//led uit
     e84:	45 9a       	sbi	0x08, 5	; 8
     e86:	cb cf       	rjmp	.-106    	; 0xe1e <.L4>

00000e88 <.L6>:
     e88:	2f ef       	ldi	r18, 0xFF	; 255
     e8a:	89 ef       	ldi	r24, 0xF9	; 249
     e8c:	90 e0       	ldi	r25, 0x00	; 0

00000e8e <.L1^B4>:
     e8e:	21 50       	subi	r18, 0x01	; 1
     e90:	80 40       	sbci	r24, 0x00	; 0
     e92:	90 40       	sbci	r25, 0x00	; 0
     e94:	e1 f7       	brne	.-8      	; 0xe8e <.L1^B4>
     e96:	00 c0       	rjmp	.+0      	; 0xe98 <L0^A>

00000e98 <L0^A>:
	...

00000e9a <.LBE16>:
        }
    }
    else
    {
        _delay_ms(20); // debounce
        if ((pin_ir&(1<<pinnummer_ir2))!=0)
     e9a:	36 9b       	sbis	0x06, 6	; 6
     e9c:	16 c0       	rjmp	.+44     	; 0xeca <.L2>

00000e9e <.Loc.77>:
        {
            if(!gedetecteerd2)
     e9e:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <gedetecteerd2.0>
     ea2:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <gedetecteerd2.0+0x1>
     ea6:	89 2b       	or	r24, r25
     ea8:	49 f4       	brne	.+18     	; 0xebc <.L8>

00000eaa <.Loc.79>:
            {
                tel++;
     eaa:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <tel>
     eae:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <tel+0x1>
     eb2:	01 96       	adiw	r24, 0x01	; 1
     eb4:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <tel+0x1>
     eb8:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <tel>

00000ebc <.L8>:
            }
            gedetecteerd2=1;
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <gedetecteerd2.0+0x1>
     ec4:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <gedetecteerd2.0>

00000ec8 <.Loc.83>:
            port_led|=(1<<led1);//led uit
     ec8:	45 9a       	sbi	0x08, 5	; 8

00000eca <.L2>:
        }
    }
}
     eca:	08 95       	ret

00000ecc <main>:



int main(void)
{
    init_display();
     ecc:	0e 94 95 00 	call	0x12a	; 0x12a <init_display>

00000ed0 <.LVL0>:
    initNoodstop();
     ed0:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <initNoodstop>

00000ed4 <.L2>:

    while(1){
        aantal_pakje();
     ed4:	0e 94 0e 01 	call	0x21c	; 0x21c <aantal_pakje>

00000ed8 <.LVL2>:
    while(1){
     ed8:	fd cf       	rjmp	.-6      	; 0xed4 <.L2>

00000eda <metingPadbreedte>:

int padbreedte;

void metingPadbreedte(void){
    //neemt afmeting van de breedte van het pad in cm
    padbreedte = distance_left + distance_right + 13;
     eda:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
     ede:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>
     ee2:	20 91 5a 02 	lds	r18, 0x025A	; 0x80025a <distance_right>
     ee6:	30 91 5b 02 	lds	r19, 0x025B	; 0x80025b <distance_right+0x1>
     eea:	82 0f       	add	r24, r18
     eec:	93 1f       	adc	r25, r19

00000eee <.Loc.3>:
     eee:	0d 96       	adiw	r24, 0x0d	; 13

00000ef0 <.Loc.4>:
     ef0:	90 93 43 02 	sts	0x0243, r25	; 0x800243 <padbreedte+0x1>
     ef4:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <padbreedte>

00000ef8 <.Loc.5>:
}
     ef8:	08 95       	ret

00000efa <vooruit>:

void vooruit(void){
    //agv rijdt ongecontroleerd vooruit
    speedStepperLeft(1150);
     efa:	8e e7       	ldi	r24, 0x7E	; 126
     efc:	94 e0       	ldi	r25, 0x04	; 4
     efe:	0e 94 fe 09 	call	0x13fc	; 0x13fc <speedStepperLeft>

00000f02 <.LVL0>:
    speedStepperRight(1150);
     f02:	8e e7       	ldi	r24, 0x7E	; 126
     f04:	94 e0       	ldi	r25, 0x04	; 4
     f06:	0e 94 f7 09 	call	0x13ee	; 0x13ee <speedStepperRight>

00000f0a <.LVL1>:
}
     f0a:	08 95       	ret

00000f0c <stop>:

void stop(void){
    //agv stopt met rijden
    speedStepperLeft(0);
     f0c:	80 e0       	ldi	r24, 0x00	; 0
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	0e 94 fe 09 	call	0x13fc	; 0x13fc <speedStepperLeft>

00000f14 <.LVL2>:
    speedStepperRight(0);
     f14:	80 e0       	ldi	r24, 0x00	; 0
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	0e 94 f7 09 	call	0x13ee	; 0x13ee <speedStepperRight>

00000f1c <.LVL3>:
}
     f1c:	08 95       	ret

00000f1e <ramping>:

int ramping(int originalValue , int value){
     f1e:	26 2f       	mov	r18, r22
     f20:	37 2f       	mov	r19, r23

00000f22 <.Loc.16>:
    if(originalValue > value){
     f22:	28 17       	cp	r18, r24
     f24:	39 07       	cpc	r19, r25
     f26:	0c f4       	brge	.+2      	; 0xf2a <.L5>

00000f28 <.Loc.18>:
            originalValue --;
     f28:	01 97       	sbiw	r24, 0x01	; 1

00000f2a <.L5>:
    }
    if(originalValue < value){
     f2a:	82 17       	cp	r24, r18
     f2c:	93 07       	cpc	r25, r19
     f2e:	0c f4       	brge	.+2      	; 0xf32 <.L6>

00000f30 <.Loc.22>:
            originalValue ++;
     f30:	01 96       	adiw	r24, 0x01	; 1

00000f32 <.L6>:
    }
    return originalValue;
}
     f32:	08 95       	ret

00000f34 <rechtdoor>:

void rechtdoor(void){
     f34:	cf 92       	push	r12
     f36:	df 92       	push	r13
     f38:	ef 92       	push	r14
     f3a:	ff 92       	push	r15
     f3c:	0f 93       	push	r16
     f3e:	1f 93       	push	r17
     f40:	cf 93       	push	r28
     f42:	df 93       	push	r29

00000f44 <.Loc.27>:
    int topspeed = 1150;
    int directionState=0;
     f44:	c0 e0       	ldi	r28, 0x00	; 0
     f46:	d0 e0       	ldi	r29, 0x00	; 0

00000f48 <.Loc.30>:
                }
                if(distance_left < distance_right){
                    if(directionState!=3){
                        speedStepperRight(ramping(1650, 1150));
                        speedStepperLeft(ramping(1150, 1650));
                        directionState = 3;
     f48:	0f 2e       	mov	r0, r31
     f4a:	f3 e0       	ldi	r31, 0x03	; 3
     f4c:	cf 2e       	mov	r12, r31
     f4e:	f0 2d       	mov	r31, r0
     f50:	d1 2c       	mov	r13, r1

00000f52 <.Loc.31>:
                if(distance_left < distance_right){
     f52:	02 e0       	ldi	r16, 0x02	; 2
     f54:	10 e0       	ldi	r17, 0x00	; 0

00000f56 <.Loc.32>:
                    directionState = 1;
     f56:	ee 24       	eor	r14, r14
     f58:	e3 94       	inc	r14
     f5a:	f1 2c       	mov	r15, r1
     f5c:	12 c0       	rjmp	.+36     	; 0xf82 <.L8>

00000f5e <.L19>:
                if(directionState!=1){
     f5e:	c1 30       	cpi	r28, 0x01	; 1
     f60:	d1 05       	cpc	r29, r1
     f62:	09 f0       	breq	.+2      	; 0xf66 <.L11>

00000f64 <L0^A>:
     f64:	42 c0       	rjmp	.+132    	; 0xfea <.L18>

00000f66 <.L11>:
        else{
            stop();
            temp = tel;
            goto jump;
        }
        if((distance_right>20)||(distance_left>20)){
     f66:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <distance_right>
     f6a:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <distance_right+0x1>

00000f6e <.Loc.37>:
     f6e:	45 97       	sbiw	r24, 0x15	; 21
     f70:	0c f0       	brlt	.+2      	; 0xf74 <.Loc.38>

00000f72 <L0^A>:
     f72:	75 c0       	rjmp	.+234    	; 0x105e <.L15>

00000f74 <.Loc.38>:
     f74:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
     f78:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>

00000f7c <.Loc.39>:
     f7c:	45 97       	sbiw	r24, 0x15	; 21
     f7e:	0c f0       	brlt	.+2      	; 0xf82 <.L8>

00000f80 <L0^A>:
     f80:	6e c0       	rjmp	.+220    	; 0x105e <.L15>

00000f82 <.L8>:
        telblokje();
     f82:	0e 94 ef 06 	call	0xdde	; 0xdde <telblokje>

00000f86 <.LVL11>:
        if(tel==temp){
     f86:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <tel>
     f8a:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <tel+0x1>
     f8e:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <temp.1>
     f92:	90 91 47 02 	lds	r25, 0x0247	; 0x800247 <temp.1+0x1>
     f96:	28 17       	cp	r18, r24
     f98:	39 07       	cpc	r19, r25
     f9a:	09 f0       	breq	.+2      	; 0xf9e <.Loc.45>

00000f9c <L0^A>:
     f9c:	55 c0       	rjmp	.+170    	; 0x1048 <.L9>

00000f9e <.Loc.45>:
            if (distance_right==distance_left) {
     f9e:	20 91 5a 02 	lds	r18, 0x025A	; 0x80025a <distance_right>
     fa2:	30 91 5b 02 	lds	r19, 0x025B	; 0x80025b <distance_right+0x1>
     fa6:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
     faa:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>

00000fae <.Loc.47>:
     fae:	28 17       	cp	r18, r24
     fb0:	39 07       	cpc	r19, r25
     fb2:	a9 f2       	breq	.-86     	; 0xf5e <.L19>

00000fb4 <.Loc.48>:
                if (distance_right < distance_left){
     fb4:	20 91 5a 02 	lds	r18, 0x025A	; 0x80025a <distance_right>
     fb8:	30 91 5b 02 	lds	r19, 0x025B	; 0x80025b <distance_right+0x1>
     fbc:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
     fc0:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>

00000fc4 <.Loc.50>:
     fc4:	28 17       	cp	r18, r24
     fc6:	39 07       	cpc	r19, r25
     fc8:	24 f5       	brge	.+72     	; 0x1012 <.L12>

00000fca <.Loc.51>:
                    if(directionState!=2){
     fca:	22 97       	sbiw	r28, 0x02	; 2
     fcc:	c9 f4       	brne	.+50     	; 0x1000 <.L20>

00000fce <.L13>:
                if(distance_left < distance_right){
     fce:	20 91 58 02 	lds	r18, 0x0258	; 0x800258 <distance_left>
     fd2:	30 91 59 02 	lds	r19, 0x0259	; 0x800259 <distance_left+0x1>
     fd6:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <distance_right>
     fda:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <distance_right+0x1>

00000fde <.Loc.55>:
     fde:	28 17       	cp	r18, r24
     fe0:	39 07       	cpc	r19, r25
     fe2:	3c f1       	brlt	.+78     	; 0x1032 <.L16>
     fe4:	c0 2f       	mov	r28, r16
     fe6:	d1 2f       	mov	r29, r17
     fe8:	be cf       	rjmp	.-132    	; 0xf66 <.L11>

00000fea <.L18>:
                    speedStepperLeft(topspeed);
     fea:	8e e7       	ldi	r24, 0x7E	; 126
     fec:	94 e0       	ldi	r25, 0x04	; 4
     fee:	0e 94 fe 09 	call	0x13fc	; 0x13fc <speedStepperLeft>

00000ff2 <.LVL14>:
                    speedStepperRight(topspeed);
     ff2:	8e e7       	ldi	r24, 0x7E	; 126
     ff4:	94 e0       	ldi	r25, 0x04	; 4
     ff6:	0e 94 f7 09 	call	0x13ee	; 0x13ee <speedStepperRight>

00000ffa <.LVL15>:
                    directionState = 1;
     ffa:	ce 2d       	mov	r28, r14
     ffc:	df 2d       	mov	r29, r15
     ffe:	b3 cf       	rjmp	.-154    	; 0xf66 <.L11>

00001000 <.L20>:
                        speedStepperLeft(ramping(1650, 1150));
    1000:	81 e7       	ldi	r24, 0x71	; 113
    1002:	96 e0       	ldi	r25, 0x06	; 6
    1004:	0e 94 fe 09 	call	0x13fc	; 0x13fc <speedStepperLeft>

00001008 <.LVL17>:
                        speedStepperRight(ramping(1150, 1650));
    1008:	8f e7       	ldi	r24, 0x7F	; 127
    100a:	94 e0       	ldi	r25, 0x04	; 4
    100c:	0e 94 f7 09 	call	0x13ee	; 0x13ee <speedStepperRight>

00001010 <.LVL18>:
                        directionState = 2;
    1010:	de cf       	rjmp	.-68     	; 0xfce <.L13>

00001012 <.L12>:
                if(distance_left < distance_right){
    1012:	20 91 58 02 	lds	r18, 0x0258	; 0x800258 <distance_left>
    1016:	30 91 59 02 	lds	r19, 0x0259	; 0x800259 <distance_left+0x1>
    101a:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <distance_right>
    101e:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <distance_right+0x1>

00001022 <.Loc.66>:
    1022:	28 17       	cp	r18, r24
    1024:	39 07       	cpc	r19, r25
    1026:	0c f0       	brlt	.+2      	; 0x102a <.Loc.67>

00001028 <L0^A>:
    1028:	9e cf       	rjmp	.-196    	; 0xf66 <.L11>

0000102a <.Loc.67>:
                    if(directionState!=3){
    102a:	c3 30       	cpi	r28, 0x03	; 3
    102c:	d1 05       	cpc	r29, r1
    102e:	09 f4       	brne	.+2      	; 0x1032 <.L16>

00001030 <L0^A>:
    1030:	9a cf       	rjmp	.-204    	; 0xf66 <.L11>

00001032 <.L16>:
                        speedStepperRight(ramping(1650, 1150));
    1032:	81 e7       	ldi	r24, 0x71	; 113
    1034:	96 e0       	ldi	r25, 0x06	; 6
    1036:	0e 94 f7 09 	call	0x13ee	; 0x13ee <speedStepperRight>

0000103a <.LVL21>:
                        speedStepperLeft(ramping(1150, 1650));
    103a:	8f e7       	ldi	r24, 0x7F	; 127
    103c:	94 e0       	ldi	r25, 0x04	; 4
    103e:	0e 94 fe 09 	call	0x13fc	; 0x13fc <speedStepperLeft>

00001042 <.LVL22>:
                        directionState = 3;
    1042:	cc 2d       	mov	r28, r12
    1044:	dd 2d       	mov	r29, r13
    1046:	8f cf       	rjmp	.-226    	; 0xf66 <.L11>

00001048 <.L9>:
            stop();
    1048:	0e 94 86 07 	call	0xf0c	; 0xf0c <stop>

0000104c <.LVL24>:
            temp = tel;
    104c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <tel>
    1050:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <tel+0x1>
    1054:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <temp.1+0x1>
    1058:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <temp.1>

0000105c <.Loc.76>:
            goto jump;
    105c:	92 cf       	rjmp	.-220    	; 0xf82 <.L8>

0000105e <.L15>:
            break;
        }
    }
    //stop driving
    stop();
    105e:	0e 94 86 07 	call	0xf0c	; 0xf0c <stop>

00001062 <.LVL25>:
}
    1062:	df 91       	pop	r29
    1064:	cf 91       	pop	r28

00001066 <.Loc.79>:
    1066:	1f 91       	pop	r17
    1068:	0f 91       	pop	r16
    106a:	ff 90       	pop	r15
    106c:	ef 90       	pop	r14
    106e:	df 90       	pop	r13
    1070:	cf 90       	pop	r12
    1072:	08 95       	ret

00001074 <rechtdoor2>:

void rechtdoor2(void){
    static int temp = 0;
    //while agv binnen het pad is
    while((distance_right>20)||(distance_left>20)){
    1074:	24 c0       	rjmp	.+72     	; 0x10be <.L22>

00001076 <.L30>:
        telblokje();
        if(tel==temp){
            if (distance_right==distance_left) {
                    speedStepperLeft(1150);
    1076:	8e e7       	ldi	r24, 0x7E	; 126
    1078:	94 e0       	ldi	r25, 0x04	; 4
    107a:	0e 94 fe 09 	call	0x13fc	; 0x13fc <speedStepperLeft>

0000107e <.LVL27>:
                    speedStepperRight(1150);
    107e:	8e e7       	ldi	r24, 0x7E	; 126
    1080:	94 e0       	ldi	r25, 0x04	; 4
    1082:	0e 94 f7 09 	call	0x13ee	; 0x13ee <speedStepperRight>

00001086 <.LVL28>:
    1086:	1b c0       	rjmp	.+54     	; 0x10be <.L22>

00001088 <.L31>:
            }
            else{
                if (distance_right < distance_left){
                        speedStepperLeft(ramping(1650, 1150));
    1088:	81 e7       	ldi	r24, 0x71	; 113
    108a:	96 e0       	ldi	r25, 0x06	; 6
    108c:	0e 94 fe 09 	call	0x13fc	; 0x13fc <speedStepperLeft>

00001090 <.LVL29>:
                        speedStepperRight(ramping(1150, 1650));
    1090:	8f e7       	ldi	r24, 0x7F	; 127
    1092:	94 e0       	ldi	r25, 0x04	; 4
    1094:	0e 94 f7 09 	call	0x13ee	; 0x13ee <speedStepperRight>

00001098 <.LVL30>:
    1098:	44 c0       	rjmp	.+136    	; 0x1122 <.L26>

0000109a <.L23>:
                        speedStepperLeft(ramping(1150, 1650));
                }
            }
        }
        else{
            stop();
    109a:	0e 94 86 07 	call	0xf0c	; 0xf0c <stop>

0000109e <.LVL31>:
            temp = tel;
    109e:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <tel>
    10a2:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <tel+0x1>
    10a6:	90 93 45 02 	sts	0x0245, r25	; 0x800245 <temp.0+0x1>
    10aa:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <temp.0>

000010ae <.Loc.91>:
            if(tel==pakjes){
    10ae:	20 91 26 02 	lds	r18, 0x0226	; 0x800226 <pakjes>
    10b2:	30 91 27 02 	lds	r19, 0x0227	; 0x800227 <pakjes+0x1>
    10b6:	82 17       	cp	r24, r18
    10b8:	93 07       	cpc	r25, r19
    10ba:	09 f4       	brne	.+2      	; 0x10be <.L22>

000010bc <L0^A>:
    10bc:	46 c0       	rjmp	.+140    	; 0x114a <.L29>

000010be <.L22>:
    while((distance_right>20)||(distance_left>20)){
    10be:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <distance_right>
    10c2:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <distance_right+0x1>

000010c6 <.Loc.95>:
    10c6:	45 97       	sbiw	r24, 0x15	; 21
    10c8:	3c f4       	brge	.+14     	; 0x10d8 <.L28>

000010ca <.Loc.96>:
    10ca:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
    10ce:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>

000010d2 <.Loc.97>:
    10d2:	45 97       	sbiw	r24, 0x15	; 21
    10d4:	0c f4       	brge	.+2      	; 0x10d8 <.L28>

000010d6 <L0^A>:
    10d6:	42 c0       	rjmp	.+132    	; 0x115c <.L27>

000010d8 <.L28>:
        telblokje();
    10d8:	0e 94 ef 06 	call	0xdde	; 0xdde <telblokje>

000010dc <.LVL32>:
        if(tel==temp){
    10dc:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <tel>
    10e0:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <tel+0x1>
    10e4:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <temp.0>
    10e8:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <temp.0+0x1>
    10ec:	28 17       	cp	r18, r24
    10ee:	39 07       	cpc	r19, r25
    10f0:	a1 f6       	brne	.-88     	; 0x109a <.L23>

000010f2 <.Loc.101>:
            if (distance_right==distance_left) {
    10f2:	20 91 5a 02 	lds	r18, 0x025A	; 0x80025a <distance_right>
    10f6:	30 91 5b 02 	lds	r19, 0x025B	; 0x80025b <distance_right+0x1>
    10fa:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
    10fe:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>

00001102 <.Loc.103>:
    1102:	28 17       	cp	r18, r24
    1104:	39 07       	cpc	r19, r25
    1106:	09 f4       	brne	.+2      	; 0x110a <.Loc.104>

00001108 <L0^A>:
    1108:	b6 cf       	rjmp	.-148    	; 0x1076 <.L30>

0000110a <.Loc.104>:
                if (distance_right < distance_left){
    110a:	20 91 5a 02 	lds	r18, 0x025A	; 0x80025a <distance_right>
    110e:	30 91 5b 02 	lds	r19, 0x025B	; 0x80025b <distance_right+0x1>
    1112:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
    1116:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>

0000111a <.Loc.106>:
    111a:	28 17       	cp	r18, r24
    111c:	39 07       	cpc	r19, r25
    111e:	0c f4       	brge	.+2      	; 0x1122 <.L26>

00001120 <L0^A>:
    1120:	b3 cf       	rjmp	.-154    	; 0x1088 <.L31>

00001122 <.L26>:
                if(distance_left < distance_right){
    1122:	20 91 58 02 	lds	r18, 0x0258	; 0x800258 <distance_left>
    1126:	30 91 59 02 	lds	r19, 0x0259	; 0x800259 <distance_left+0x1>
    112a:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <distance_right>
    112e:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <distance_right+0x1>

00001132 <.Loc.109>:
    1132:	28 17       	cp	r18, r24
    1134:	39 07       	cpc	r19, r25
    1136:	1c f6       	brge	.-122    	; 0x10be <.L22>

00001138 <.Loc.110>:
                        speedStepperRight(ramping(1650, 1150));
    1138:	81 e7       	ldi	r24, 0x71	; 113
    113a:	96 e0       	ldi	r25, 0x06	; 6
    113c:	0e 94 f7 09 	call	0x13ee	; 0x13ee <speedStepperRight>

00001140 <.LVL33>:
                        speedStepperLeft(ramping(1150, 1650));
    1140:	8f e7       	ldi	r24, 0x7F	; 127
    1142:	94 e0       	ldi	r25, 0x04	; 4
    1144:	0e 94 fe 09 	call	0x13fc	; 0x13fc <speedStepperLeft>

00001148 <.LVL34>:
    1148:	ba cf       	rjmp	.-140    	; 0x10be <.L22>

0000114a <.L29>:
                terminator++;
    114a:	80 91 50 02 	lds	r24, 0x0250	; 0x800250 <terminator>
    114e:	90 91 51 02 	lds	r25, 0x0251	; 0x800251 <terminator+0x1>
    1152:	01 96       	adiw	r24, 0x01	; 1
    1154:	90 93 51 02 	sts	0x0251, r25	; 0x800251 <terminator+0x1>
    1158:	80 93 50 02 	sts	0x0250, r24	; 0x800250 <terminator>

0000115c <.L27>:
                break;
            }
        }
    }
    //stop driving
    stop();
    115c:	0e 94 86 07 	call	0xf0c	; 0xf0c <stop>

00001160 <.LVL35>:
}
    1160:	08 95       	ret

00001162 <linksom>:

void linksom(void){
    clearStepCnt();
    1162:	0e 94 55 0a 	call	0x14aa	; 0x14aa <clearStepCnt>

00001166 <.LVL36>:
    while(stepCounterLeft<4100){      //agv rijdt ietsjes verder buiten het pad
    1166:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    116a:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    116e:	84 30       	cpi	r24, 0x04	; 4
    1170:	90 41       	sbci	r25, 0x10	; 16
    1172:	48 f4       	brcc	.+18     	; 0x1186 <.L33>

00001174 <.L34>:
        vooruit();
    1174:	0e 94 7d 07 	call	0xefa	; 0xefa <vooruit>

00001178 <.LVL37>:
    while(stepCounterLeft<4100){      //agv rijdt ietsjes verder buiten het pad
    1178:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    117c:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    1180:	84 30       	cpi	r24, 0x04	; 4
    1182:	90 41       	sbci	r25, 0x10	; 16
    1184:	b8 f3       	brcs	.-18     	; 0x1174 <.L34>

00001186 <.L33>:
    }
    clearStepCnt();
    1186:	0e 94 55 0a 	call	0x14aa	; 0x14aa <clearStepCnt>

0000118a <.LVL38>:
    toggleStepperDirectionRight();
    118a:	0e 94 05 0a 	call	0x140a	; 0x140a <toggleStepperDirectionRight>

0000118e <.LVL39>:
    while(stepCounterLeft<2200){   //agv draait 90 graden
    118e:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    1192:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    1196:	88 39       	cpi	r24, 0x98	; 152
    1198:	98 40       	sbci	r25, 0x08	; 8
    119a:	48 f4       	brcc	.+18     	; 0x11ae <.L35>

0000119c <.L36>:
        vooruit();
    119c:	0e 94 7d 07 	call	0xefa	; 0xefa <vooruit>

000011a0 <.LVL40>:
    while(stepCounterLeft<2200){   //agv draait 90 graden
    11a0:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    11a4:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    11a8:	88 39       	cpi	r24, 0x98	; 152
    11aa:	98 40       	sbci	r25, 0x08	; 8
    11ac:	b8 f3       	brcs	.-18     	; 0x119c <.L36>

000011ae <.L35>:
    }
    toggleStepperDirectionRight();
    11ae:	0e 94 05 0a 	call	0x140a	; 0x140a <toggleStepperDirectionRight>

000011b2 <.LVL41>:
    clearStepCnt();
    11b2:	0e 94 55 0a 	call	0x14aa	; 0x14aa <clearStepCnt>

000011b6 <.LVL42>:
    while(stepCounterLeft<(5500)){    //agv rijdt naar volgende pad
    11b6:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    11ba:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    11be:	8c 37       	cpi	r24, 0x7C	; 124
    11c0:	95 41       	sbci	r25, 0x15	; 21
    11c2:	48 f4       	brcc	.+18     	; 0x11d6 <.L37>

000011c4 <.L38>:
        vooruit();
    11c4:	0e 94 7d 07 	call	0xefa	; 0xefa <vooruit>

000011c8 <.LVL43>:
    while(stepCounterLeft<(5500)){    //agv rijdt naar volgende pad
    11c8:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    11cc:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    11d0:	8c 37       	cpi	r24, 0x7C	; 124
    11d2:	95 41       	sbci	r25, 0x15	; 21
    11d4:	b8 f3       	brcs	.-18     	; 0x11c4 <.L38>

000011d6 <.L37>:
    }
    toggleStepperDirectionRight();      //agv draati 90 graden
    11d6:	0e 94 05 0a 	call	0x140a	; 0x140a <toggleStepperDirectionRight>

000011da <.LVL44>:
    clearStepCnt();
    11da:	0e 94 55 0a 	call	0x14aa	; 0x14aa <clearStepCnt>

000011de <.LVL45>:
    while(stepCounterLeft<(2200)){
    11de:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    11e2:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    11e6:	88 39       	cpi	r24, 0x98	; 152
    11e8:	98 40       	sbci	r25, 0x08	; 8
    11ea:	48 f4       	brcc	.+18     	; 0x11fe <.L39>

000011ec <.L40>:
        vooruit();
    11ec:	0e 94 7d 07 	call	0xefa	; 0xefa <vooruit>

000011f0 <.LVL46>:
    while(stepCounterLeft<(2200)){
    11f0:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    11f4:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    11f8:	88 39       	cpi	r24, 0x98	; 152
    11fa:	98 40       	sbci	r25, 0x08	; 8
    11fc:	b8 f3       	brcs	.-18     	; 0x11ec <.L40>

000011fe <.L39>:
    }
    toggleStepperDirectionRight();
    11fe:	0e 94 05 0a 	call	0x140a	; 0x140a <toggleStepperDirectionRight>

00001202 <.LVL47>:
    clearStepCnt();
    1202:	0e 94 55 0a 	call	0x14aa	; 0x14aa <clearStepCnt>

00001206 <.LVL48>:
    vooruit();
    1206:	0e 94 7d 07 	call	0xefa	; 0xefa <vooruit>

0000120a <.LVL49>:
    while(distance_left>15){           //agv is in het volgende pad
    120a:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
    120e:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>
    1212:	40 97       	sbiw	r24, 0x10	; 16
    1214:	44 f0       	brlt	.+16     	; 0x1226 <.L41>

00001216 <.L42>:
        vooruit();
    1216:	0e 94 7d 07 	call	0xefa	; 0xefa <vooruit>

0000121a <.LVL50>:
    while(distance_left>15){           //agv is in het volgende pad
    121a:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
    121e:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>
    1222:	40 97       	sbiw	r24, 0x10	; 16
    1224:	c4 f7       	brge	.-16     	; 0x1216 <.L42>

00001226 <.L41>:
    }
    stop();
    1226:	0e 94 86 07 	call	0xf0c	; 0xf0c <stop>

0000122a <.LVL51>:
}
    122a:	08 95       	ret

0000122c <rechtsom>:

void rechtsom(void){
    clearStepCnt();
    122c:	0e 94 55 0a 	call	0x14aa	; 0x14aa <clearStepCnt>

00001230 <.LVL52>:
    while(stepCounterLeft<4100){      //agv rijdt ietsjes verder buiten het pad
    1230:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    1234:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    1238:	84 30       	cpi	r24, 0x04	; 4
    123a:	90 41       	sbci	r25, 0x10	; 16
    123c:	48 f4       	brcc	.+18     	; 0x1250 <.L49>

0000123e <.L50>:
        vooruit();
    123e:	0e 94 7d 07 	call	0xefa	; 0xefa <vooruit>

00001242 <.LVL53>:
    while(stepCounterLeft<4100){      //agv rijdt ietsjes verder buiten het pad
    1242:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    1246:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    124a:	84 30       	cpi	r24, 0x04	; 4
    124c:	90 41       	sbci	r25, 0x10	; 16
    124e:	b8 f3       	brcs	.-18     	; 0x123e <.L50>

00001250 <.L49>:
    }
    clearStepCnt();
    1250:	0e 94 55 0a 	call	0x14aa	; 0x14aa <clearStepCnt>

00001254 <.LVL54>:
    toggleStepperDirectionLeft();
    1254:	0e 94 17 0a 	call	0x142e	; 0x142e <toggleStepperDirectionLeft>

00001258 <.LVL55>:
    while(stepCounterLeft<2150){   //agv draait 90 graden
    1258:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    125c:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    1260:	86 36       	cpi	r24, 0x66	; 102
    1262:	98 40       	sbci	r25, 0x08	; 8
    1264:	48 f4       	brcc	.+18     	; 0x1278 <.L51>

00001266 <.L52>:
        vooruit();
    1266:	0e 94 7d 07 	call	0xefa	; 0xefa <vooruit>

0000126a <.LVL56>:
    while(stepCounterLeft<2150){   //agv draait 90 graden
    126a:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    126e:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    1272:	86 36       	cpi	r24, 0x66	; 102
    1274:	98 40       	sbci	r25, 0x08	; 8
    1276:	b8 f3       	brcs	.-18     	; 0x1266 <.L52>

00001278 <.L51>:
    }
    toggleStepperDirectionLeft();
    1278:	0e 94 17 0a 	call	0x142e	; 0x142e <toggleStepperDirectionLeft>

0000127c <.LVL57>:
    clearStepCnt();
    127c:	0e 94 55 0a 	call	0x14aa	; 0x14aa <clearStepCnt>

00001280 <.LVL58>:
    while(stepCounterLeft<(5500)){    //agv rijdt naar volgende pad
    1280:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    1284:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    1288:	8c 37       	cpi	r24, 0x7C	; 124
    128a:	95 41       	sbci	r25, 0x15	; 21
    128c:	48 f4       	brcc	.+18     	; 0x12a0 <.L53>

0000128e <.L54>:
        vooruit();
    128e:	0e 94 7d 07 	call	0xefa	; 0xefa <vooruit>

00001292 <.LVL59>:
    while(stepCounterLeft<(5500)){    //agv rijdt naar volgende pad
    1292:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    1296:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    129a:	8c 37       	cpi	r24, 0x7C	; 124
    129c:	95 41       	sbci	r25, 0x15	; 21
    129e:	b8 f3       	brcs	.-18     	; 0x128e <.L54>

000012a0 <.L53>:
    }
    toggleStepperDirectionLeft();      //agv draati 90 graden
    12a0:	0e 94 17 0a 	call	0x142e	; 0x142e <toggleStepperDirectionLeft>

000012a4 <.LVL60>:
    clearStepCnt();
    12a4:	0e 94 55 0a 	call	0x14aa	; 0x14aa <clearStepCnt>

000012a8 <.LVL61>:
    while(stepCounterLeft<(2150)){
    12a8:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    12ac:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    12b0:	86 36       	cpi	r24, 0x66	; 102
    12b2:	98 40       	sbci	r25, 0x08	; 8
    12b4:	48 f4       	brcc	.+18     	; 0x12c8 <.L55>

000012b6 <.L56>:
        vooruit();
    12b6:	0e 94 7d 07 	call	0xefa	; 0xefa <vooruit>

000012ba <.LVL62>:
    while(stepCounterLeft<(2150)){
    12ba:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    12be:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    12c2:	86 36       	cpi	r24, 0x66	; 102
    12c4:	98 40       	sbci	r25, 0x08	; 8
    12c6:	b8 f3       	brcs	.-18     	; 0x12b6 <.L56>

000012c8 <.L55>:
    }
    toggleStepperDirectionLeft();
    12c8:	0e 94 17 0a 	call	0x142e	; 0x142e <toggleStepperDirectionLeft>

000012cc <.LVL63>:
    clearStepCnt();
    12cc:	0e 94 55 0a 	call	0x14aa	; 0x14aa <clearStepCnt>

000012d0 <.LVL64>:
    vooruit();
    12d0:	0e 94 7d 07 	call	0xefa	; 0xefa <vooruit>

000012d4 <.LVL65>:
    while(distance_left>25){           //agv is in het volgende pad
    12d4:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
    12d8:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>
    12dc:	4a 97       	sbiw	r24, 0x1a	; 26
    12de:	44 f0       	brlt	.+16     	; 0x12f0 <.L57>

000012e0 <.L58>:
        vooruit();
    12e0:	0e 94 7d 07 	call	0xefa	; 0xefa <vooruit>

000012e4 <.LVL66>:
    while(distance_left>25){           //agv is in het volgende pad
    12e4:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
    12e8:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>
    12ec:	4a 97       	sbiw	r24, 0x1a	; 26
    12ee:	c4 f7       	brge	.-16     	; 0x12e0 <.L58>

000012f0 <.L57>:
    }
    stop();
    12f0:	0e 94 86 07 	call	0xf0c	; 0xf0c <stop>

000012f4 <.LVL67>:
}
    12f4:	08 95       	ret

000012f6 <initNoodstop>:

#include <avr/interrupt.h>
#include <avr/io.h>

void initNoodstop(void){
    DDR_NOOD &= ~(1<<NOODKNOP);
    12f6:	50 98       	cbi	0x0a, 0	; 10

000012f8 <.Loc.3>:
    PORT_NOOD |= (1<<NOODKNOP);
    12f8:	58 9a       	sbi	0x0b, 0	; 11

000012fa <.Loc.5>:

    EIMSK |= (1<<INT0);       //ENABLE HARDWARE INTERRUPT ON PD0
    12fa:	e8 9a       	sbi	0x1d, 0	; 29

000012fc <.Loc.7>:
    EICRA |= (0<<ISC01) | (1<<ISC00);   //Any edge of INTn generates asynchronously an interrupt request
    12fc:	e9 e6       	ldi	r30, 0x69	; 105
    12fe:	f0 e0       	ldi	r31, 0x00	; 0
    1300:	80 81       	ld	r24, Z

00001302 <.Loc.8>:
    1302:	81 60       	ori	r24, 0x01	; 1
    1304:	80 83       	st	Z, r24

00001306 <.Loc.9>:
    sei();
    1306:	78 94       	sei

00001308 <.Loc.10>:
}
    1308:	08 95       	ret

0000130a <__vector_1>:

ISR(INT0_vect){
    130a:	1f 92       	push	r1
    130c:	0f 92       	push	r0
    130e:	0f b6       	in	r0, 0x3f	; 63
    1310:	0f 92       	push	r0
    1312:	11 24       	eor	r1, r1
    1314:	0b b6       	in	r0, 0x3b	; 59
    1316:	0f 92       	push	r0
    1318:	2f 93       	push	r18
    131a:	3f 93       	push	r19
    131c:	4f 93       	push	r20
    131e:	5f 93       	push	r21
    1320:	6f 93       	push	r22
    1322:	7f 93       	push	r23
    1324:	8f 93       	push	r24
    1326:	9f 93       	push	r25
    1328:	af 93       	push	r26
    132a:	bf 93       	push	r27
    132c:	ef 93       	push	r30
    132e:	ff 93       	push	r31

00001330 <.Loc.12>:
    while((PIN_NOOD & (1<<NOODKNOP))&&(!(PIN_knop&(1<<start))))     //while noodknop ingedrukt en start niet ingedrukt is (twee handeling voor noodstop)
    1330:	48 9b       	sbis	0x09, 0	; 9
    1332:	06 c0       	rjmp	.+12     	; 0x1340 <.L4>

00001334 <.L3>:
    1334:	06 99       	sbic	0x00, 6	; 0
    1336:	04 c0       	rjmp	.+8      	; 0x1340 <.L4>

00001338 <.Loc.15>:
        stop();
    1338:	0e 94 86 07 	call	0xf0c	; 0xf0c <stop>

0000133c <.LVL0>:
    while((PIN_NOOD & (1<<NOODKNOP))&&(!(PIN_knop&(1<<start))))     //while noodknop ingedrukt en start niet ingedrukt is (twee handeling voor noodstop)
    133c:	48 99       	sbic	0x09, 0	; 9
    133e:	fa cf       	rjmp	.-12     	; 0x1334 <.L3>

00001340 <.L4>:

    uitvoer();
    1340:	0e 94 5e 0a 	call	0x14bc	; 0x14bc <uitvoer>

00001344 <.LVL1>:
}
    1344:	ff 91       	pop	r31
    1346:	ef 91       	pop	r30
    1348:	bf 91       	pop	r27
    134a:	af 91       	pop	r26
    134c:	9f 91       	pop	r25
    134e:	8f 91       	pop	r24
    1350:	7f 91       	pop	r23
    1352:	6f 91       	pop	r22
    1354:	5f 91       	pop	r21
    1356:	4f 91       	pop	r20
    1358:	3f 91       	pop	r19
    135a:	2f 91       	pop	r18
    135c:	0f 90       	pop	r0
    135e:	0b be       	out	0x3b, r0	; 59
    1360:	0f 90       	pop	r0
    1362:	0f be       	out	0x3f, r0	; 63
    1364:	0f 90       	pop	r0
    1366:	1f 90       	pop	r1
    1368:	18 95       	reti

0000136a <initPinsStepper>:
#include <avr/interrupt.h>
#include "stepperDriver.h"

void initPinsStepper (void){
	// Config pins as output
	DDR_STEP_R |= (1<<STEPPER_RIGHT);
    136a:	6b 9a       	sbi	0x0d, 3	; 13

0000136c <.Loc.3>:
	DDR_STEP_L |= (1<<STEPPER_LEFT);
    136c:	e1 e0       	ldi	r30, 0x01	; 1
    136e:	f1 e0       	ldi	r31, 0x01	; 1
    1370:	80 81       	ld	r24, Z

00001372 <.Loc.4>:
    1372:	88 60       	ori	r24, 0x08	; 8
    1374:	80 83       	st	Z, r24

00001376 <.Loc.5>:
	DDR_DIR_R |= (1<<DIRECTION_R);
    1376:	9d 9a       	sbi	0x13, 5	; 19

00001378 <.Loc.7>:
	DDR_DIR_L |= (1<<DIRECTION_L);
    1378:	80 81       	ld	r24, Z

0000137a <.Loc.8>:
    137a:	80 61       	ori	r24, 0x10	; 16
    137c:	80 83       	st	Z, r24

0000137e <.Loc.10>:

	// Output low
	PORT_STEP_R &= ~(1<<STEPPER_RIGHT);
    137e:	73 98       	cbi	0x0e, 3	; 14

00001380 <.Loc.11>:
	PORT_STEP_L &= ~(1<<STEPPER_LEFT);
    1380:	e2 e0       	ldi	r30, 0x02	; 2
    1382:	f1 e0       	ldi	r31, 0x01	; 1
    1384:	80 81       	ld	r24, Z
    1386:	87 7f       	andi	r24, 0xF7	; 247
    1388:	80 83       	st	Z, r24

0000138a <.Loc.13>:
	PORT_DIR_R &= ~(1<<DIRECTION_R);
    138a:	a5 98       	cbi	0x14, 5	; 20

0000138c <.Loc.15>:
	PORT_DIR_L &= ~(1<<DIRECTION_L);
    138c:	80 81       	ld	r24, Z
    138e:	8f 7e       	andi	r24, 0xEF	; 239
    1390:	80 83       	st	Z, r24

00001392 <.Loc.17>:
}
    1392:	08 95       	ret

00001394 <initTimer3Stepper>:

//stepper right
void initTimer3Stepper(void){
    // Use mode 14, prescaler = 256
    TCCR3A = (1<<WGM31) | (0<<WGM30) | (1<<COM3A1) | (0<<COM3A0);
    1394:	82 e8       	ldi	r24, 0x82	; 130
    1396:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>

0000139a <.Loc.21>:
    TCCR3B = (1<<WGM33) | (1<<WGM32) | (0<<CS32) | (1<<CS31) | (0<<CS30);
    139a:	8a e1       	ldi	r24, 0x1A	; 26
    139c:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x700091>

000013a0 <.Loc.23>:
    TIMSK3 |= (1<<TOIE4);
    13a0:	e1 e7       	ldi	r30, 0x71	; 113
    13a2:	f0 e0       	ldi	r31, 0x00	; 0
    13a4:	80 81       	ld	r24, Z

000013a6 <.Loc.24>:
    13a6:	81 60       	ori	r24, 0x01	; 1
    13a8:	80 83       	st	Z, r24

000013aa <.Loc.25>:

	//define top value
    OCR3A = STEPVALUE;
    13aa:	81 e0       	ldi	r24, 0x01	; 1
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
    13b2:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>

000013b6 <.Loc.27>:
    sei();
    13b6:	78 94       	sei

000013b8 <.Loc.28>:
}
    13b8:	08 95       	ret

000013ba <initTimer4Stepper>:

//stepper left
void initTimer4Stepper(void){
    // Use mode 14, prescaler = 256
    TCCR4A = (1<<WGM41) | (0<<WGM40) | (1<<COM4A1) | (0<<COM4A0);
    13ba:	82 e8       	ldi	r24, 0x82	; 130
    13bc:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>

000013c0 <.Loc.32>:
    TCCR4B = (1<<WGM43) | (1<<WGM42) | (0<<CS42) | (1<<CS41) | (0<<CS40);
    13c0:	8a e1       	ldi	r24, 0x1A	; 26
    13c2:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>

000013c6 <.Loc.34>:
    TIMSK4 |= (1<<TOIE4);
    13c6:	e2 e7       	ldi	r30, 0x72	; 114
    13c8:	f0 e0       	ldi	r31, 0x00	; 0
    13ca:	80 81       	ld	r24, Z

000013cc <.Loc.35>:
    13cc:	81 60       	ori	r24, 0x01	; 1
    13ce:	80 83       	st	Z, r24

000013d0 <.Loc.36>:

	//define top value
    OCR4A = STEPVALUE;
    13d0:	81 e0       	ldi	r24, 0x01	; 1
    13d2:	90 e0       	ldi	r25, 0x00	; 0
    13d4:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
    13d8:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>

000013dc <.Loc.38>:
    sei();
    13dc:	78 94       	sei

000013de <.Loc.39>:
}
    13de:	08 95       	ret

000013e0 <initStepper>:


void initStepper(void){
    initTimer4Stepper();
    13e0:	0e 94 dd 09 	call	0x13ba	; 0x13ba <initTimer4Stepper>

000013e4 <.LVL0>:
    initTimer3Stepper();
    13e4:	0e 94 ca 09 	call	0x1394	; 0x1394 <initTimer3Stepper>

000013e8 <.LVL1>:
    initPinsStepper();
    13e8:	0e 94 b5 09 	call	0x136a	; 0x136a <initPinsStepper>

000013ec <.LVL2>:
}
    13ec:	08 95       	ret

000013ee <speedStepperRight>:

void speedStepperRight(int PWMRight){
    13ee:	28 2f       	mov	r18, r24
    13f0:	39 2f       	mov	r19, r25

000013f2 <.Loc.47>:
    ICR3 = PWMRight;
    13f2:	30 93 97 00 	sts	0x0097, r19	; 0x800097 <__TEXT_REGION_LENGTH__+0x700097>
    13f6:	20 93 96 00 	sts	0x0096, r18	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>

000013fa <.Loc.49>:
}
    13fa:	08 95       	ret

000013fc <speedStepperLeft>:

void speedStepperLeft(int PWMLeft){
    13fc:	28 2f       	mov	r18, r24
    13fe:	39 2f       	mov	r19, r25

00001400 <.Loc.52>:
    ICR4 = PWMLeft;
    1400:	30 93 a7 00 	sts	0x00A7, r19	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
    1404:	20 93 a6 00 	sts	0x00A6, r18	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>

00001408 <.Loc.54>:
}
    1408:	08 95       	ret

0000140a <toggleStepperDirectionRight>:

void toggleStepperDirectionRight(void){
    static int state = 0;
    if(state == 0){
    140a:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <state.1>
    140e:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <state.1+0x1>
    1412:	89 2b       	or	r24, r25
    1414:	41 f4       	brne	.+16     	; 0x1426 <.L8>

00001416 <.Loc.59>:
        PORT_DIR_R |= (1<<DIRECTION_R);
    1416:	a5 9a       	sbi	0x14, 5	; 20

00001418 <.Loc.61>:
        state = 1;
    1418:	81 e0       	ldi	r24, 0x01	; 1
    141a:	90 e0       	ldi	r25, 0x00	; 0

0000141c <.L9>:
    141c:	90 93 4f 02 	sts	0x024F, r25	; 0x80024f <state.1+0x1>
    1420:	80 93 4e 02 	sts	0x024E, r24	; 0x80024e <state.1>

00001424 <.Loc.63>:
    }
    else{
        PORT_DIR_R &= ~(1<<DIRECTION_R);
        state = 0;
    }
}
    1424:	08 95       	ret

00001426 <.L8>:
        PORT_DIR_R &= ~(1<<DIRECTION_R);
    1426:	a5 98       	cbi	0x14, 5	; 20

00001428 <.Loc.66>:
    1428:	80 e0       	ldi	r24, 0x00	; 0
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	f7 cf       	rjmp	.-18     	; 0x141c <.L9>

0000142e <toggleStepperDirectionLeft>:

void toggleStepperDirectionLeft(void){
    static int state = 0;
    if(state == 0){
    142e:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <state.0>
    1432:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <state.0+0x1>
    1436:	89 2b       	or	r24, r25
    1438:	61 f4       	brne	.+24     	; 0x1452 <.L11>

0000143a <.Loc.72>:
        PORT_DIR_L |= (1<<DIRECTION_L);
    143a:	e2 e0       	ldi	r30, 0x02	; 2
    143c:	f1 e0       	ldi	r31, 0x01	; 1
    143e:	80 81       	ld	r24, Z

00001440 <.Loc.73>:
    1440:	80 61       	ori	r24, 0x10	; 16
    1442:	80 83       	st	Z, r24

00001444 <.Loc.74>:
        state = 1;
    1444:	81 e0       	ldi	r24, 0x01	; 1
    1446:	90 e0       	ldi	r25, 0x00	; 0

00001448 <.L12>:
    1448:	90 93 4d 02 	sts	0x024D, r25	; 0x80024d <state.0+0x1>
    144c:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <state.0>

00001450 <.Loc.76>:
    }
    else{
        PORT_DIR_L &= ~(1<<DIRECTION_L);
        state = 0;
    }
}
    1450:	08 95       	ret

00001452 <.L11>:
        PORT_DIR_L &= ~(1<<DIRECTION_L);
    1452:	e2 e0       	ldi	r30, 0x02	; 2
    1454:	f1 e0       	ldi	r31, 0x01	; 1
    1456:	80 81       	ld	r24, Z
    1458:	8f 7e       	andi	r24, 0xEF	; 239
    145a:	80 83       	st	Z, r24

0000145c <.Loc.79>:
    145c:	80 e0       	ldi	r24, 0x00	; 0
    145e:	90 e0       	ldi	r25, 0x00	; 0
    1460:	f3 cf       	rjmp	.-26     	; 0x1448 <.L12>

00001462 <__vector_45>:


volatile unsigned int stepCounterLeft = 0;
ISR(TIMER4_OVF_vect){
    1462:	8f 93       	push	r24
    1464:	8f b7       	in	r24, 0x3f	; 63
    1466:	8f 93       	push	r24
    1468:	9f 93       	push	r25

0000146a <.Loc.82>:
    stepCounterLeft++;
    146a:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <stepCounterLeft>
    146e:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <stepCounterLeft+0x1>
    1472:	01 96       	adiw	r24, 0x01	; 1
    1474:	90 93 4b 02 	sts	0x024B, r25	; 0x80024b <stepCounterLeft+0x1>
    1478:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <stepCounterLeft>

0000147c <.Loc.84>:
}
    147c:	9f 91       	pop	r25
    147e:	8f 91       	pop	r24
    1480:	8f bf       	out	0x3f, r24	; 63
    1482:	8f 91       	pop	r24
    1484:	18 95       	reti

00001486 <__vector_35>:

volatile unsigned int stepCounterRight = 0;
ISR(TIMER3_OVF_vect){
    1486:	8f 93       	push	r24
    1488:	8f b7       	in	r24, 0x3f	; 63
    148a:	8f 93       	push	r24
    148c:	9f 93       	push	r25

0000148e <.Loc.86>:
    stepCounterRight++;
    148e:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <stepCounterRight>
    1492:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <stepCounterRight+0x1>
    1496:	01 96       	adiw	r24, 0x01	; 1
    1498:	90 93 49 02 	sts	0x0249, r25	; 0x800249 <stepCounterRight+0x1>
    149c:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <stepCounterRight>

000014a0 <.Loc.88>:
}
    14a0:	9f 91       	pop	r25
    14a2:	8f 91       	pop	r24
    14a4:	8f bf       	out	0x3f, r24	; 63
    14a6:	8f 91       	pop	r24
    14a8:	18 95       	reti

000014aa <clearStepCnt>:

void clearStepCnt(void){
    stepCounterLeft = 0;
    14aa:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <stepCounterLeft+0x1>
    14ae:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <stepCounterLeft>

000014b2 <.Loc.92>:
    stepCounterRight = 0;
    14b2:	10 92 49 02 	sts	0x0249, r1	; 0x800249 <stepCounterRight+0x1>
    14b6:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <stepCounterRight>

000014ba <.Loc.94>:
}
    14ba:	08 95       	ret

000014bc <uitvoer>:
extern int pakjes;// hoeveel pakjes er worden geteld
extern int letter;// hoeveel keer op plus is gedrukt
extern int lettertwee;// hoeveel keer op plus is gedrukt bij de tweede keer
*/

void uitvoer(void){
    14bc:	cf 93       	push	r28
    14be:	df 93       	push	r29

000014c0 <.Loc.1>:

    init_ultrasoon();
    14c0:	0e 94 ce 0b 	call	0x179c	; 0x179c <init_ultrasoon>

000014c4 <.LVL0>:
    initStepper();
    14c4:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <initStepper>

000014c8 <.LVL1>:
    IR_init();
    14c8:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <IR_init>

000014cc <.LVL2>:

    int terminate = 0;
    static int spaceAndTime = 0;        //om aan te geven waar binnen de uitvoer van het programma de agv zich bevindt in het geval van een noodstop actuatie

    //pad 1
    if(spaceAndTime==0){
    14cc:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <spaceAndTime.1>
    14d0:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <spaceAndTime.1+0x1>
    14d4:	89 2b       	or	r24, r25
    14d6:	b9 f4       	brne	.+46     	; 0x1506 <.L2>

000014d8 <.Loc.8>:
        while((distance_left<15)){
    14d8:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
    14dc:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>
    14e0:	0f 97       	sbiw	r24, 0x0f	; 15
    14e2:	44 f4       	brge	.+16     	; 0x14f4 <.L3>

000014e4 <.L4>:
            rechtdoor();
    14e4:	0e 94 9a 07 	call	0xf34	; 0xf34 <rechtdoor>

000014e8 <.LVL3>:
        while((distance_left<15)){
    14e8:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
    14ec:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>
    14f0:	0f 97       	sbiw	r24, 0x0f	; 15
    14f2:	c4 f3       	brlt	.-16     	; 0x14e4 <.L4>

000014f4 <.L3>:
        }
        spaceAndTime++;
    14f4:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <spaceAndTime.1>
    14f8:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <spaceAndTime.1+0x1>
    14fc:	01 96       	adiw	r24, 0x01	; 1
    14fe:	90 93 55 02 	sts	0x0255, r25	; 0x800255 <spaceAndTime.1+0x1>
    1502:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <spaceAndTime.1>

00001506 <.L2>:
    }
    //bocht 1
    if(spaceAndTime==1){
    1506:	c0 91 54 02 	lds	r28, 0x0254	; 0x800254 <spaceAndTime.1>
    150a:	d0 91 55 02 	lds	r29, 0x0255	; 0x800255 <spaceAndTime.1+0x1>

0000150e <.Loc.15>:
    150e:	c1 30       	cpi	r28, 0x01	; 1
    1510:	d1 05       	cpc	r29, r1
    1512:	a9 f0       	breq	.+42     	; 0x153e <.L24>

00001514 <.Loc.16>:
            terminate ++;
        }
        spaceAndTime++;
    }
    //pad 2
    if(spaceAndTime==2){
    1514:	22 97       	sbiw	r28, 0x02	; 2
    1516:	e1 f1       	breq	.+120    	; 0x1590 <.L19>

00001518 <.Loc.18>:
    int terminate = 0;
    1518:	c0 e0       	ldi	r28, 0x00	; 0
    151a:	d0 e0       	ldi	r29, 0x00	; 0

0000151c <.L10>:
            }
        }
        spaceAndTime++;
    }
    //bocht 2
    if(spaceAndTime==3){
    151c:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <spaceAndTime.1>
    1520:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <spaceAndTime.1+0x1>
    1524:	03 97       	sbiw	r24, 0x03	; 3
    1526:	09 f4       	brne	.+2      	; 0x152a <.L12>

00001528 <L0^A>:
    1528:	50 c0       	rjmp	.+160    	; 0x15ca <.L25>

0000152a <.L12>:
            terminate++;
        }
        spaceAndTime++;
    }
    //pad 3
    if(spaceAndTime==4){
    152a:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <spaceAndTime.1>
    152e:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <spaceAndTime.1+0x1>
    1532:	04 97       	sbiw	r24, 0x04	; 4
    1534:	09 f4       	brne	.+2      	; 0x1538 <.L1>

00001536 <L0^A>:
    1536:	64 c0       	rjmp	.+200    	; 0x1600 <.L26>

00001538 <.L1>:
                rechtdoor();
            }
        }
        spaceAndTime++;
    }
}
    1538:	df 91       	pop	r29
    153a:	cf 91       	pop	r28

0000153c <.Loc.24>:
    153c:	08 95       	ret

0000153e <.L24>:
        if(letter!=0){
    153e:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <letter>
    1542:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <letter+0x1>

00001546 <.Loc.27>:
    1546:	00 97       	sbiw	r24, 0x00	; 0
    1548:	a9 f0       	breq	.+42     	; 0x1574 <.L6>

0000154a <.Loc.28>:
            if(letter==1)
    154a:	01 97       	sbiw	r24, 0x01	; 1
    154c:	81 f0       	breq	.+32     	; 0x156e <.L27>

0000154e <.Loc.30>:
                rechtsom();
    154e:	0e 94 16 09 	call	0x122c	; 0x122c <rechtsom>

00001552 <.L8>:
        spaceAndTime++;
    1552:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <spaceAndTime.1>
    1556:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <spaceAndTime.1+0x1>
    155a:	01 96       	adiw	r24, 0x01	; 1
    155c:	90 93 55 02 	sts	0x0255, r25	; 0x800255 <spaceAndTime.1+0x1>
    1560:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <spaceAndTime.1>

00001564 <.Loc.33>:
    if(spaceAndTime==2){
    1564:	02 97       	sbiw	r24, 0x02	; 2
    1566:	a1 f0       	breq	.+40     	; 0x1590 <.L19>
    1568:	c0 e0       	ldi	r28, 0x00	; 0
    156a:	d0 e0       	ldi	r29, 0x00	; 0
    156c:	d7 cf       	rjmp	.-82     	; 0x151c <.L10>

0000156e <.L27>:
                linksom();
    156e:	0e 94 b1 08 	call	0x1162	; 0x1162 <linksom>

00001572 <.LVL9>:
    1572:	ef cf       	rjmp	.-34     	; 0x1552 <.L8>

00001574 <.L6>:
            stop();
    1574:	0e 94 86 07 	call	0xf0c	; 0xf0c <stop>

00001578 <.LVL10>:
        spaceAndTime++;
    1578:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <spaceAndTime.1>
    157c:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <spaceAndTime.1+0x1>
    1580:	01 96       	adiw	r24, 0x01	; 1
    1582:	90 93 55 02 	sts	0x0255, r25	; 0x800255 <spaceAndTime.1+0x1>
    1586:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <spaceAndTime.1>

0000158a <.Loc.40>:
    if(spaceAndTime==2){
    158a:	02 97       	sbiw	r24, 0x02	; 2
    158c:	89 f0       	breq	.+34     	; 0x15b0 <.L9>
    158e:	c6 cf       	rjmp	.-116    	; 0x151c <.L10>

00001590 <.L19>:
            while((distance_left<15)){
    1590:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
    1594:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>
    1598:	0f 97       	sbiw	r24, 0x0f	; 15
    159a:	a4 f4       	brge	.+40     	; 0x15c4 <.L20>

0000159c <.L11>:
                rechtdoor();
    159c:	0e 94 9a 07 	call	0xf34	; 0xf34 <rechtdoor>

000015a0 <.LVL12>:
            while((distance_left<15)){
    15a0:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
    15a4:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>
    15a8:	0f 97       	sbiw	r24, 0x0f	; 15
    15aa:	c4 f3       	brlt	.-16     	; 0x159c <.L11>
    15ac:	c0 e0       	ldi	r28, 0x00	; 0
    15ae:	d0 e0       	ldi	r29, 0x00	; 0

000015b0 <.L9>:
        spaceAndTime++;
    15b0:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <spaceAndTime.1>
    15b4:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <spaceAndTime.1+0x1>
    15b8:	01 96       	adiw	r24, 0x01	; 1
    15ba:	90 93 55 02 	sts	0x0255, r25	; 0x800255 <spaceAndTime.1+0x1>
    15be:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <spaceAndTime.1>
    15c2:	ac cf       	rjmp	.-168    	; 0x151c <.L10>

000015c4 <.L20>:
            while((distance_left<15)){
    15c4:	c0 e0       	ldi	r28, 0x00	; 0
    15c6:	d0 e0       	ldi	r29, 0x00	; 0
    15c8:	f3 cf       	rjmp	.-26     	; 0x15b0 <.L9>

000015ca <.L25>:
        if(letter!=0){
    15ca:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <letter>
    15ce:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <letter+0x1>

000015d2 <.Loc.50>:
    15d2:	00 97       	sbiw	r24, 0x00	; 0
    15d4:	89 f0       	breq	.+34     	; 0x15f8 <.L13>

000015d6 <.Loc.51>:
            if(letter==1)
    15d6:	01 97       	sbiw	r24, 0x01	; 1
    15d8:	61 f0       	breq	.+24     	; 0x15f2 <.L28>

000015da <.Loc.53>:
                rechtsom();
    15da:	0e 94 16 09 	call	0x122c	; 0x122c <rechtsom>

000015de <.L15>:
        spaceAndTime++;
    15de:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <spaceAndTime.1>
    15e2:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <spaceAndTime.1+0x1>
    15e6:	01 96       	adiw	r24, 0x01	; 1
    15e8:	90 93 55 02 	sts	0x0255, r25	; 0x800255 <spaceAndTime.1+0x1>
    15ec:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <spaceAndTime.1>
    15f0:	9c cf       	rjmp	.-200    	; 0x152a <.L12>

000015f2 <.L28>:
                linksom();
    15f2:	0e 94 b1 08 	call	0x1162	; 0x1162 <linksom>

000015f6 <.LVL18>:
    15f6:	f3 cf       	rjmp	.-26     	; 0x15de <.L15>

000015f8 <.L13>:
            stop();
    15f8:	0e 94 86 07 	call	0xf0c	; 0xf0c <stop>

000015fc <.LVL19>:
            terminate++;
    15fc:	21 96       	adiw	r28, 0x01	; 1

000015fe <.Loc.60>:
    15fe:	ef cf       	rjmp	.-34     	; 0x15de <.L15>

00001600 <.L26>:
        if(terminate==0){
    1600:	cd 2b       	or	r28, r29
    1602:	71 f4       	brne	.+28     	; 0x1620 <.L17>

00001604 <.Loc.63>:
            while((distance_left<15)){
    1604:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
    1608:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>
    160c:	0f 97       	sbiw	r24, 0x0f	; 15
    160e:	44 f4       	brge	.+16     	; 0x1620 <.L17>

00001610 <.L18>:
                rechtdoor();
    1610:	0e 94 9a 07 	call	0xf34	; 0xf34 <rechtdoor>

00001614 <.LVL21>:
            while((distance_left<15)){
    1614:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <distance_left>
    1618:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <distance_left+0x1>
    161c:	0f 97       	sbiw	r24, 0x0f	; 15
    161e:	c4 f3       	brlt	.-16     	; 0x1610 <.L18>

00001620 <.L17>:
        spaceAndTime++;
    1620:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <spaceAndTime.1>
    1624:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <spaceAndTime.1+0x1>
    1628:	01 96       	adiw	r24, 0x01	; 1
    162a:	90 93 55 02 	sts	0x0255, r25	; 0x800255 <spaceAndTime.1+0x1>
    162e:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <spaceAndTime.1>

00001632 <.Loc.68>:
}
    1632:	82 cf       	rjmp	.-252    	; 0x1538 <.L1>

00001634 <uitvoer2>:

int terminator = 0;

void uitvoer2(void){

    init_ultrasoon();
    1634:	0e 94 ce 0b 	call	0x179c	; 0x179c <init_ultrasoon>

00001638 <.LVL22>:
    initStepper();
    1638:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <initStepper>

0000163c <.LVL23>:
    IR_init();
    163c:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <IR_init>

00001640 <.LVL24>:

    int terminate = 0;
    static int spaceAndTime = 0;        //om aan te geven waar binnen de uitvoer van het programma de agv zich bevindt in het geval van een noodstop actuatie

    //pad 1
    while(terminator == 0){
    1640:	2d c0       	rjmp	.+90     	; 0x169c <.L41>

00001642 <.L48>:
        if(spaceAndTime==0){
            rechtdoor2();
    1642:	0e 94 3a 08 	call	0x1074	; 0x1074 <rechtdoor2>

00001646 <.LVL26>:
            spaceAndTime++;
    1646:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <spaceAndTime.0>
    164a:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <spaceAndTime.0+0x1>
    164e:	01 96       	adiw	r24, 0x01	; 1
    1650:	90 93 53 02 	sts	0x0253, r25	; 0x800253 <spaceAndTime.0+0x1>
    1654:	80 93 52 02 	sts	0x0252, r24	; 0x800252 <spaceAndTime.0>
    1658:	2e c0       	rjmp	.+92     	; 0x16b6 <.L31>

0000165a <.L49>:
        }
        //bocht 1
        if(spaceAndTime==1){
            if(letter!=0){
                if(letter==1)
                    linksom();
    165a:	0e 94 b1 08 	call	0x1162	; 0x1162 <linksom>

0000165e <.LVL27>:
    165e:	02 c0       	rjmp	.+4      	; 0x1664 <.L35>

00001660 <.L33>:
                else
                    rechtsom();
            }
            else{
                stop();
    1660:	0e 94 86 07 	call	0xf0c	; 0xf0c <stop>

00001664 <.L35>:
                terminate ++;
            }
            spaceAndTime++;
    1664:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <spaceAndTime.0>
    1668:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <spaceAndTime.0+0x1>
    166c:	01 96       	adiw	r24, 0x01	; 1
    166e:	90 93 53 02 	sts	0x0253, r25	; 0x800253 <spaceAndTime.0+0x1>
    1672:	80 93 52 02 	sts	0x0252, r24	; 0x800252 <spaceAndTime.0>

00001676 <.L32>:
        }
        //pad 2
        if(spaceAndTime==2){
    1676:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <spaceAndTime.0>
    167a:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <spaceAndTime.0+0x1>
    167e:	02 97       	sbiw	r24, 0x02	; 2
    1680:	59 f1       	breq	.+86     	; 0x16d8 <.L44>

00001682 <.L36>:
            rechtdoor2();
            spaceAndTime++;
        }
        //bocht 2
        if(spaceAndTime==3){
    1682:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <spaceAndTime.0>
    1686:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <spaceAndTime.0+0x1>
    168a:	03 97       	sbiw	r24, 0x03	; 3
    168c:	89 f1       	breq	.+98     	; 0x16f0 <.L45>

0000168e <.L37>:
                terminate++;
            }
            spaceAndTime++;
        }
        //pad 3
        if(spaceAndTime==4){
    168e:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <spaceAndTime.0>
    1692:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <spaceAndTime.0+0x1>
    1696:	04 97       	sbiw	r24, 0x04	; 4
    1698:	09 f4       	brne	.+2      	; 0x169c <.L41>

0000169a <L0^A>:
    169a:	44 c0       	rjmp	.+136    	; 0x1724 <.L46>

0000169c <.L41>:
    while(terminator == 0){
    169c:	80 91 50 02 	lds	r24, 0x0250	; 0x800250 <terminator>
    16a0:	90 91 51 02 	lds	r25, 0x0251	; 0x800251 <terminator+0x1>
    16a4:	89 2b       	or	r24, r25
    16a6:	09 f0       	breq	.+2      	; 0x16aa <.Loc.92>

000016a8 <L0^A>:
    16a8:	49 c0       	rjmp	.+146    	; 0x173c <.L47>

000016aa <.Loc.92>:
        if(spaceAndTime==0){
    16aa:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <spaceAndTime.0>
    16ae:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <spaceAndTime.0+0x1>
    16b2:	89 2b       	or	r24, r25
    16b4:	31 f2       	breq	.-116    	; 0x1642 <.L48>

000016b6 <.L31>:
        if(spaceAndTime==1){
    16b6:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <spaceAndTime.0>
    16ba:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <spaceAndTime.0+0x1>
    16be:	01 97       	sbiw	r24, 0x01	; 1
    16c0:	d1 f6       	brne	.-76     	; 0x1676 <.L32>

000016c2 <.Loc.96>:
            if(letter!=0){
    16c2:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <letter>
    16c6:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <letter+0x1>

000016ca <.Loc.98>:
    16ca:	00 97       	sbiw	r24, 0x00	; 0
    16cc:	49 f2       	breq	.-110    	; 0x1660 <.L33>

000016ce <.Loc.100>:
                if(letter==1)
    16ce:	01 97       	sbiw	r24, 0x01	; 1
    16d0:	21 f2       	breq	.-120    	; 0x165a <.L49>

000016d2 <.Loc.101>:
                    rechtsom();
    16d2:	0e 94 16 09 	call	0x122c	; 0x122c <rechtsom>

000016d6 <.LVL29>:
    16d6:	c6 cf       	rjmp	.-116    	; 0x1664 <.L35>

000016d8 <.L44>:
            rechtdoor2();
    16d8:	0e 94 3a 08 	call	0x1074	; 0x1074 <rechtdoor2>

000016dc <.LVL30>:
            spaceAndTime++;
    16dc:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <spaceAndTime.0>
    16e0:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <spaceAndTime.0+0x1>
    16e4:	01 96       	adiw	r24, 0x01	; 1
    16e6:	90 93 53 02 	sts	0x0253, r25	; 0x800253 <spaceAndTime.0+0x1>
    16ea:	80 93 52 02 	sts	0x0252, r24	; 0x800252 <spaceAndTime.0>
    16ee:	c9 cf       	rjmp	.-110    	; 0x1682 <.L36>

000016f0 <.L45>:
            if(letter!=0){
    16f0:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <letter>
    16f4:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <letter+0x1>

000016f8 <.Loc.107>:
    16f8:	00 97       	sbiw	r24, 0x00	; 0
    16fa:	89 f0       	breq	.+34     	; 0x171e <.L38>

000016fc <.Loc.108>:
                if(letter==1)
    16fc:	01 97       	sbiw	r24, 0x01	; 1
    16fe:	61 f0       	breq	.+24     	; 0x1718 <.L50>

00001700 <.Loc.110>:
                    rechtsom();
    1700:	0e 94 16 09 	call	0x122c	; 0x122c <rechtsom>

00001704 <.L40>:
            spaceAndTime++;
    1704:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <spaceAndTime.0>
    1708:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <spaceAndTime.0+0x1>
    170c:	01 96       	adiw	r24, 0x01	; 1
    170e:	90 93 53 02 	sts	0x0253, r25	; 0x800253 <spaceAndTime.0+0x1>
    1712:	80 93 52 02 	sts	0x0252, r24	; 0x800252 <spaceAndTime.0>
    1716:	bb cf       	rjmp	.-138    	; 0x168e <.L37>

00001718 <.L50>:
                    linksom();
    1718:	0e 94 b1 08 	call	0x1162	; 0x1162 <linksom>

0000171c <.LVL32>:
    171c:	f3 cf       	rjmp	.-26     	; 0x1704 <.L40>

0000171e <.L38>:
                stop();
    171e:	0e 94 86 07 	call	0xf0c	; 0xf0c <stop>

00001722 <.LVL33>:
                terminate++;
    1722:	f0 cf       	rjmp	.-32     	; 0x1704 <.L40>

00001724 <.L46>:
            rechtdoor2();
    1724:	0e 94 3a 08 	call	0x1074	; 0x1074 <rechtdoor2>

00001728 <.LVL34>:
            spaceAndTime++;
    1728:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <spaceAndTime.0>
    172c:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <spaceAndTime.0+0x1>
    1730:	01 96       	adiw	r24, 0x01	; 1
    1732:	90 93 53 02 	sts	0x0253, r25	; 0x800253 <spaceAndTime.0+0x1>
    1736:	80 93 52 02 	sts	0x0252, r24	; 0x800252 <spaceAndTime.0>
    173a:	b0 cf       	rjmp	.-160    	; 0x169c <.L41>

0000173c <.L47>:
        }
    }
}
    173c:	08 95       	ret

0000173e <init_timer5>:
#include <avr/interrupt.h>
#include "ultrasoon.h"

void init_timer5(void){
    //set timer mode 15
    TCCR5A = (1<<COM5B1) | (1<<COM5C1) | (1<<WGM51) | (1<<WGM50); //set output compare on B and C
    173e:	8b e2       	ldi	r24, 0x2B	; 43
    1740:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>

00001744 <.Loc.3>:
    TCCR5B = (1<<ICES5) | (1<<WGM53) | (1<<WGM52) | (1<<CS51);  //set input capture to rising edge and prescaler 8
    1744:	8a e5       	ldi	r24, 0x5A	; 90
    1746:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>

0000174a <.Loc.5>:
    //set interrupt register for input capture and overflow
    TIMSK5 = (1<<ICIE5) | (1<<TOIE5);
    174a:	81 e2       	ldi	r24, 0x21	; 33
    174c:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>

00001750 <.Loc.7>:
    //define top value
    OCR5A = 0XFFFF;
    1750:	8f ef       	ldi	r24, 0xFF	; 255
    1752:	9f ef       	ldi	r25, 0xFF	; 255
    1754:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
    1758:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>

0000175c <.Loc.10>:
    //set trigger start signal
    OCR5B = 20;
    175c:	84 e1       	ldi	r24, 0x14	; 20
    175e:	90 e0       	ldi	r25, 0x00	; 0
    1760:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
    1764:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>

00001768 <.Loc.11>:
    OCR5C = 20;
    1768:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__TEXT_REGION_LENGTH__+0x70012d>
    176c:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__TEXT_REGION_LENGTH__+0x70012c>

00001770 <.Loc.13>:
    //set enable interrupt
    sei();
    1770:	78 94       	sei

00001772 <.Loc.14>:
}
    1772:	08 95       	ret

00001774 <init_pins_ultrasoon>:

void init_pins_ultrasoon(void){
    //set trigger pins to output
    DDRL |= (1<<Pin_Trig_Left);
    1774:	ea e0       	ldi	r30, 0x0A	; 10
    1776:	f1 e0       	ldi	r31, 0x01	; 1
    1778:	80 81       	ld	r24, Z

0000177a <.Loc.17>:
    177a:	80 61       	ori	r24, 0x10	; 16
    177c:	80 83       	st	Z, r24

0000177e <.Loc.18>:
    DDRL |= (1<<Pin_Trig_Right);
    177e:	80 81       	ld	r24, Z

00001780 <.Loc.19>:
    1780:	80 62       	ori	r24, 0x20	; 32
    1782:	80 83       	st	Z, r24

00001784 <.Loc.20>:
    //set trigger pins to low
    PORTL &= ~(1<<Pin_Trig_Left);
    1784:	ab e0       	ldi	r26, 0x0B	; 11
    1786:	b1 e0       	ldi	r27, 0x01	; 1
    1788:	8c 91       	ld	r24, X
    178a:	8f 7e       	andi	r24, 0xEF	; 239
    178c:	8c 93       	st	X, r24

0000178e <.Loc.22>:
    PORTL &= ~(1<<Pin_Trig_Right);
    178e:	8c 91       	ld	r24, X
    1790:	8f 7d       	andi	r24, 0xDF	; 223
    1792:	8c 93       	st	X, r24

00001794 <.Loc.24>:
    //set echo pin to input
    DDRL &= ~(1<<Pin_echo);
    1794:	80 81       	ld	r24, Z
    1796:	8d 7f       	andi	r24, 0xFD	; 253
    1798:	80 83       	st	Z, r24

0000179a <.Loc.26>:
}
    179a:	08 95       	ret

0000179c <init_ultrasoon>:

void init_ultrasoon(void){
    init_pins_ultrasoon();
    179c:	0e 94 ba 0b 	call	0x1774	; 0x1774 <init_pins_ultrasoon>

000017a0 <.LVL0>:
    init_timer5();
    17a0:	0e 94 9f 0b 	call	0x173e	; 0x173e <init_timer5>

000017a4 <.LVL1>:
}
    17a4:	08 95       	ret

000017a6 <__vector_50>:

volatile int distance_right;
volatile int distance_left;
volatile int current_sensor=0;

ISR(TIMER5_OVF_vect){
    17a6:	8f 93       	push	r24
    17a8:	8f b7       	in	r24, 0x3f	; 63
    17aa:	8f 93       	push	r24
    17ac:	8b b7       	in	r24, 0x3b	; 59
    17ae:	8f 93       	push	r24
    17b0:	ef 93       	push	r30
    17b2:	ff 93       	push	r31

000017b4 <.Loc.32>:
    //set input capture to rising edge
    TCCR5B |= (1<<ICES5);
    17b4:	e1 e2       	ldi	r30, 0x21	; 33
    17b6:	f1 e0       	ldi	r31, 0x01	; 1
    17b8:	80 81       	ld	r24, Z

000017ba <.Loc.33>:
    17ba:	80 64       	ori	r24, 0x40	; 64
    17bc:	80 83       	st	Z, r24

000017be <.Loc.34>:
}
    17be:	ff 91       	pop	r31
    17c0:	ef 91       	pop	r30
    17c2:	8f 91       	pop	r24
    17c4:	8b bf       	out	0x3b, r24	; 59
    17c6:	8f 91       	pop	r24
    17c8:	8f bf       	out	0x3f, r24	; 63
    17ca:	8f 91       	pop	r24
    17cc:	18 95       	reti

000017ce <__vector_46>:

ISR(TIMER5_CAPT_vect){
    17ce:	0f 92       	push	r0
    17d0:	0f b6       	in	r0, 0x3f	; 63
    17d2:	0f 92       	push	r0
    17d4:	1f 92       	push	r1
    17d6:	11 24       	eor	r1, r1
    17d8:	2f 93       	push	r18
    17da:	2b b7       	in	r18, 0x3b	; 59
    17dc:	2f 93       	push	r18
    17de:	3f 93       	push	r19
    17e0:	6f 93       	push	r22
    17e2:	7f 93       	push	r23
    17e4:	8f 93       	push	r24
    17e6:	9f 93       	push	r25
    17e8:	af 93       	push	r26
    17ea:	bf 93       	push	r27
    17ec:	ef 93       	push	r30
    17ee:	ff 93       	push	r31

000017f0 <.Loc.36>:
    static volatile int start_time;
    // If interrupt is set to rising edge
    if (TCCR5B & (1 << ICES5)) {
    17f0:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>

000017f4 <.Loc.39>:
    17f4:	86 ff       	sbrs	r24, 6
    17f6:	1e c0       	rjmp	.+60     	; 0x1834 <.L6>

000017f8 <.Loc.40>:
        start_time = ICR5;
    17f8:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
    17fc:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>

00001800 <.Loc.42>:
    1800:	90 93 5d 02 	sts	0x025D, r25	; 0x80025d <start_time.0+0x1>
    1804:	80 93 5c 02 	sts	0x025C, r24	; 0x80025c <start_time.0>

00001808 <.Loc.43>:
        TCCR5B &= ~(1 << ICES5);  // Switch to falling edge
    1808:	e1 e2       	ldi	r30, 0x21	; 33
    180a:	f1 e0       	ldi	r31, 0x01	; 1
    180c:	80 81       	ld	r24, Z
    180e:	8f 7b       	andi	r24, 0xBF	; 191
    1810:	80 83       	st	Z, r24

00001812 <.L5>:
            current_sensor = 0;  // Switch to Sensor A
            TCCR5A &= ~(1 << COM5B1);  // Turn off Sensor Right
            TCCR5A |= (1 << COM5C1);   // Turn on Sensor Left
        }
    }
}
    1812:	ff 91       	pop	r31
    1814:	ef 91       	pop	r30
    1816:	bf 91       	pop	r27
    1818:	af 91       	pop	r26
    181a:	9f 91       	pop	r25
    181c:	8f 91       	pop	r24
    181e:	7f 91       	pop	r23
    1820:	6f 91       	pop	r22
    1822:	3f 91       	pop	r19
    1824:	2f 91       	pop	r18
    1826:	2b bf       	out	0x3b, r18	; 59
    1828:	2f 91       	pop	r18
    182a:	1f 90       	pop	r1
    182c:	0f 90       	pop	r0
    182e:	0f be       	out	0x3f, r0	; 63
    1830:	0f 90       	pop	r0
    1832:	18 95       	reti

00001834 <.L6>:
        int distance = (ICR5 - start_time) / 117;  // Calculate distance in cm
    1834:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
    1838:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>

0000183c <.Loc.48>:
    183c:	80 91 5c 02 	lds	r24, 0x025C	; 0x80025c <start_time.0>
    1840:	90 91 5d 02 	lds	r25, 0x025D	; 0x80025d <start_time.0+0x1>
    1844:	28 1b       	sub	r18, r24
    1846:	39 0b       	sbc	r19, r25

00001848 <.Loc.49>:
    1848:	a9 e0       	ldi	r26, 0x09	; 9
    184a:	bc e8       	ldi	r27, 0x8C	; 140
    184c:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__umulhisi3>
    1850:	00 24       	eor	r0, r0
    1852:	88 0f       	add	r24, r24
    1854:	99 1f       	adc	r25, r25
    1856:	00 1c       	adc	r0, r0
    1858:	88 0f       	add	r24, r24
    185a:	99 1f       	adc	r25, r25
    185c:	00 1c       	adc	r0, r0
    185e:	89 2f       	mov	r24, r25
    1860:	90 2d       	mov	r25, r0

00001862 <.Loc.50>:
        if (current_sensor == 0) {
    1862:	20 91 56 02 	lds	r18, 0x0256	; 0x800256 <current_sensor>
    1866:	30 91 57 02 	lds	r19, 0x0257	; 0x800257 <current_sensor+0x1>

0000186a <.Loc.52>:
    186a:	23 2b       	or	r18, r19
    186c:	c9 f4       	brne	.+50     	; 0x18a0 <.L8>

0000186e <.Loc.53>:
            distance_left = distance;  // Store distance for Sensor A
    186e:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <distance_left+0x1>
    1872:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <distance_left>

00001876 <.L9>:
        if (current_sensor == 0) {
    1876:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <current_sensor>
    187a:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <current_sensor+0x1>

0000187e <.Loc.57>:
    187e:	89 2b       	or	r24, r25
    1880:	a1 f4       	brne	.+40     	; 0x18aa <.L10>

00001882 <.Loc.58>:
            current_sensor = 1;  // Switch to Sensor B
    1882:	81 e0       	ldi	r24, 0x01	; 1
    1884:	90 e0       	ldi	r25, 0x00	; 0
    1886:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <current_sensor+0x1>
    188a:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <current_sensor>

0000188e <.Loc.60>:
            TCCR5A &= ~(1 << COM5C1);  // Turn off Sensor Left
    188e:	e0 e2       	ldi	r30, 0x20	; 32
    1890:	f1 e0       	ldi	r31, 0x01	; 1
    1892:	80 81       	ld	r24, Z
    1894:	87 7f       	andi	r24, 0xF7	; 247
    1896:	80 83       	st	Z, r24

00001898 <.Loc.62>:
            TCCR5A |= (1 << COM5B1);   // Turn on Sensor Right
    1898:	80 81       	ld	r24, Z

0000189a <.Loc.63>:
    189a:	80 62       	ori	r24, 0x20	; 32
    189c:	80 83       	st	Z, r24
    189e:	b9 cf       	rjmp	.-142    	; 0x1812 <.L5>

000018a0 <.L8>:
            distance_right = distance;  // Store distance for Sensor B
    18a0:	90 93 5b 02 	sts	0x025B, r25	; 0x80025b <distance_right+0x1>
    18a4:	80 93 5a 02 	sts	0x025A, r24	; 0x80025a <distance_right>
    18a8:	e6 cf       	rjmp	.-52     	; 0x1876 <.L9>

000018aa <.L10>:
            current_sensor = 0;  // Switch to Sensor A
    18aa:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <current_sensor+0x1>
    18ae:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <current_sensor>

000018b2 <.Loc.68>:
            TCCR5A &= ~(1 << COM5B1);  // Turn off Sensor Right
    18b2:	e0 e2       	ldi	r30, 0x20	; 32
    18b4:	f1 e0       	ldi	r31, 0x01	; 1
    18b6:	80 81       	ld	r24, Z
    18b8:	8f 7d       	andi	r24, 0xDF	; 223
    18ba:	80 83       	st	Z, r24

000018bc <.Loc.70>:
            TCCR5A |= (1 << COM5C1);   // Turn on Sensor Left
    18bc:	80 81       	ld	r24, Z

000018be <.Loc.71>:
    18be:	88 60       	ori	r24, 0x08	; 8
    18c0:	80 83       	st	Z, r24

000018c2 <.LBE2>:
}
    18c2:	a7 cf       	rjmp	.-178    	; 0x1812 <.L5>

000018c4 <__divmodhi4>:
    18c4:	97 fb       	bst	r25, 7

000018c6 <.Loc.1>:
    18c6:	07 2e       	mov	r0, r23

000018c8 <.Loc.2>:
    18c8:	16 f4       	brtc	.+4      	; 0x18ce <.L^B1>

000018ca <.Loc.3>:
    18ca:	00 94       	com	r0

000018cc <.Loc.4>:
    18cc:	07 d0       	rcall	.+14     	; 0x18dc <__divmodhi4_neg1>

000018ce <.L^B1>:
    18ce:	77 fd       	sbrc	r23, 7

000018d0 <.Loc.6>:
    18d0:	09 d0       	rcall	.+18     	; 0x18e4 <__divmodhi4_neg2>

000018d2 <.Loc.7>:
    18d2:	0e 94 85 0c 	call	0x190a	; 0x190a <__udivmodhi4>

000018d6 <.Loc.8>:
    18d6:	07 fc       	sbrc	r0, 7

000018d8 <.Loc.9>:
    18d8:	05 d0       	rcall	.+10     	; 0x18e4 <__divmodhi4_neg2>

000018da <.Loc.10>:
    18da:	3e f4       	brtc	.+14     	; 0x18ea <__divmodhi4_exit>

000018dc <__divmodhi4_neg1>:
    18dc:	90 95       	com	r25

000018de <.Loc.12>:
    18de:	81 95       	neg	r24

000018e0 <.Loc.13>:
    18e0:	9f 4f       	sbci	r25, 0xFF	; 255

000018e2 <.Loc.14>:
    18e2:	08 95       	ret

000018e4 <__divmodhi4_neg2>:
    18e4:	70 95       	com	r23

000018e6 <.Loc.16>:
    18e6:	61 95       	neg	r22

000018e8 <.Loc.17>:
    18e8:	7f 4f       	sbci	r23, 0xFF	; 255

000018ea <__divmodhi4_exit>:
    18ea:	08 95       	ret

000018ec <__umulhisi3>:
    18ec:	a2 9f       	mul	r26, r18

000018ee <.Loc.1>:
    18ee:	b0 01       	movw	r22, r0

000018f0 <.Loc.2>:
    18f0:	b3 9f       	mul	r27, r19

000018f2 <.Loc.3>:
    18f2:	c0 01       	movw	r24, r0

000018f4 <.Loc.4>:
    18f4:	a3 9f       	mul	r26, r19

000018f6 <.Loc.5>:
    18f6:	70 0d       	add	r23, r0

000018f8 <.Loc.6>:
    18f8:	81 1d       	adc	r24, r1

000018fa <.Loc.7>:
    18fa:	11 24       	eor	r1, r1

000018fc <.Loc.8>:
    18fc:	91 1d       	adc	r25, r1

000018fe <.Loc.9>:
    18fe:	b2 9f       	mul	r27, r18

00001900 <.Loc.10>:
    1900:	70 0d       	add	r23, r0

00001902 <.Loc.11>:
    1902:	81 1d       	adc	r24, r1

00001904 <.Loc.12>:
    1904:	11 24       	eor	r1, r1

00001906 <.Loc.13>:
    1906:	91 1d       	adc	r25, r1

00001908 <.Loc.14>:
    1908:	08 95       	ret

0000190a <__udivmodhi4>:
    190a:	aa 1b       	sub	r26, r26

0000190c <.Loc.1>:
    190c:	bb 1b       	sub	r27, r27

0000190e <.Loc.2>:
    190e:	51 e1       	ldi	r21, 0x11	; 17

00001910 <.Loc.3>:
    1910:	07 c0       	rjmp	.+14     	; 0x1920 <__udivmodhi4_ep>

00001912 <__udivmodhi4_loop>:
    1912:	aa 1f       	adc	r26, r26

00001914 <.Loc.5>:
    1914:	bb 1f       	adc	r27, r27

00001916 <.Loc.6>:
    1916:	a6 17       	cp	r26, r22

00001918 <.Loc.7>:
    1918:	b7 07       	cpc	r27, r23

0000191a <.Loc.8>:
    191a:	10 f0       	brcs	.+4      	; 0x1920 <__udivmodhi4_ep>

0000191c <.Loc.9>:
    191c:	a6 1b       	sub	r26, r22

0000191e <.Loc.10>:
    191e:	b7 0b       	sbc	r27, r23

00001920 <__udivmodhi4_ep>:
    1920:	88 1f       	adc	r24, r24

00001922 <.Loc.12>:
    1922:	99 1f       	adc	r25, r25

00001924 <.Loc.13>:
    1924:	5a 95       	dec	r21

00001926 <.Loc.14>:
    1926:	a9 f7       	brne	.-22     	; 0x1912 <__udivmodhi4_loop>

00001928 <.Loc.15>:
    1928:	80 95       	com	r24

0000192a <.Loc.16>:
    192a:	90 95       	com	r25

0000192c <.Loc.17>:
    192c:	bc 01       	movw	r22, r24

0000192e <.Loc.18>:
    192e:	cd 01       	movw	r24, r26

00001930 <.Loc.19>:
    1930:	08 95       	ret

00001932 <_exit>:
    1932:	f8 94       	cli

00001934 <__stop_program>:
    1934:	ff cf       	rjmp	.-2      	; 0x1934 <__stop_program>
