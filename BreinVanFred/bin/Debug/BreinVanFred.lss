
bin\Debug\BreinVanFred.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800200  0000157c  00001630  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000157c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000032  00800220  00800220  00001650  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001650  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00001653  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001668  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000198  00000000  00000000  000016a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   000031e5  00000000  00000000  00001840  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 000012bd  00000000  00000000  00004a25  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   000035c6  00000000  00000000  00005ce2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000340  00000000  00000000  000092a8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000872  00000000  00000000  000095e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 00000211  00000000  00000000  00009e5a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_loclists 00000e62  00000000  00000000  0000a06b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_rnglists 0000001a  00000000  00000000  0000aecd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 a7 09 	jmp	0x134e	; 0x134e <__vector_35>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 95 09 	jmp	0x132a	; 0x132a <__vector_45>
      b8:	0c 94 0a 0a 	jmp	0x1414	; 0x1414 <__vector_46>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__vector_50>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	ec e7       	ldi	r30, 0x7C	; 124

000000fc <.Loc.4>:
      fc:	f5 e1       	ldi	r31, 0x15	; 21

000000fe <.Loc.5>:
      fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
     100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
     102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
     104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
     106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
     108:	a0 32       	cpi	r26, 0x20	; 32

0000010a <.Loc.11>:
     10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
     10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2

00000110 <.Loc.1>:
     110:	a0 e2       	ldi	r26, 0x20	; 32

00000112 <.Loc.2>:
     112:	b2 e0       	ldi	r27, 0x02	; 2

00000114 <.Loc.3>:
     114:	01 c0       	rjmp	.+2      	; 0x118 <.Loc.5>

00000116 <.Loc.4>:
     116:	1d 92       	st	X+, r1

00000118 <.Loc.5>:
     118:	a2 35       	cpi	r26, 0x52	; 82

0000011a <.Loc.6>:
     11a:	b2 07       	cpc	r27, r18

0000011c <.Loc.7>:
     11c:	e1 f7       	brne	.-8      	; 0x116 <.Loc.4>

0000011e <L0^A>:
     11e:	0e 94 26 07 	call	0xe4c	; 0xe4c <main>
     122:	0c 94 bc 0a 	jmp	0x1578	; 0x1578 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <init_display>:
	0x9C, 0x7A, 0x9E, 0x8E };

void init_display (void)
{
	// Initialiseer de pinnen voor datain, shiftclk en latchclk als output
	DDR_SDI    |= (1 << SDI_BIT);
     12a:	0f 9a       	sbi	0x01, 7	; 1

0000012c <.Loc.3>:
	DDR_SFTCLK |= (1 << SFTCLK_BIT);
     12c:	0b 9a       	sbi	0x01, 3	; 1

0000012e <.Loc.5>:
	DDR_LCHCLK |= (1 << LCHCLK_BIT);
     12e:	0d 9a       	sbi	0x01, 5	; 1

00000130 <.Loc.7>:

	// Maak shiftclk en latchclk laag
	PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
     130:	13 98       	cbi	0x02, 3	; 2

00000132 <.Loc.10>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
     132:	15 98       	cbi	0x02, 5	; 2

00000134 <.Loc.11>:
}
     134:	08 95       	ret

00000136 <send_data>:

void send_data(char data)
{
     136:	28 e0       	ldi	r18, 0x08	; 8
     138:	30 e0       	ldi	r19, 0x00	; 0
     13a:	08 c0       	rjmp	.+16     	; 0x14c <.L5>

0000013c <.L3>:
		{
			PORT_SDI |= (1 << SDI_BIT);
		}
		else
		{
			PORT_SDI &= ~(1 << SDI_BIT);
     13c:	17 98       	cbi	0x02, 7	; 2

0000013e <.L4>:
		}

		// Toggle shiftclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
		// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
		// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
		PORT_SFTCLK |= (1 << SFTCLK_BIT);
     13e:	13 9a       	sbi	0x02, 3	; 2

00000140 <.Loc.21>:
		PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
     140:	13 98       	cbi	0x02, 3	; 2

00000142 <.Loc.23>:
	for (unsigned i = 0; i < 8; i++)
     142:	21 50       	subi	r18, 0x01	; 1
     144:	31 09       	sbc	r19, r1

00000146 <.Loc.25>:
     146:	21 15       	cp	r18, r1
     148:	31 05       	cpc	r19, r1
     14a:	39 f0       	breq	.+14     	; 0x15a <.L7>

0000014c <.L5>:
		int bit = data & 1;
     14c:	98 2f       	mov	r25, r24
     14e:	91 70       	andi	r25, 0x01	; 1

00000150 <.Loc.27>:
		data >>= 1;
     150:	85 95       	asr	r24

00000152 <.Loc.29>:
		if (bit)
     152:	99 23       	and	r25, r25
     154:	99 f3       	breq	.-26     	; 0x13c <.L3>

00000156 <.Loc.31>:
			PORT_SDI |= (1 << SDI_BIT);
     156:	17 9a       	sbi	0x02, 7	; 2
     158:	f2 cf       	rjmp	.-28     	; 0x13e <.L4>

0000015a <.L7>:
	}
}
     15a:	08 95       	ret

0000015c <send_enable>:

void send_enable(int display_nummer)
{
	send_data(~(0x10 << display_nummer));
     15c:	20 e1       	ldi	r18, 0x10	; 16
     15e:	30 e0       	ldi	r19, 0x00	; 0
     160:	a9 01       	movw	r20, r18
     162:	02 c0       	rjmp	.+4      	; 0x168 <.L2^B1>

00000164 <.L1^B1>:
     164:	44 0f       	add	r20, r20
     166:	55 1f       	adc	r21, r21

00000168 <.L2^B1>:
     168:	8a 95       	dec	r24
     16a:	e2 f7       	brpl	.-8      	; 0x164 <.L1^B1>
     16c:	ca 01       	movw	r24, r20

0000016e <.Loc.38>:
     16e:	80 95       	com	r24
     170:	0e 94 9b 00 	call	0x136	; 0x136 <send_data>

00000174 <.LVL9>:
}
     174:	08 95       	ret

00000176 <display>:

void display(char data, int display_nummer)
{
     176:	cf 93       	push	r28
     178:	df 93       	push	r29
     17a:	d6 2f       	mov	r29, r22
     17c:	c7 2f       	mov	r28, r23

0000017e <.Loc.42>:
	send_data(data);
     17e:	0e 94 9b 00 	call	0x136	; 0x136 <send_data>

00000182 <.LVL11>:
	send_enable(display_nummer);
     182:	8d 2f       	mov	r24, r29
     184:	9c 2f       	mov	r25, r28
     186:	0e 94 ae 00 	call	0x15c	; 0x15c <send_enable>

0000018a <.LVL12>:

	// Toggle latchclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
	// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
	// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
	PORT_LCHCLK |= (1 << LCHCLK_BIT);
     18a:	15 9a       	sbi	0x02, 5	; 2

0000018c <.Loc.46>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
     18c:	15 98       	cbi	0x02, 5	; 2

0000018e <.Loc.48>:
}
     18e:	df 91       	pop	r29
     190:	cf 91       	pop	r28
     192:	08 95       	ret

00000194 <display_getal>:

void display_getal(unsigned int getal)
{
     194:	0f 93       	push	r16
     196:	1f 93       	push	r17
     198:	cf 93       	push	r28
     19a:	df 93       	push	r29
     19c:	c8 2f       	mov	r28, r24
     19e:	d9 2f       	mov	r29, r25

000001a0 <.LBB149>:
	for (int i = 0; i < 4; i++)
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	10 e0       	ldi	r17, 0x00	; 0

000001a4 <.L11>:
	{
		display(segmentcodes[getal%10], i);
     1a4:	9e 01       	movw	r18, r28
     1a6:	ad ec       	ldi	r26, 0xCD	; 205
     1a8:	bc ec       	ldi	r27, 0xCC	; 204
     1aa:	0e 94 99 0a 	call	0x1532	; 0x1532 <__umulhisi3>
     1ae:	9c 01       	movw	r18, r24
     1b0:	36 95       	lsr	r19
     1b2:	27 95       	ror	r18
     1b4:	36 95       	lsr	r19
     1b6:	27 95       	ror	r18
     1b8:	36 95       	lsr	r19
     1ba:	27 95       	ror	r18
     1bc:	c9 01       	movw	r24, r18
     1be:	88 0f       	add	r24, r24
     1c0:	99 1f       	adc	r25, r25
     1c2:	88 0f       	add	r24, r24
     1c4:	99 1f       	adc	r25, r25
     1c6:	82 0f       	add	r24, r18
     1c8:	93 1f       	adc	r25, r19
     1ca:	88 0f       	add	r24, r24
     1cc:	99 1f       	adc	r25, r25
     1ce:	fe 01       	movw	r30, r28
     1d0:	e8 1b       	sub	r30, r24
     1d2:	f9 0b       	sbc	r31, r25

000001d4 <.Loc.57>:
     1d4:	ee 0f       	add	r30, r30
     1d6:	ff 1f       	adc	r31, r31
     1d8:	e0 50       	subi	r30, 0x00	; 0
     1da:	fe 4f       	sbci	r31, 0xFE	; 254

000001dc <.Loc.58>:
     1dc:	b8 01       	movw	r22, r16
     1de:	80 81       	ld	r24, Z
     1e0:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000001e4 <.LVL16>:
		getal /= 10;
     1e4:	9e 01       	movw	r18, r28
     1e6:	ad ec       	ldi	r26, 0xCD	; 205
     1e8:	bc ec       	ldi	r27, 0xCC	; 204
     1ea:	0e 94 99 0a 	call	0x1532	; 0x1532 <__umulhisi3>
     1ee:	ec 01       	movw	r28, r24

000001f0 <.Loc.61>:
     1f0:	d6 95       	lsr	r29
     1f2:	c7 95       	ror	r28
     1f4:	d6 95       	lsr	r29
     1f6:	c7 95       	ror	r28
     1f8:	d6 95       	lsr	r29
     1fa:	c7 95       	ror	r28

000001fc <.LBB150>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1fc:	8f e9       	ldi	r24, 0x9F	; 159
     1fe:	9f e0       	ldi	r25, 0x0F	; 15

00000200 <.L1^B2>:
     200:	01 97       	sbiw	r24, 0x01	; 1
     202:	f1 f7       	brne	.-4      	; 0x200 <.L1^B2>
     204:	00 c0       	rjmp	.+0      	; 0x206 <L0^A>

00000206 <L0^A>:
	...

00000208 <.LBE150>:
	for (int i = 0; i < 4; i++)
     208:	0f 5f       	subi	r16, 0xFF	; 255
     20a:	1f 4f       	sbci	r17, 0xFF	; 255

0000020c <.Loc.72>:
     20c:	04 30       	cpi	r16, 0x04	; 4
     20e:	11 05       	cpc	r17, r1
     210:	49 f6       	brne	.-110    	; 0x1a4 <.L11>

00000212 <.LBE149>:
		_delay_ms(1);   // 1 kHz
	}
}
     212:	df 91       	pop	r29
     214:	cf 91       	pop	r28

00000216 <.Loc.74>:
     216:	1f 91       	pop	r17
     218:	0f 91       	pop	r16

0000021a <.Loc.75>:
     21a:	08 95       	ret

0000021c <aantal_pakje>:

void aantal_pakje()
{
     21c:	cf 93       	push	r28
     21e:	df 93       	push	r29

00000220 <.Loc.77>:
    static int back2_ingedrukt=0;
    static int plus2_ingedrukt=0;
    static int start_ingedrukt=0;
    static int h=0;

    DDR_knop &=~((1<<back)|(1<<next)|(1<<plus)|(1<<start));
     220:	81 b1       	in	r24, 0x01	; 1
     222:	8a 7a       	andi	r24, 0xAA	; 170
     224:	81 b9       	out	0x01, r24	; 1

00000226 <.Loc.90>:
    PORT_knop |=((1<<back)|(1<<next)|(1<<plus)|(1<<start));
     226:	82 b1       	in	r24, 0x02	; 2

00000228 <.Loc.91>:
     228:	85 65       	ori	r24, 0x55	; 85
     22a:	82 b9       	out	0x02, r24	; 2

0000022c <.Loc.92>:



    switch(h)
     22c:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <h.10>
     230:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <h.10+0x1>
     234:	82 30       	cpi	r24, 0x02	; 2
     236:	91 05       	cpc	r25, r1
     238:	09 f4       	brne	.+2      	; 0x23c <.LVUS51>

0000023a <L0^A>:
     23a:	4e c3       	rjmp	.+1692   	; 0x8d8 <.L14>
     23c:	0c f0       	brlt	.+2      	; 0x240 <L0^A+0x2>

0000023e <L0^A>:
     23e:	4f c0       	rjmp	.+158    	; 0x2de <.L15>
     240:	00 97       	sbiw	r24, 0x00	; 0
     242:	09 f4       	brne	.+2      	; 0x246 <L0^A+0x2>

00000244 <L0^A>:
     244:	83 c0       	rjmp	.+262    	; 0x34c <.L16>
     246:	01 97       	sbiw	r24, 0x01	; 1
     248:	09 f0       	breq	.+2      	; 0x24c <.Loc.93>

0000024a <L0^A>:
     24a:	8a c5       	rjmp	.+2836   	; 0xd60 <.L13>

0000024c <.Loc.93>:
            }

        case 1:
        {

            switch(letter)
     24c:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <letter>
     250:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <letter+0x1>
     254:	81 30       	cpi	r24, 0x01	; 1
     256:	91 05       	cpc	r25, r1
     258:	09 f4       	brne	.+2      	; 0x25c <.LLST53>

0000025a <L0^A>:
     25a:	2c c2       	rjmp	.+1112   	; 0x6b4 <.L28>
     25c:	82 30       	cpi	r24, 0x02	; 2
     25e:	91 05       	cpc	r25, r1
     260:	09 f4       	brne	.+2      	; 0x264 <L0^A+0x2>

00000262 <L0^A>:
     262:	78 c2       	rjmp	.+1264   	; 0x754 <.L29>
     264:	89 2b       	or	r24, r25
     266:	09 f4       	brne	.+2      	; 0x26a <.L30>

00000268 <L0^A>:
     268:	b0 c1       	rjmp	.+864    	; 0x5ca <.L65>

0000026a <.L30>:
                        break;
                    }

            }

             if (((PIN_knop&(1<<next))==0)&&(next1_ingedrukt==0)) // naar volgede stand als next is ingedrukt
     26a:	04 99       	sbic	0x00, 4	; 0
     26c:	e8 c2       	rjmp	.+1488   	; 0x83e <.L40>

0000026e <.Loc.96>:
     26e:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <next1_ingedrukt.5>
     272:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <next1_ingedrukt.5+0x1>
     276:	89 2b       	or	r24, r25
     278:	09 f0       	breq	.+2      	; 0x27c <.LBB152>

0000027a <L0^A>:
     27a:	e1 c2       	rjmp	.+1474   	; 0x83e <.L40>

0000027c <.LBB152>:
     27c:	8f e3       	ldi	r24, 0x3F	; 63
     27e:	9c e9       	ldi	r25, 0x9C	; 156

00000280 <.L1^B3>:
     280:	01 97       	sbiw	r24, 0x01	; 1
     282:	f1 f7       	brne	.-4      	; 0x280 <.L1^B3>
     284:	00 c0       	rjmp	.+0      	; 0x286 <L0^A>

00000286 <L0^A>:
	...

00000288 <.LBE152>:
                {
                _delay_ms(10);
                    if (((PIN_knop&(1<<next))==0)&&(next1_ingedrukt==0))
     288:	04 99       	sbic	0x00, 4	; 0
     28a:	d9 c2       	rjmp	.+1458   	; 0x83e <.L40>

0000028c <.Loc.108>:
     28c:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <next1_ingedrukt.5>
     290:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <next1_ingedrukt.5+0x1>
     294:	89 2b       	or	r24, r25
     296:	09 f0       	breq	.+2      	; 0x29a <.Loc.109>

00000298 <L0^A>:
     298:	d2 c2       	rjmp	.+1444   	; 0x83e <.L40>

0000029a <.Loc.109>:
                    {
                        next1_ingedrukt=1;
     29a:	81 e0       	ldi	r24, 0x01	; 1
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <next1_ingedrukt.5+0x1>
     2a2:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <next1_ingedrukt.5>

000002a6 <.Loc.111>:
                    }
                }
                 if (((PIN_knop&(1<<next))!=0)&&(next1_ingedrukt==1))
     2a6:	04 9b       	sbis	0x00, 4	; 0
     2a8:	d3 c2       	rjmp	.+1446   	; 0x850 <.L42>

000002aa <.L41>:
     2aa:	8f e3       	ldi	r24, 0x3F	; 63
     2ac:	9c e9       	ldi	r25, 0x9C	; 156

000002ae <.L1^B4>:
     2ae:	01 97       	sbiw	r24, 0x01	; 1
     2b0:	f1 f7       	brne	.-4      	; 0x2ae <.L1^B4>
     2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <L0^A>

000002b4 <L0^A>:
	...

000002b6 <.LBE154>:
                {
                _delay_ms(10);
                    if (((PIN_knop&(1<<next))!=0)&&(next1_ingedrukt==1))
     2b6:	04 9b       	sbis	0x00, 4	; 0
     2b8:	cb c2       	rjmp	.+1430   	; 0x850 <.L42>

000002ba <.Loc.124>:
     2ba:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <next1_ingedrukt.5>
     2be:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <next1_ingedrukt.5+0x1>
     2c2:	01 97       	sbiw	r24, 0x01	; 1
     2c4:	09 f0       	breq	.+2      	; 0x2c8 <.Loc.125>

000002c6 <L0^A>:
     2c6:	c4 c2       	rjmp	.+1416   	; 0x850 <.L42>

000002c8 <.Loc.125>:
                    {
                        next1_ingedrukt=0;
     2c8:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <next1_ingedrukt.5+0x1>
     2cc:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <next1_ingedrukt.5>

000002d0 <.Loc.127>:
                        h=2;
     2d0:	82 e0       	ldi	r24, 0x02	; 2
     2d2:	90 e0       	ldi	r25, 0x00	; 0
     2d4:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <h.10+0x1>
     2d8:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <h.10>
     2dc:	b9 c2       	rjmp	.+1394   	; 0x850 <.L42>

000002de <.L15>:
    switch(h)
     2de:	03 97       	sbiw	r24, 0x03	; 3
     2e0:	09 f0       	breq	.+2      	; 0x2e4 <.Loc.130>

000002e2 <L0^A>:
     2e2:	3e c5       	rjmp	.+2684   	; 0xd60 <.L13>

000002e4 <.Loc.130>:
                }
             break;
            }
        case 3:
            {
                if (((PIN_knop&(1<<start))==0)&&(start_ingedrukt==0))
     2e4:	06 99       	sbic	0x00, 6	; 0
     2e6:	fc c4       	rjmp	.+2552   	; 0xce0 <.L61>

000002e8 <.Loc.132>:
     2e8:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <start_ingedrukt.0>
     2ec:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <start_ingedrukt.0+0x1>
     2f0:	89 2b       	or	r24, r25
     2f2:	09 f0       	breq	.+2      	; 0x2f6 <.LBB156>

000002f4 <L0^A>:
     2f4:	f5 c4       	rjmp	.+2538   	; 0xce0 <.L61>

000002f6 <.LBB156>:
     2f6:	8f e3       	ldi	r24, 0x3F	; 63
     2f8:	9c e9       	ldi	r25, 0x9C	; 156

000002fa <.L1^B5>:
     2fa:	01 97       	sbiw	r24, 0x01	; 1
     2fc:	f1 f7       	brne	.-4      	; 0x2fa <.L1^B5>
     2fe:	00 c0       	rjmp	.+0      	; 0x300 <L0^A>

00000300 <L0^A>:
	...

00000302 <.LBE156>:
                {
                    _delay_ms(10);
                    if (((PIN_knop&(1<<start))==0)&&(start_ingedrukt==0))
     302:	06 99       	sbic	0x00, 6	; 0
     304:	ed c4       	rjmp	.+2522   	; 0xce0 <.L61>

00000306 <.Loc.144>:
     306:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <start_ingedrukt.0>
     30a:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <start_ingedrukt.0+0x1>
     30e:	89 2b       	or	r24, r25
     310:	09 f0       	breq	.+2      	; 0x314 <.Loc.145>

00000312 <L0^A>:
     312:	e6 c4       	rjmp	.+2508   	; 0xce0 <.L61>

00000314 <.Loc.145>:
                    {
                        start_ingedrukt=1;
     314:	81 e0       	ldi	r24, 0x01	; 1
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <start_ingedrukt.0+0x1>
     31c:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <start_ingedrukt.0>

00000320 <.Loc.147>:
                    }
                }
                 if (((PIN_knop&(1<<start))!=0)&&(start_ingedrukt==1))
     320:	06 9b       	sbis	0x00, 6	; 0
     322:	e7 c4       	rjmp	.+2510   	; 0xcf2 <.L63>

00000324 <.L62>:
     324:	8f e3       	ldi	r24, 0x3F	; 63
     326:	9c e9       	ldi	r25, 0x9C	; 156

00000328 <.L1^B6>:
     328:	01 97       	sbiw	r24, 0x01	; 1
     32a:	f1 f7       	brne	.-4      	; 0x328 <.L1^B6>
     32c:	00 c0       	rjmp	.+0      	; 0x32e <L0^A>

0000032e <L0^A>:
	...

00000330 <.LBE158>:
                {
                _delay_ms(10);
                    if (((PIN_knop&(1<<start))!=0)&&(start_ingedrukt==1)) // start met rijden als start is indgedukt
     330:	06 9b       	sbis	0x00, 6	; 0
     332:	df c4       	rjmp	.+2494   	; 0xcf2 <.L63>

00000334 <.Loc.160>:
     334:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <start_ingedrukt.0>
     338:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <start_ingedrukt.0+0x1>
     33c:	01 97       	sbiw	r24, 0x01	; 1
     33e:	09 f0       	breq	.+2      	; 0x342 <.Loc.161>

00000340 <L0^A>:
     340:	d8 c4       	rjmp	.+2480   	; 0xcf2 <.L63>

00000342 <.Loc.161>:
                    {
                        // start met rijden
                        start_ingedrukt=0;
     342:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <start_ingedrukt.0+0x1>
     346:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <start_ingedrukt.0>
     34a:	d3 c4       	rjmp	.+2470   	; 0xcf2 <.L63>

0000034c <.L16>:
                    display(segmentcodes[pakjes%10],0); // laat 4 nullen op display zien
     34c:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <pakjes>
     350:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <pakjes+0x1>
     354:	ca e0       	ldi	r28, 0x0A	; 10
     356:	d0 e0       	ldi	r29, 0x00	; 0
     358:	be 01       	movw	r22, r28
     35a:	0e 94 85 0a 	call	0x150a	; 0x150a <__divmodhi4>

0000035e <.Loc.165>:
     35e:	fc 01       	movw	r30, r24
     360:	ee 0f       	add	r30, r30
     362:	ff 1f       	adc	r31, r31
     364:	e0 50       	subi	r30, 0x00	; 0
     366:	fe 4f       	sbci	r31, 0xFE	; 254

00000368 <.Loc.166>:
     368:	60 e0       	ldi	r22, 0x00	; 0
     36a:	70 e0       	ldi	r23, 0x00	; 0
     36c:	80 81       	ld	r24, Z
     36e:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000372 <.LBB160>:
     372:	8f e9       	ldi	r24, 0x9F	; 159
     374:	9f e0       	ldi	r25, 0x0F	; 15

00000376 <.L1^B7>:
     376:	01 97       	sbiw	r24, 0x01	; 1
     378:	f1 f7       	brne	.-4      	; 0x376 <.L1^B7>
     37a:	00 c0       	rjmp	.+0      	; 0x37c <L0^A>

0000037c <L0^A>:
	...

0000037e <.LBE160>:
                    display(segmentcodes[(pakjes/10)%10],1);
     37e:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <pakjes>
     382:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <pakjes+0x1>
     386:	be 01       	movw	r22, r28
     388:	0e 94 85 0a 	call	0x150a	; 0x150a <__divmodhi4>
     38c:	cb 01       	movw	r24, r22

0000038e <.Loc.178>:
     38e:	be 01       	movw	r22, r28
     390:	0e 94 85 0a 	call	0x150a	; 0x150a <__divmodhi4>

00000394 <.Loc.179>:
     394:	fc 01       	movw	r30, r24
     396:	ee 0f       	add	r30, r30
     398:	ff 1f       	adc	r31, r31
     39a:	e0 50       	subi	r30, 0x00	; 0
     39c:	fe 4f       	sbci	r31, 0xFE	; 254

0000039e <.Loc.180>:
     39e:	61 e0       	ldi	r22, 0x01	; 1
     3a0:	70 e0       	ldi	r23, 0x00	; 0
     3a2:	80 81       	ld	r24, Z
     3a4:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000003a8 <.LBB162>:
     3a8:	8f e9       	ldi	r24, 0x9F	; 159
     3aa:	9f e0       	ldi	r25, 0x0F	; 15

000003ac <.L1^B8>:
     3ac:	01 97       	sbiw	r24, 0x01	; 1
     3ae:	f1 f7       	brne	.-4      	; 0x3ac <.L1^B8>
     3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <L0^A>

000003b2 <L0^A>:
	...

000003b4 <.LBE162>:
                    display(segmentcodes[(pakjes/100)%10],2);
     3b4:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <pakjes>
     3b8:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <pakjes+0x1>
     3bc:	64 e6       	ldi	r22, 0x64	; 100
     3be:	70 e0       	ldi	r23, 0x00	; 0
     3c0:	0e 94 85 0a 	call	0x150a	; 0x150a <__divmodhi4>
     3c4:	cb 01       	movw	r24, r22

000003c6 <.Loc.192>:
     3c6:	be 01       	movw	r22, r28
     3c8:	0e 94 85 0a 	call	0x150a	; 0x150a <__divmodhi4>

000003cc <.Loc.193>:
     3cc:	fc 01       	movw	r30, r24
     3ce:	ee 0f       	add	r30, r30
     3d0:	ff 1f       	adc	r31, r31
     3d2:	e0 50       	subi	r30, 0x00	; 0
     3d4:	fe 4f       	sbci	r31, 0xFE	; 254

000003d6 <.Loc.194>:
     3d6:	62 e0       	ldi	r22, 0x02	; 2
     3d8:	70 e0       	ldi	r23, 0x00	; 0
     3da:	80 81       	ld	r24, Z
     3dc:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000003e0 <.LBB164>:
     3e0:	8f e9       	ldi	r24, 0x9F	; 159
     3e2:	9f e0       	ldi	r25, 0x0F	; 15

000003e4 <.L1^B9>:
     3e4:	01 97       	sbiw	r24, 0x01	; 1
     3e6:	f1 f7       	brne	.-4      	; 0x3e4 <.L1^B9>
     3e8:	00 c0       	rjmp	.+0      	; 0x3ea <L0^A>

000003ea <L0^A>:
	...

000003ec <.LBE164>:
                    display(segmentcodes[0],3);
     3ec:	63 e0       	ldi	r22, 0x03	; 3
     3ee:	70 e0       	ldi	r23, 0x00	; 0
     3f0:	8c ef       	ldi	r24, 0xFC	; 252
     3f2:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000003f6 <.LBB166>:
     3f6:	8f e9       	ldi	r24, 0x9F	; 159
     3f8:	9f e0       	ldi	r25, 0x0F	; 15

000003fa <.L1^B10>:
     3fa:	01 97       	sbiw	r24, 0x01	; 1
     3fc:	f1 f7       	brne	.-4      	; 0x3fa <.L1^B10>
     3fe:	00 c0       	rjmp	.+0      	; 0x400 <L0^A>

00000400 <L0^A>:
	...

00000402 <.LBE166>:
                    display((char)~0b11111111,0123);
     402:	63 e5       	ldi	r22, 0x53	; 83
     404:	70 e0       	ldi	r23, 0x00	; 0
     406:	80 e0       	ldi	r24, 0x00	; 0
     408:	0e 94 bb 00 	call	0x176	; 0x176 <display>

0000040c <.LBB168>:
     40c:	8f e9       	ldi	r24, 0x9F	; 159
     40e:	9f e0       	ldi	r25, 0x0F	; 15

00000410 <.L1^B11>:
     410:	01 97       	sbiw	r24, 0x01	; 1
     412:	f1 f7       	brne	.-4      	; 0x410 <.L1^B11>
     414:	00 c0       	rjmp	.+0      	; 0x416 <L0^A>

00000416 <L0^A>:
	...

00000418 <.LBE168>:
                 if (((PIN_knop&(1<<plus))==0)&&(plus_ingedrukt==0))
     418:	02 99       	sbic	0x00, 2	; 0
     41a:	38 c0       	rjmp	.+112    	; 0x48c <.L20>

0000041c <.Loc.226>:
     41c:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <plus_ingedrukt.9>
     420:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <plus_ingedrukt.9+0x1>
     424:	89 2b       	or	r24, r25
     426:	91 f5       	brne	.+100    	; 0x48c <.L20>

00000428 <.LBB170>:
     428:	8f e3       	ldi	r24, 0x3F	; 63
     42a:	9c e9       	ldi	r25, 0x9C	; 156

0000042c <.L1^B12>:
     42c:	01 97       	sbiw	r24, 0x01	; 1
     42e:	f1 f7       	brne	.-4      	; 0x42c <.L1^B12>
     430:	00 c0       	rjmp	.+0      	; 0x432 <L0^A>

00000432 <L0^A>:
	...

00000434 <.LBE170>:
                        if (((PIN_knop&(1<<plus))==0)&&(plus_ingedrukt==0))
     434:	02 99       	sbic	0x00, 2	; 0
     436:	2a c0       	rjmp	.+84     	; 0x48c <.L20>

00000438 <.Loc.238>:
     438:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <plus_ingedrukt.9>
     43c:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <plus_ingedrukt.9+0x1>
     440:	89 2b       	or	r24, r25
     442:	21 f5       	brne	.+72     	; 0x48c <.L20>

00000444 <.Loc.239>:
                            plus_ingedrukt=1;
     444:	81 e0       	ldi	r24, 0x01	; 1
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <plus_ingedrukt.9+0x1>
     44c:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <plus_ingedrukt.9>

00000450 <.Loc.241>:
                if (((PIN_knop&(1<<plus))!=0)&&(plus_ingedrukt==1))
     450:	02 9b       	sbis	0x00, 2	; 0
     452:	24 c0       	rjmp	.+72     	; 0x49c <.L22>

00000454 <.L21>:
     454:	8f e3       	ldi	r24, 0x3F	; 63
     456:	9c e9       	ldi	r25, 0x9C	; 156

00000458 <.L1^B13>:
     458:	01 97       	sbiw	r24, 0x01	; 1
     45a:	f1 f7       	brne	.-4      	; 0x458 <.L1^B13>
     45c:	00 c0       	rjmp	.+0      	; 0x45e <L0^A>

0000045e <L0^A>:
	...

00000460 <.LBE172>:
                    if (((PIN_knop&(1<<plus))!=0&&(plus_ingedrukt==1)))
     460:	02 9b       	sbis	0x00, 2	; 0
     462:	1c c0       	rjmp	.+56     	; 0x49c <.L22>

00000464 <.Loc.254>:
     464:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <plus_ingedrukt.9>
     468:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <plus_ingedrukt.9+0x1>
     46c:	01 97       	sbiw	r24, 0x01	; 1
     46e:	b1 f4       	brne	.+44     	; 0x49c <.L22>

00000470 <.Loc.255>:
                    pakjes++;                                   // instellen hoeveel pakjes er geteld moeten worden als plus is ingedrukt
     470:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <pakjes>
     474:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <pakjes+0x1>
     478:	01 96       	adiw	r24, 0x01	; 1
     47a:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <pakjes+0x1>
     47e:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <pakjes>

00000482 <.Loc.257>:
                    plus_ingedrukt=0;                           // en geef dat weer in oplopende getallen op display
     482:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <plus_ingedrukt.9+0x1>
     486:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <plus_ingedrukt.9>
     48a:	08 c0       	rjmp	.+16     	; 0x49c <.L22>

0000048c <.L20>:
                if (((PIN_knop&(1<<plus))!=0)&&(plus_ingedrukt==1))
     48c:	02 9b       	sbis	0x00, 2	; 0
     48e:	06 c0       	rjmp	.+12     	; 0x49c <.L22>

00000490 <.Loc.261>:
     490:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <plus_ingedrukt.9>
     494:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <plus_ingedrukt.9+0x1>
     498:	01 97       	sbiw	r24, 0x01	; 1
     49a:	e1 f2       	breq	.-72     	; 0x454 <.L21>

0000049c <.L22>:
                if (((PIN_knop&(1<<next))==0)&&(next_ingedrukt==0)) // naar volgende stand
     49c:	04 99       	sbic	0x00, 4	; 0
     49e:	35 c0       	rjmp	.+106    	; 0x50a <.L23>

000004a0 <.Loc.264>:
     4a0:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <next_ingedrukt.8>
     4a4:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <next_ingedrukt.8+0x1>
     4a8:	89 2b       	or	r24, r25
     4aa:	79 f5       	brne	.+94     	; 0x50a <.L23>

000004ac <.LBB174>:
     4ac:	8f e3       	ldi	r24, 0x3F	; 63
     4ae:	9c e9       	ldi	r25, 0x9C	; 156

000004b0 <.L1^B14>:
     4b0:	01 97       	sbiw	r24, 0x01	; 1
     4b2:	f1 f7       	brne	.-4      	; 0x4b0 <.L1^B14>
     4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <L0^A>

000004b6 <L0^A>:
	...

000004b8 <.LBE174>:
                    if (((PIN_knop&(1<<next))==0)&&(next_ingedrukt==0))
     4b8:	04 99       	sbic	0x00, 4	; 0
     4ba:	27 c0       	rjmp	.+78     	; 0x50a <.L23>

000004bc <.Loc.276>:
     4bc:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <next_ingedrukt.8>
     4c0:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <next_ingedrukt.8+0x1>
     4c4:	89 2b       	or	r24, r25
     4c6:	09 f5       	brne	.+66     	; 0x50a <.L23>

000004c8 <.Loc.277>:
                        next_ingedrukt=1;
     4c8:	81 e0       	ldi	r24, 0x01	; 1
     4ca:	90 e0       	ldi	r25, 0x00	; 0
     4cc:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <next_ingedrukt.8+0x1>
     4d0:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <next_ingedrukt.8>

000004d4 <.Loc.279>:
                 if (((PIN_knop&(1<<next))!=0)&&(next_ingedrukt==1))
     4d4:	04 9b       	sbis	0x00, 4	; 0
     4d6:	21 c0       	rjmp	.+66     	; 0x51a <.L25>

000004d8 <.L24>:
     4d8:	8f e3       	ldi	r24, 0x3F	; 63
     4da:	9c e9       	ldi	r25, 0x9C	; 156

000004dc <.L1^B15>:
     4dc:	01 97       	sbiw	r24, 0x01	; 1
     4de:	f1 f7       	brne	.-4      	; 0x4dc <.L1^B15>
     4e0:	00 c0       	rjmp	.+0      	; 0x4e2 <L0^A>

000004e2 <L0^A>:
	...

000004e4 <.LBE176>:
                    if (((PIN_knop&(1<<next))!=0)&&(next_ingedrukt==1))
     4e4:	04 9b       	sbis	0x00, 4	; 0
     4e6:	19 c0       	rjmp	.+50     	; 0x51a <.L25>

000004e8 <.Loc.292>:
     4e8:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <next_ingedrukt.8>
     4ec:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <next_ingedrukt.8+0x1>
     4f0:	01 97       	sbiw	r24, 0x01	; 1
     4f2:	99 f4       	brne	.+38     	; 0x51a <.L25>

000004f4 <.Loc.293>:
                       next_ingedrukt=0;
     4f4:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <next_ingedrukt.8+0x1>
     4f8:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <next_ingedrukt.8>

000004fc <.Loc.295>:
                        h=1;
     4fc:	81 e0       	ldi	r24, 0x01	; 1
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <h.10+0x1>
     504:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <h.10>
     508:	08 c0       	rjmp	.+16     	; 0x51a <.L25>

0000050a <.L23>:
                 if (((PIN_knop&(1<<next))!=0)&&(next_ingedrukt==1))
     50a:	04 9b       	sbis	0x00, 4	; 0
     50c:	06 c0       	rjmp	.+12     	; 0x51a <.L25>

0000050e <.Loc.299>:
     50e:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <next_ingedrukt.8>
     512:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <next_ingedrukt.8+0x1>
     516:	01 97       	sbiw	r24, 0x01	; 1
     518:	f9 f2       	breq	.-66     	; 0x4d8 <.L24>

0000051a <.L25>:
                if (((PIN_knop&(1<<back))==0)&&(back_ingedrukt==0)) // aantal pakjes weer op 0 zetten en verwijderen hoeveel er is ingevoerd als back is ingedrukt
     51a:	00 99       	sbic	0x00, 0	; 0
     51c:	21 c0       	rjmp	.+66     	; 0x560 <.L26>

0000051e <.Loc.302>:
     51e:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <back_ingedrukt.7>
     522:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <back_ingedrukt.7+0x1>
     526:	89 2b       	or	r24, r25
     528:	d9 f4       	brne	.+54     	; 0x560 <.L26>

0000052a <.LBB178>:
     52a:	8f e3       	ldi	r24, 0x3F	; 63
     52c:	9c e9       	ldi	r25, 0x9C	; 156

0000052e <.L1^B16>:
     52e:	01 97       	sbiw	r24, 0x01	; 1
     530:	f1 f7       	brne	.-4      	; 0x52e <.L1^B16>
     532:	00 c0       	rjmp	.+0      	; 0x534 <L0^A>

00000534 <L0^A>:
	...

00000536 <.LBE178>:
                    if (((PIN_knop&(1<<back))==0)&&(back_ingedrukt==0))
     536:	00 99       	sbic	0x00, 0	; 0
     538:	13 c0       	rjmp	.+38     	; 0x560 <.L26>

0000053a <.Loc.314>:
     53a:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <back_ingedrukt.7>
     53e:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <back_ingedrukt.7+0x1>
     542:	89 2b       	or	r24, r25
     544:	69 f4       	brne	.+26     	; 0x560 <.L26>

00000546 <.Loc.315>:
                        back_ingedrukt=1;
     546:	81 e0       	ldi	r24, 0x01	; 1
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <back_ingedrukt.7+0x1>
     54e:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <back_ingedrukt.7>

00000552 <.Loc.317>:
                        pakjes=0;
     552:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <pakjes+0x1>
     556:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <pakjes>

0000055a <.Loc.319>:
                 if (((PIN_knop&(1<<back))!=0)&&(back_ingedrukt==1))
     55a:	00 9b       	sbis	0x00, 0	; 0
     55c:	01 c4       	rjmp	.+2050   	; 0xd60 <.L13>
     55e:	09 c0       	rjmp	.+18     	; 0x572 <.L27>

00000560 <.L26>:
     560:	00 9b       	sbis	0x00, 0	; 0
     562:	fe c3       	rjmp	.+2044   	; 0xd60 <.L13>

00000564 <.Loc.323>:
     564:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <back_ingedrukt.7>
     568:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <back_ingedrukt.7+0x1>
     56c:	01 97       	sbiw	r24, 0x01	; 1
     56e:	09 f0       	breq	.+2      	; 0x572 <.L27>

00000570 <L0^A>:
     570:	f7 c3       	rjmp	.+2030   	; 0xd60 <.L13>

00000572 <.L27>:
     572:	8f e3       	ldi	r24, 0x3F	; 63
     574:	9c e9       	ldi	r25, 0x9C	; 156

00000576 <.L1^B17>:
     576:	01 97       	sbiw	r24, 0x01	; 1
     578:	f1 f7       	brne	.-4      	; 0x576 <.L1^B17>
     57a:	00 c0       	rjmp	.+0      	; 0x57c <L0^A>

0000057c <L0^A>:
	...

0000057e <.LBE180>:
                    if (((PIN_knop&(1<<back))!=0)&&(back_ingedrukt==1))
     57e:	00 9b       	sbis	0x00, 0	; 0
     580:	ef c3       	rjmp	.+2014   	; 0xd60 <.L13>

00000582 <.Loc.335>:
     582:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <back_ingedrukt.7>
     586:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <back_ingedrukt.7+0x1>
     58a:	01 97       	sbiw	r24, 0x01	; 1
     58c:	09 f0       	breq	.+2      	; 0x590 <.Loc.336>

0000058e <L0^A>:
     58e:	e8 c3       	rjmp	.+2000   	; 0xd60 <.L13>

00000590 <.Loc.336>:
                        display(segmentcodes[0],3);
     590:	63 e0       	ldi	r22, 0x03	; 3
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	8c ef       	ldi	r24, 0xFC	; 252
     596:	0e 94 bb 00 	call	0x176	; 0x176 <display>

0000059a <.LBB182>:
     59a:	8f e9       	ldi	r24, 0x9F	; 159
     59c:	9f e0       	ldi	r25, 0x0F	; 15

0000059e <.L1^B18>:
     59e:	01 97       	sbiw	r24, 0x01	; 1
     5a0:	f1 f7       	brne	.-4      	; 0x59e <.L1^B18>
     5a2:	00 c0       	rjmp	.+0      	; 0x5a4 <L0^A>

000005a4 <L0^A>:
	...

000005a6 <.LBE182>:
                        display((char)~0b11111111,012);
     5a6:	6a e0       	ldi	r22, 0x0A	; 10
     5a8:	70 e0       	ldi	r23, 0x00	; 0
     5aa:	80 e0       	ldi	r24, 0x00	; 0
     5ac:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000005b0 <.LBB184>:
     5b0:	8f e9       	ldi	r24, 0x9F	; 159
     5b2:	9f e0       	ldi	r25, 0x0F	; 15

000005b4 <.L1^B19>:
     5b4:	01 97       	sbiw	r24, 0x01	; 1
     5b6:	f1 f7       	brne	.-4      	; 0x5b4 <.L1^B19>
     5b8:	00 c0       	rjmp	.+0      	; 0x5ba <L0^A>

000005ba <L0^A>:
	...

000005bc <.LBE184>:
                        back_ingedrukt=1;
     5bc:	81 e0       	ldi	r24, 0x01	; 1
     5be:	90 e0       	ldi	r25, 0x00	; 0
     5c0:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <back_ingedrukt.7+0x1>
     5c4:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <back_ingedrukt.7>
     5c8:	cb c3       	rjmp	.+1942   	; 0xd60 <.L13>

000005ca <.L65>:
                    if(((PIN_knop&(1<<plus))==0)&&(plus1_ingedrukt==0)) // punt pisplay bij het streepje als plus is ingedrukt
     5ca:	02 99       	sbic	0x00, 2	; 0
     5cc:	33 c0       	rjmp	.+102    	; 0x634 <.L31>

000005ce <.Loc.360>:
     5ce:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <plus1_ingedrukt.6>
     5d2:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <plus1_ingedrukt.6+0x1>
     5d6:	89 2b       	or	r24, r25
     5d8:	69 f5       	brne	.+90     	; 0x634 <.L31>

000005da <.LBB186>:
     5da:	8f e3       	ldi	r24, 0x3F	; 63
     5dc:	9c e9       	ldi	r25, 0x9C	; 156

000005de <.L1^B20>:
     5de:	01 97       	sbiw	r24, 0x01	; 1
     5e0:	f1 f7       	brne	.-4      	; 0x5de <.L1^B20>
     5e2:	00 c0       	rjmp	.+0      	; 0x5e4 <L0^A>

000005e4 <L0^A>:
	...

000005e6 <.LBE186>:
                        if (((PIN_knop&(1<<plus))==0)&&(plus1_ingedrukt==0))
     5e6:	02 99       	sbic	0x00, 2	; 0
     5e8:	25 c0       	rjmp	.+74     	; 0x634 <.L31>

000005ea <.Loc.372>:
     5ea:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <plus1_ingedrukt.6>
     5ee:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <plus1_ingedrukt.6+0x1>
     5f2:	89 2b       	or	r24, r25
     5f4:	f9 f4       	brne	.+62     	; 0x634 <.L31>

000005f6 <.Loc.373>:
                            letter=1;
     5f6:	81 e0       	ldi	r24, 0x01	; 1
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <letter+0x1>
     5fe:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <letter>

00000602 <.Loc.375>:
                            plus1_ingedrukt=1;
     602:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <plus1_ingedrukt.6+0x1>
     606:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <plus1_ingedrukt.6>

0000060a <.Loc.377>:
                    if(((PIN_knop&(1<<plus))!=0)&&(plus1_ingedrukt==1))
     60a:	02 9b       	sbis	0x00, 2	; 0
     60c:	1b c0       	rjmp	.+54     	; 0x644 <.L33>

0000060e <.L32>:
     60e:	8f e3       	ldi	r24, 0x3F	; 63
     610:	9c e9       	ldi	r25, 0x9C	; 156

00000612 <.L1^B21>:
     612:	01 97       	sbiw	r24, 0x01	; 1
     614:	f1 f7       	brne	.-4      	; 0x612 <.L1^B21>
     616:	00 c0       	rjmp	.+0      	; 0x618 <L0^A>

00000618 <L0^A>:
	...

0000061a <.LBE188>:
                        if (((PIN_knop&(1<<plus))!=0)&&(plus1_ingedrukt==1))
     61a:	02 9b       	sbis	0x00, 2	; 0
     61c:	13 c0       	rjmp	.+38     	; 0x644 <.L33>

0000061e <.Loc.390>:
     61e:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <plus1_ingedrukt.6>
     622:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <plus1_ingedrukt.6+0x1>
     626:	01 97       	sbiw	r24, 0x01	; 1
     628:	69 f4       	brne	.+26     	; 0x644 <.L33>

0000062a <.Loc.391>:
                            plus1_ingedrukt=0;
     62a:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <plus1_ingedrukt.6+0x1>
     62e:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <plus1_ingedrukt.6>
     632:	08 c0       	rjmp	.+16     	; 0x644 <.L33>

00000634 <.L31>:
                    if(((PIN_knop&(1<<plus))!=0)&&(plus1_ingedrukt==1))
     634:	02 9b       	sbis	0x00, 2	; 0
     636:	06 c0       	rjmp	.+12     	; 0x644 <.L33>

00000638 <.Loc.395>:
     638:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <plus1_ingedrukt.6>
     63c:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <plus1_ingedrukt.6+0x1>
     640:	01 97       	sbiw	r24, 0x01	; 1
     642:	29 f3       	breq	.-54     	; 0x60e <.L32>

00000644 <.L33>:
                            display(segmentcodes[1],3); // laat 1 - L r op display zien met punt bij -
     644:	63 e0       	ldi	r22, 0x03	; 3
     646:	70 e0       	ldi	r23, 0x00	; 0
     648:	80 e6       	ldi	r24, 0x60	; 96
     64a:	0e 94 bb 00 	call	0x176	; 0x176 <display>

0000064e <.LBB190>:
     64e:	8f e9       	ldi	r24, 0x9F	; 159
     650:	9f e0       	ldi	r25, 0x0F	; 15

00000652 <.L1^B22>:
     652:	01 97       	sbiw	r24, 0x01	; 1
     654:	f1 f7       	brne	.-4      	; 0x652 <.L1^B22>
     656:	00 c0       	rjmp	.+0      	; 0x658 <L0^A>

00000658 <L0^A>:
	...

0000065a <.LBE190>:
                            display((char)~0b11111100,2);
     65a:	62 e0       	ldi	r22, 0x02	; 2
     65c:	70 e0       	ldi	r23, 0x00	; 0
     65e:	83 e0       	ldi	r24, 0x03	; 3
     660:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000664 <.LBB192>:
     664:	8f e9       	ldi	r24, 0x9F	; 159
     666:	9f e0       	ldi	r25, 0x0F	; 15

00000668 <.L1^B23>:
     668:	01 97       	sbiw	r24, 0x01	; 1
     66a:	f1 f7       	brne	.-4      	; 0x668 <.L1^B23>
     66c:	00 c0       	rjmp	.+0      	; 0x66e <L0^A>

0000066e <L0^A>:
	...

00000670 <.LBE192>:
                            display((char)~0b11100011,1);
     670:	61 e0       	ldi	r22, 0x01	; 1
     672:	70 e0       	ldi	r23, 0x00	; 0
     674:	8c e1       	ldi	r24, 0x1C	; 28
     676:	0e 94 bb 00 	call	0x176	; 0x176 <display>

0000067a <.LBB194>:
     67a:	8f e9       	ldi	r24, 0x9F	; 159
     67c:	9f e0       	ldi	r25, 0x0F	; 15

0000067e <.L1^B24>:
     67e:	01 97       	sbiw	r24, 0x01	; 1
     680:	f1 f7       	brne	.-4      	; 0x67e <.L1^B24>
     682:	00 c0       	rjmp	.+0      	; 0x684 <L0^A>

00000684 <L0^A>:
	...

00000686 <.LBE194>:
                            display((char)~0b01110011,0);
     686:	60 e0       	ldi	r22, 0x00	; 0
     688:	70 e0       	ldi	r23, 0x00	; 0
     68a:	8c e8       	ldi	r24, 0x8C	; 140
     68c:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000690 <.LBB196>:
     690:	8f e9       	ldi	r24, 0x9F	; 159
     692:	9f e0       	ldi	r25, 0x0F	; 15

00000694 <.L1^B25>:
     694:	01 97       	sbiw	r24, 0x01	; 1
     696:	f1 f7       	brne	.-4      	; 0x694 <.L1^B25>
     698:	00 c0       	rjmp	.+0      	; 0x69a <L0^A>

0000069a <L0^A>:
	...

0000069c <.LBE196>:
                            display((char)~0b11111111,0123);
     69c:	63 e5       	ldi	r22, 0x53	; 83
     69e:	70 e0       	ldi	r23, 0x00	; 0
     6a0:	80 e0       	ldi	r24, 0x00	; 0
     6a2:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000006a6 <.LBB198>:
     6a6:	8f e9       	ldi	r24, 0x9F	; 159
     6a8:	9f e0       	ldi	r25, 0x0F	; 15

000006aa <.L1^B26>:
     6aa:	01 97       	sbiw	r24, 0x01	; 1
     6ac:	f1 f7       	brne	.-4      	; 0x6aa <.L1^B26>
     6ae:	00 c0       	rjmp	.+0      	; 0x6b0 <L0^A>

000006b0 <L0^A>:
	...

000006b2 <.Loc.445>:
	}
	else
		__ticks = (uint16_t)__tmp;
	_delay_loop_2(__ticks);
#endif
}
     6b2:	db cd       	rjmp	.-1098   	; 0x26a <.L30>

000006b4 <.L28>:
                      if(((PIN_knop&(1<<plus))==0)&&(plus1_ingedrukt==0)) // punt display bij de letter L als plus is ingedrukt
     6b4:	02 99       	sbic	0x00, 2	; 0
     6b6:	57 c3       	rjmp	.+1710   	; 0xd66 <.L34>

000006b8 <.Loc.449>:
     6b8:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <plus1_ingedrukt.6>
     6bc:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <plus1_ingedrukt.6+0x1>
     6c0:	89 2b       	or	r24, r25
     6c2:	09 f0       	breq	.+2      	; 0x6c6 <.LBB200>

000006c4 <L0^A>:
     6c4:	50 c3       	rjmp	.+1696   	; 0xd66 <.L34>

000006c6 <.LBB200>:
	__builtin_avr_delay_cycles(__ticks_dc);
     6c6:	8f e3       	ldi	r24, 0x3F	; 63
     6c8:	9c e9       	ldi	r25, 0x9C	; 156

000006ca <.L1^B27>:
     6ca:	01 97       	sbiw	r24, 0x01	; 1
     6cc:	f1 f7       	brne	.-4      	; 0x6ca <.L1^B27>
     6ce:	00 c0       	rjmp	.+0      	; 0x6d0 <L0^A>

000006d0 <L0^A>:
	...

000006d2 <.LBE200>:
                        if(((PIN_knop&(1<<plus))==0)&&(plus1_ingedrukt==0))
     6d2:	02 99       	sbic	0x00, 2	; 0
     6d4:	14 c0       	rjmp	.+40     	; 0x6fe <.L35>

000006d6 <.Loc.461>:
     6d6:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <plus1_ingedrukt.6>
     6da:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <plus1_ingedrukt.6+0x1>
     6de:	89 2b       	or	r24, r25
     6e0:	71 f4       	brne	.+28     	; 0x6fe <.L35>

000006e2 <.Loc.462>:
                            letter=2;
     6e2:	82 e0       	ldi	r24, 0x02	; 2
     6e4:	90 e0       	ldi	r25, 0x00	; 0
     6e6:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <letter+0x1>
     6ea:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <letter>

000006ee <.Loc.464>:
                            plus1_ingedrukt=1;
     6ee:	81 e0       	ldi	r24, 0x01	; 1
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <plus1_ingedrukt.6+0x1>
     6f6:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <plus1_ingedrukt.6>

000006fa <.Loc.466>:
                    if((((PIN_knop&(1<<plus))!=0)&&(letter==1))&&(plus1_ingedrukt==1))
     6fa:	80 b1       	in	r24, 0x00	; 0
     6fc:	36 c3       	rjmp	.+1644   	; 0xd6a <.L36>

000006fe <.L35>:
     6fe:	02 9b       	sbis	0x00, 2	; 0
     700:	34 c3       	rjmp	.+1640   	; 0xd6a <.L36>

00000702 <.Loc.470>:
     702:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <letter>
     706:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <letter+0x1>
     70a:	01 97       	sbiw	r24, 0x01	; 1
     70c:	09 f0       	breq	.+2      	; 0x710 <.L64>

0000070e <L0^A>:
     70e:	2d c3       	rjmp	.+1626   	; 0xd6a <.L36>

00000710 <.L64>:
     710:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <plus1_ingedrukt.6>
     714:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <plus1_ingedrukt.6+0x1>
     718:	01 97       	sbiw	r24, 0x01	; 1
     71a:	09 f0       	breq	.+2      	; 0x71e <.LBB202>

0000071c <L0^A>:
     71c:	26 c3       	rjmp	.+1612   	; 0xd6a <.L36>

0000071e <.LBB202>:
     71e:	8f e3       	ldi	r24, 0x3F	; 63
     720:	9c e9       	ldi	r25, 0x9C	; 156

00000722 <.L1^B28>:
     722:	01 97       	sbiw	r24, 0x01	; 1
     724:	f1 f7       	brne	.-4      	; 0x722 <.L1^B28>
     726:	00 c0       	rjmp	.+0      	; 0x728 <L0^A>

00000728 <L0^A>:
	...

0000072a <.LBE202>:
                        if ((((PIN_knop&(1<<plus))!=0)&&(letter==1))&&(plus1_ingedrukt==1))
     72a:	02 9b       	sbis	0x00, 2	; 0
     72c:	1e c3       	rjmp	.+1596   	; 0xd6a <.L36>

0000072e <.Loc.483>:
     72e:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <letter>
     732:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <letter+0x1>
     736:	01 97       	sbiw	r24, 0x01	; 1
     738:	09 f0       	breq	.+2      	; 0x73c <.Loc.484>

0000073a <L0^A>:
     73a:	17 c3       	rjmp	.+1582   	; 0xd6a <.L36>

0000073c <.Loc.484>:
     73c:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <plus1_ingedrukt.6>
     740:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <plus1_ingedrukt.6+0x1>
     744:	01 97       	sbiw	r24, 0x01	; 1
     746:	09 f0       	breq	.+2      	; 0x74a <.Loc.485>

00000748 <L0^A>:
     748:	10 c3       	rjmp	.+1568   	; 0xd6a <.L36>

0000074a <.Loc.485>:
                            plus1_ingedrukt=0;
     74a:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <plus1_ingedrukt.6+0x1>
     74e:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <plus1_ingedrukt.6>
     752:	0b c3       	rjmp	.+1558   	; 0xd6a <.L36>

00000754 <.L29>:
                         if(((PIN_knop&(1<<plus))==0)&&(plus1_ingedrukt==0))// punt dispay bij de letter R als plus is ingedrukt
     754:	02 99       	sbic	0x00, 2	; 0
     756:	33 c0       	rjmp	.+102    	; 0x7be <.L37>

00000758 <.Loc.489>:
     758:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <plus1_ingedrukt.6>
     75c:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <plus1_ingedrukt.6+0x1>
     760:	89 2b       	or	r24, r25
     762:	69 f5       	brne	.+90     	; 0x7be <.L37>

00000764 <.LBB204>:
     764:	8f e3       	ldi	r24, 0x3F	; 63
     766:	9c e9       	ldi	r25, 0x9C	; 156

00000768 <.L1^B29>:
     768:	01 97       	sbiw	r24, 0x01	; 1
     76a:	f1 f7       	brne	.-4      	; 0x768 <.L1^B29>
     76c:	00 c0       	rjmp	.+0      	; 0x76e <L0^A>

0000076e <L0^A>:
	...

00000770 <.LBE204>:
                        if(((PIN_knop&(1<<plus))==0)&&(plus1_ingedrukt==0))
     770:	02 99       	sbic	0x00, 2	; 0
     772:	25 c0       	rjmp	.+74     	; 0x7be <.L37>

00000774 <.Loc.501>:
     774:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <plus1_ingedrukt.6>
     778:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <plus1_ingedrukt.6+0x1>
     77c:	89 2b       	or	r24, r25
     77e:	f9 f4       	brne	.+62     	; 0x7be <.L37>

00000780 <.Loc.502>:
                            letter=0;
     780:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <letter+0x1>
     784:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <letter>

00000788 <.Loc.504>:
                            plus1_ingedrukt=1;
     788:	81 e0       	ldi	r24, 0x01	; 1
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <plus1_ingedrukt.6+0x1>
     790:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <plus1_ingedrukt.6>

00000794 <.Loc.506>:
                        if(((PIN_knop&(1<<plus))!=0)&&(plus1_ingedrukt==1))
     794:	02 9b       	sbis	0x00, 2	; 0
     796:	1b c0       	rjmp	.+54     	; 0x7ce <.L39>

00000798 <.L38>:
     798:	8f e3       	ldi	r24, 0x3F	; 63
     79a:	9c e9       	ldi	r25, 0x9C	; 156

0000079c <.L1^B30>:
     79c:	01 97       	sbiw	r24, 0x01	; 1
     79e:	f1 f7       	brne	.-4      	; 0x79c <.L1^B30>
     7a0:	00 c0       	rjmp	.+0      	; 0x7a2 <L0^A>

000007a2 <L0^A>:
	...

000007a4 <.LBE206>:
                        if (((PIN_knop&(1<<plus))!=0)&&(plus1_ingedrukt==1))
     7a4:	02 9b       	sbis	0x00, 2	; 0
     7a6:	13 c0       	rjmp	.+38     	; 0x7ce <.L39>

000007a8 <.Loc.519>:
     7a8:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <plus1_ingedrukt.6>
     7ac:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <plus1_ingedrukt.6+0x1>
     7b0:	01 97       	sbiw	r24, 0x01	; 1
     7b2:	69 f4       	brne	.+26     	; 0x7ce <.L39>

000007b4 <.Loc.520>:
                            plus1_ingedrukt=0;
     7b4:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <plus1_ingedrukt.6+0x1>
     7b8:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <plus1_ingedrukt.6>
     7bc:	08 c0       	rjmp	.+16     	; 0x7ce <.L39>

000007be <.L37>:
                        if(((PIN_knop&(1<<plus))!=0)&&(plus1_ingedrukt==1))
     7be:	02 9b       	sbis	0x00, 2	; 0
     7c0:	06 c0       	rjmp	.+12     	; 0x7ce <.L39>

000007c2 <.Loc.524>:
     7c2:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <plus1_ingedrukt.6>
     7c6:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <plus1_ingedrukt.6+0x1>
     7ca:	01 97       	sbiw	r24, 0x01	; 1
     7cc:	29 f3       	breq	.-54     	; 0x798 <.L38>

000007ce <.L39>:
                            display(segmentcodes[1],3);         //laat 1 - L r op display zien met punt bij r
     7ce:	63 e0       	ldi	r22, 0x03	; 3
     7d0:	70 e0       	ldi	r23, 0x00	; 0
     7d2:	80 e6       	ldi	r24, 0x60	; 96
     7d4:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000007d8 <.LBB208>:
     7d8:	8f e9       	ldi	r24, 0x9F	; 159
     7da:	9f e0       	ldi	r25, 0x0F	; 15

000007dc <.L1^B31>:
     7dc:	01 97       	sbiw	r24, 0x01	; 1
     7de:	f1 f7       	brne	.-4      	; 0x7dc <.L1^B31>
     7e0:	00 c0       	rjmp	.+0      	; 0x7e2 <L0^A>

000007e2 <L0^A>:
	...

000007e4 <.LBE208>:
                            display((char)~0b11111101,2);
     7e4:	62 e0       	ldi	r22, 0x02	; 2
     7e6:	70 e0       	ldi	r23, 0x00	; 0
     7e8:	82 e0       	ldi	r24, 0x02	; 2
     7ea:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000007ee <.LBB210>:
     7ee:	8f e9       	ldi	r24, 0x9F	; 159
     7f0:	9f e0       	ldi	r25, 0x0F	; 15

000007f2 <.L1^B32>:
     7f2:	01 97       	sbiw	r24, 0x01	; 1
     7f4:	f1 f7       	brne	.-4      	; 0x7f2 <.L1^B32>
     7f6:	00 c0       	rjmp	.+0      	; 0x7f8 <L0^A>

000007f8 <L0^A>:
	...

000007fa <.LBE210>:
                            display((char)~0b11100011,1);
     7fa:	61 e0       	ldi	r22, 0x01	; 1
     7fc:	70 e0       	ldi	r23, 0x00	; 0
     7fe:	8c e1       	ldi	r24, 0x1C	; 28
     800:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000804 <.LBB212>:
     804:	8f e9       	ldi	r24, 0x9F	; 159
     806:	9f e0       	ldi	r25, 0x0F	; 15

00000808 <.L1^B33>:
     808:	01 97       	sbiw	r24, 0x01	; 1
     80a:	f1 f7       	brne	.-4      	; 0x808 <.L1^B33>
     80c:	00 c0       	rjmp	.+0      	; 0x80e <L0^A>

0000080e <L0^A>:
	...

00000810 <.LBE212>:
                            display((char)~0b01110010,0);
     810:	60 e0       	ldi	r22, 0x00	; 0
     812:	70 e0       	ldi	r23, 0x00	; 0
     814:	8d e8       	ldi	r24, 0x8D	; 141
     816:	0e 94 bb 00 	call	0x176	; 0x176 <display>

0000081a <.LBB214>:
     81a:	8f e9       	ldi	r24, 0x9F	; 159
     81c:	9f e0       	ldi	r25, 0x0F	; 15

0000081e <.L1^B34>:
     81e:	01 97       	sbiw	r24, 0x01	; 1
     820:	f1 f7       	brne	.-4      	; 0x81e <.L1^B34>
     822:	00 c0       	rjmp	.+0      	; 0x824 <L0^A>

00000824 <L0^A>:
	...

00000826 <.LBE214>:
                            display((char)~0b11111111,0123);
     826:	63 e5       	ldi	r22, 0x53	; 83
     828:	70 e0       	ldi	r23, 0x00	; 0
     82a:	80 e0       	ldi	r24, 0x00	; 0
     82c:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000830 <.LBB216>:
     830:	8f e9       	ldi	r24, 0x9F	; 159
     832:	9f e0       	ldi	r25, 0x0F	; 15

00000834 <.L1^B35>:
     834:	01 97       	sbiw	r24, 0x01	; 1
     836:	f1 f7       	brne	.-4      	; 0x834 <.L1^B35>
     838:	00 c0       	rjmp	.+0      	; 0x83a <L0^A>

0000083a <L0^A>:
	...

0000083c <.Loc.574>:
}
     83c:	16 cd       	rjmp	.-1492   	; 0x26a <.L30>

0000083e <.L40>:
                 if (((PIN_knop&(1<<next))!=0)&&(next1_ingedrukt==1))
     83e:	04 9b       	sbis	0x00, 4	; 0
     840:	07 c0       	rjmp	.+14     	; 0x850 <.L42>

00000842 <.Loc.578>:
     842:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <next1_ingedrukt.5>
     846:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <next1_ingedrukt.5+0x1>
     84a:	01 97       	sbiw	r24, 0x01	; 1
     84c:	09 f4       	brne	.+2      	; 0x850 <.L42>

0000084e <L0^A>:
     84e:	2d cd       	rjmp	.-1446   	; 0x2aa <.L41>

00000850 <.L42>:
                if (((PIN_knop&(1<<back))==0)&&(back1_ingedrukt==0)) // naar vorige stand als back is ingedrukt
     850:	00 99       	sbic	0x00, 0	; 0
     852:	21 c0       	rjmp	.+66     	; 0x896 <.L43>

00000854 <.Loc.581>:
     854:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <back1_ingedrukt.4>
     858:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <back1_ingedrukt.4+0x1>
     85c:	89 2b       	or	r24, r25
     85e:	d9 f4       	brne	.+54     	; 0x896 <.L43>

00000860 <.LBB218>:
	__builtin_avr_delay_cycles(__ticks_dc);
     860:	8f e3       	ldi	r24, 0x3F	; 63
     862:	9c e9       	ldi	r25, 0x9C	; 156

00000864 <.L1^B36>:
     864:	01 97       	sbiw	r24, 0x01	; 1
     866:	f1 f7       	brne	.-4      	; 0x864 <.L1^B36>
     868:	00 c0       	rjmp	.+0      	; 0x86a <L0^A>

0000086a <L0^A>:
	...

0000086c <.LBE218>:
                    if (((PIN_knop&(1<<back))==0)&&(back1_ingedrukt==0))
     86c:	00 99       	sbic	0x00, 0	; 0
     86e:	13 c0       	rjmp	.+38     	; 0x896 <.L43>

00000870 <.Loc.593>:
     870:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <back1_ingedrukt.4>
     874:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <back1_ingedrukt.4+0x1>
     878:	89 2b       	or	r24, r25
     87a:	69 f4       	brne	.+26     	; 0x896 <.L43>

0000087c <.Loc.594>:
                        letter=0;
     87c:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <letter+0x1>
     880:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <letter>

00000884 <.Loc.596>:
                        back1_ingedrukt=1;
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <back1_ingedrukt.4+0x1>
     88c:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <back1_ingedrukt.4>

00000890 <.Loc.598>:
                 if (((PIN_knop&(1<<back))!=0)&&(back1_ingedrukt==1))
     890:	00 9b       	sbis	0x00, 0	; 0
     892:	66 c2       	rjmp	.+1228   	; 0xd60 <.L13>
     894:	09 c0       	rjmp	.+18     	; 0x8a8 <.L44>

00000896 <.L43>:
     896:	00 9b       	sbis	0x00, 0	; 0
     898:	63 c2       	rjmp	.+1222   	; 0xd60 <.L13>

0000089a <.Loc.602>:
     89a:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <back1_ingedrukt.4>
     89e:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <back1_ingedrukt.4+0x1>
     8a2:	01 97       	sbiw	r24, 0x01	; 1
     8a4:	09 f0       	breq	.+2      	; 0x8a8 <.L44>

000008a6 <L0^A>:
     8a6:	5c c2       	rjmp	.+1208   	; 0xd60 <.L13>

000008a8 <.L44>:
     8a8:	8f e3       	ldi	r24, 0x3F	; 63
     8aa:	9c e9       	ldi	r25, 0x9C	; 156

000008ac <.L1^B37>:
     8ac:	01 97       	sbiw	r24, 0x01	; 1
     8ae:	f1 f7       	brne	.-4      	; 0x8ac <.L1^B37>
     8b0:	00 c0       	rjmp	.+0      	; 0x8b2 <L0^A>

000008b2 <L0^A>:
	...

000008b4 <.LBE220>:
                    if (((PIN_knop&(1<<back))!=0)&&(back1_ingedrukt==1))
     8b4:	00 9b       	sbis	0x00, 0	; 0
     8b6:	54 c2       	rjmp	.+1192   	; 0xd60 <.L13>

000008b8 <.Loc.614>:
     8b8:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <back1_ingedrukt.4>
     8bc:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <back1_ingedrukt.4+0x1>
     8c0:	01 97       	sbiw	r24, 0x01	; 1
     8c2:	09 f0       	breq	.+2      	; 0x8c6 <.Loc.615>

000008c4 <L0^A>:
     8c4:	4d c2       	rjmp	.+1178   	; 0xd60 <.L13>

000008c6 <.Loc.615>:
                        h=0;
     8c6:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <h.10+0x1>
     8ca:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <h.10>

000008ce <.Loc.617>:
                        back1_ingedrukt=0;
     8ce:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <back1_ingedrukt.4+0x1>
     8d2:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <back1_ingedrukt.4>
     8d6:	44 c2       	rjmp	.+1160   	; 0xd60 <.L13>

000008d8 <.L14>:
            switch(lettertwee)
     8d8:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <lettertwee>
     8dc:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <lettertwee+0x1>
     8e0:	81 30       	cpi	r24, 0x01	; 1
     8e2:	91 05       	cpc	r25, r1
     8e4:	09 f4       	brne	.+2      	; 0x8e8 <L0^A+0x2>

000008e6 <L0^A>:
     8e6:	b5 c0       	rjmp	.+362    	; 0xa52 <.L45>
     8e8:	82 30       	cpi	r24, 0x02	; 2
     8ea:	91 05       	cpc	r25, r1
     8ec:	09 f4       	brne	.+2      	; 0x8f0 <L0^A+0x2>

000008ee <L0^A>:
     8ee:	34 c1       	rjmp	.+616    	; 0xb58 <.L46>
     8f0:	89 2b       	or	r24, r25
     8f2:	d1 f1       	breq	.+116    	; 0x968 <.L66>

000008f4 <.L47>:
             if (((PIN_knop&(1<<next))==0)&&(next2_ingedrukt==0)) // ga naar volgende stand als next is ingedrukt
     8f4:	04 99       	sbic	0x00, 4	; 0
     8f6:	a5 c1       	rjmp	.+842    	; 0xc42 <.L56>

000008f8 <.Loc.622>:
     8f8:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <next2_ingedrukt.2>
     8fc:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <next2_ingedrukt.2+0x1>
     900:	89 2b       	or	r24, r25
     902:	09 f0       	breq	.+2      	; 0x906 <.LBB222>

00000904 <L0^A>:
     904:	9e c1       	rjmp	.+828    	; 0xc42 <.L56>

00000906 <.LBB222>:
     906:	8f e3       	ldi	r24, 0x3F	; 63
     908:	9c e9       	ldi	r25, 0x9C	; 156

0000090a <.L1^B38>:
     90a:	01 97       	sbiw	r24, 0x01	; 1
     90c:	f1 f7       	brne	.-4      	; 0x90a <.L1^B38>
     90e:	00 c0       	rjmp	.+0      	; 0x910 <L0^A>

00000910 <L0^A>:
	...

00000912 <.LBE222>:
                    if (((PIN_knop&(1<<next))==0)&&(next2_ingedrukt==0))
     912:	04 99       	sbic	0x00, 4	; 0
     914:	96 c1       	rjmp	.+812    	; 0xc42 <.L56>

00000916 <.Loc.634>:
     916:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <next2_ingedrukt.2>
     91a:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <next2_ingedrukt.2+0x1>
     91e:	89 2b       	or	r24, r25
     920:	09 f0       	breq	.+2      	; 0x924 <.Loc.635>

00000922 <L0^A>:
     922:	8f c1       	rjmp	.+798    	; 0xc42 <.L56>

00000924 <.Loc.635>:
                        next2_ingedrukt=1;
     924:	81 e0       	ldi	r24, 0x01	; 1
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <next2_ingedrukt.2+0x1>
     92c:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <next2_ingedrukt.2>

00000930 <.Loc.637>:
                 if (((PIN_knop&(1<<next))!=0)&&(next2_ingedrukt==1))
     930:	04 9b       	sbis	0x00, 4	; 0
     932:	90 c1       	rjmp	.+800    	; 0xc54 <.L58>

00000934 <.L57>:
     934:	8f e3       	ldi	r24, 0x3F	; 63
     936:	9c e9       	ldi	r25, 0x9C	; 156

00000938 <.L1^B39>:
     938:	01 97       	sbiw	r24, 0x01	; 1
     93a:	f1 f7       	brne	.-4      	; 0x938 <.L1^B39>
     93c:	00 c0       	rjmp	.+0      	; 0x93e <L0^A>

0000093e <L0^A>:
	...

00000940 <.LBE224>:
                    if (((PIN_knop&(1<<next))!=0)&&(next2_ingedrukt==1))
     940:	04 9b       	sbis	0x00, 4	; 0
     942:	88 c1       	rjmp	.+784    	; 0xc54 <.L58>

00000944 <.Loc.650>:
     944:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <next2_ingedrukt.2>
     948:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <next2_ingedrukt.2+0x1>
     94c:	01 97       	sbiw	r24, 0x01	; 1
     94e:	09 f0       	breq	.+2      	; 0x952 <.Loc.651>

00000950 <L0^A>:
     950:	81 c1       	rjmp	.+770    	; 0xc54 <.L58>

00000952 <.Loc.651>:
                        next2_ingedrukt=0;
     952:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <next2_ingedrukt.2+0x1>
     956:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <next2_ingedrukt.2>

0000095a <.Loc.653>:
                        h=3;
     95a:	83 e0       	ldi	r24, 0x03	; 3
     95c:	90 e0       	ldi	r25, 0x00	; 0
     95e:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <h.10+0x1>
     962:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <h.10>
     966:	76 c1       	rjmp	.+748    	; 0xc54 <.L58>

00000968 <.L66>:
                    if(((PIN_knop&(1<<plus))==0)&&(plus2_ingedrukt==0)) // punt pisplay bij het streepje als plus is ingedrukt
     968:	02 99       	sbic	0x00, 2	; 0
     96a:	33 c0       	rjmp	.+102    	; 0x9d2 <.L48>

0000096c <.Loc.657>:
     96c:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <plus2_ingedrukt.3>
     970:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <plus2_ingedrukt.3+0x1>
     974:	89 2b       	or	r24, r25
     976:	69 f5       	brne	.+90     	; 0x9d2 <.L48>

00000978 <.LBB226>:
     978:	8f e3       	ldi	r24, 0x3F	; 63
     97a:	9c e9       	ldi	r25, 0x9C	; 156

0000097c <.L1^B40>:
     97c:	01 97       	sbiw	r24, 0x01	; 1
     97e:	f1 f7       	brne	.-4      	; 0x97c <.L1^B40>
     980:	00 c0       	rjmp	.+0      	; 0x982 <L0^A>

00000982 <L0^A>:
	...

00000984 <.LBE226>:
                        if (((PIN_knop&(1<<plus))==0)&&(plus2_ingedrukt==0))
     984:	02 99       	sbic	0x00, 2	; 0
     986:	25 c0       	rjmp	.+74     	; 0x9d2 <.L48>

00000988 <.Loc.669>:
     988:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <plus2_ingedrukt.3>
     98c:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <plus2_ingedrukt.3+0x1>
     990:	89 2b       	or	r24, r25
     992:	f9 f4       	brne	.+62     	; 0x9d2 <.L48>

00000994 <.Loc.670>:
                            lettertwee=1;
     994:	81 e0       	ldi	r24, 0x01	; 1
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <lettertwee+0x1>
     99c:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <lettertwee>

000009a0 <.Loc.672>:
                            plus2_ingedrukt=1;
     9a0:	90 93 2d 02 	sts	0x022D, r25	; 0x80022d <plus2_ingedrukt.3+0x1>
     9a4:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <plus2_ingedrukt.3>

000009a8 <.Loc.674>:
                    if(((PIN_knop&(1<<plus))!=0)&&(plus2_ingedrukt==1))
     9a8:	02 9b       	sbis	0x00, 2	; 0
     9aa:	1b c0       	rjmp	.+54     	; 0x9e2 <.L50>

000009ac <.L49>:
     9ac:	8f e3       	ldi	r24, 0x3F	; 63
     9ae:	9c e9       	ldi	r25, 0x9C	; 156

000009b0 <.L1^B41>:
     9b0:	01 97       	sbiw	r24, 0x01	; 1
     9b2:	f1 f7       	brne	.-4      	; 0x9b0 <.L1^B41>
     9b4:	00 c0       	rjmp	.+0      	; 0x9b6 <L0^A>

000009b6 <L0^A>:
	...

000009b8 <.LBE228>:
                        if (((PIN_knop&(1<<plus))!=0)&&(plus2_ingedrukt==1))
     9b8:	02 9b       	sbis	0x00, 2	; 0
     9ba:	13 c0       	rjmp	.+38     	; 0x9e2 <.L50>

000009bc <.Loc.687>:
     9bc:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <plus2_ingedrukt.3>
     9c0:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <plus2_ingedrukt.3+0x1>
     9c4:	01 97       	sbiw	r24, 0x01	; 1
     9c6:	69 f4       	brne	.+26     	; 0x9e2 <.L50>

000009c8 <.Loc.688>:
                            plus2_ingedrukt=0;
     9c8:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <plus2_ingedrukt.3+0x1>
     9cc:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <plus2_ingedrukt.3>
     9d0:	08 c0       	rjmp	.+16     	; 0x9e2 <.L50>

000009d2 <.L48>:
                    if(((PIN_knop&(1<<plus))!=0)&&(plus2_ingedrukt==1))
     9d2:	02 9b       	sbis	0x00, 2	; 0
     9d4:	06 c0       	rjmp	.+12     	; 0x9e2 <.L50>

000009d6 <.Loc.692>:
     9d6:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <plus2_ingedrukt.3>
     9da:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <plus2_ingedrukt.3+0x1>
     9de:	01 97       	sbiw	r24, 0x01	; 1
     9e0:	29 f3       	breq	.-54     	; 0x9ac <.L49>

000009e2 <.L50>:
                            display(segmentcodes[2],3);      // laat 1 - L r op display zien met punt bij -
     9e2:	63 e0       	ldi	r22, 0x03	; 3
     9e4:	70 e0       	ldi	r23, 0x00	; 0
     9e6:	8a ed       	ldi	r24, 0xDA	; 218
     9e8:	0e 94 bb 00 	call	0x176	; 0x176 <display>

000009ec <.LBB230>:
     9ec:	8f e9       	ldi	r24, 0x9F	; 159
     9ee:	9f e0       	ldi	r25, 0x0F	; 15

000009f0 <.L1^B42>:
     9f0:	01 97       	sbiw	r24, 0x01	; 1
     9f2:	f1 f7       	brne	.-4      	; 0x9f0 <.L1^B42>
     9f4:	00 c0       	rjmp	.+0      	; 0x9f6 <L0^A>

000009f6 <L0^A>:
	...

000009f8 <.LBE230>:
                            display((char)~0b11111100,2);
     9f8:	62 e0       	ldi	r22, 0x02	; 2
     9fa:	70 e0       	ldi	r23, 0x00	; 0
     9fc:	83 e0       	ldi	r24, 0x03	; 3
     9fe:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000a02 <.LBB232>:
     a02:	8f e9       	ldi	r24, 0x9F	; 159
     a04:	9f e0       	ldi	r25, 0x0F	; 15

00000a06 <.L1^B43>:
     a06:	01 97       	sbiw	r24, 0x01	; 1
     a08:	f1 f7       	brne	.-4      	; 0xa06 <.L1^B43>
     a0a:	00 c0       	rjmp	.+0      	; 0xa0c <L0^A>

00000a0c <L0^A>:
	...

00000a0e <.LBE232>:
                            display((char)~0b11100011,1);
     a0e:	61 e0       	ldi	r22, 0x01	; 1
     a10:	70 e0       	ldi	r23, 0x00	; 0
     a12:	8c e1       	ldi	r24, 0x1C	; 28
     a14:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000a18 <.LBB234>:
     a18:	8f e9       	ldi	r24, 0x9F	; 159
     a1a:	9f e0       	ldi	r25, 0x0F	; 15

00000a1c <.L1^B44>:
     a1c:	01 97       	sbiw	r24, 0x01	; 1
     a1e:	f1 f7       	brne	.-4      	; 0xa1c <.L1^B44>
     a20:	00 c0       	rjmp	.+0      	; 0xa22 <L0^A>

00000a22 <L0^A>:
	...

00000a24 <.LBE234>:
                            display((char)~0b01110011,0);
     a24:	60 e0       	ldi	r22, 0x00	; 0
     a26:	70 e0       	ldi	r23, 0x00	; 0
     a28:	8c e8       	ldi	r24, 0x8C	; 140
     a2a:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000a2e <.LBB236>:
     a2e:	8f e9       	ldi	r24, 0x9F	; 159
     a30:	9f e0       	ldi	r25, 0x0F	; 15

00000a32 <.L1^B45>:
     a32:	01 97       	sbiw	r24, 0x01	; 1
     a34:	f1 f7       	brne	.-4      	; 0xa32 <.L1^B45>
     a36:	00 c0       	rjmp	.+0      	; 0xa38 <L0^A>

00000a38 <L0^A>:
	...

00000a3a <.LBE236>:
                            display((char)~0b11111111,0123);
     a3a:	63 e5       	ldi	r22, 0x53	; 83
     a3c:	70 e0       	ldi	r23, 0x00	; 0
     a3e:	80 e0       	ldi	r24, 0x00	; 0
     a40:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000a44 <.LBB238>:
     a44:	8f e9       	ldi	r24, 0x9F	; 159
     a46:	9f e0       	ldi	r25, 0x0F	; 15

00000a48 <.L1^B46>:
     a48:	01 97       	sbiw	r24, 0x01	; 1
     a4a:	f1 f7       	brne	.-4      	; 0xa48 <.L1^B46>
     a4c:	00 c0       	rjmp	.+0      	; 0xa4e <L0^A>

00000a4e <L0^A>:
	...

00000a50 <.Loc.742>:
}
     a50:	51 cf       	rjmp	.-350    	; 0x8f4 <.L47>

00000a52 <.L45>:
                      if(((PIN_knop&(1<<plus))==0)&&(plus2_ingedrukt==0)) // punt display bij de letter L als plus is ingedrukt
     a52:	02 99       	sbic	0x00, 2	; 0
     a54:	20 c0       	rjmp	.+64     	; 0xa96 <.L51>

00000a56 <.Loc.746>:
     a56:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <plus2_ingedrukt.3>
     a5a:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <plus2_ingedrukt.3+0x1>
     a5e:	89 2b       	or	r24, r25
     a60:	d1 f4       	brne	.+52     	; 0xa96 <.L51>

00000a62 <.LBB240>:
	__builtin_avr_delay_cycles(__ticks_dc);
     a62:	8f e3       	ldi	r24, 0x3F	; 63
     a64:	9c e9       	ldi	r25, 0x9C	; 156

00000a66 <.L1^B47>:
     a66:	01 97       	sbiw	r24, 0x01	; 1
     a68:	f1 f7       	brne	.-4      	; 0xa66 <.L1^B47>
     a6a:	00 c0       	rjmp	.+0      	; 0xa6c <L0^A>

00000a6c <L0^A>:
	...

00000a6e <.LBE240>:
                        if(((PIN_knop&(1<<plus))==0)&&(plus2_ingedrukt==0))
     a6e:	02 99       	sbic	0x00, 2	; 0
     a70:	12 c0       	rjmp	.+36     	; 0xa96 <.L51>

00000a72 <.Loc.758>:
     a72:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <plus2_ingedrukt.3>
     a76:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <plus2_ingedrukt.3+0x1>
     a7a:	89 2b       	or	r24, r25
     a7c:	61 f4       	brne	.+24     	; 0xa96 <.L51>

00000a7e <.Loc.759>:
                            lettertwee=2;
     a7e:	82 e0       	ldi	r24, 0x02	; 2
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <lettertwee+0x1>
     a86:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <lettertwee>

00000a8a <.Loc.761>:
                            plus2_ingedrukt=1;
     a8a:	81 e0       	ldi	r24, 0x01	; 1
     a8c:	90 e0       	ldi	r25, 0x00	; 0
     a8e:	90 93 2d 02 	sts	0x022D, r25	; 0x80022d <plus2_ingedrukt.3+0x1>
     a92:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <plus2_ingedrukt.3>

00000a96 <.L51>:
                    if((((PIN_knop&(1<<plus))!=0)&&(letter==1))&&(plus2_ingedrukt==1))
     a96:	02 9b       	sbis	0x00, 2	; 0
     a98:	06 c0       	rjmp	.+12     	; 0xaa6 <.L52>

00000a9a <.Loc.765>:
     a9a:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <letter>
     a9e:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <letter+0x1>
     aa2:	01 97       	sbiw	r24, 0x01	; 1
     aa4:	c1 f1       	breq	.+112    	; 0xb16 <.L67>

00000aa6 <.L52>:
                            display(segmentcodes[2],3);         //laat 1 - L r op display zien met punt bij L
     aa6:	63 e0       	ldi	r22, 0x03	; 3
     aa8:	70 e0       	ldi	r23, 0x00	; 0
     aaa:	8a ed       	ldi	r24, 0xDA	; 218
     aac:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000ab0 <.LBB242>:
     ab0:	8f e9       	ldi	r24, 0x9F	; 159
     ab2:	9f e0       	ldi	r25, 0x0F	; 15

00000ab4 <.L1^B48>:
     ab4:	01 97       	sbiw	r24, 0x01	; 1
     ab6:	f1 f7       	brne	.-4      	; 0xab4 <.L1^B48>
     ab8:	00 c0       	rjmp	.+0      	; 0xaba <L0^A>

00000aba <L0^A>:
	...

00000abc <.LBE242>:
                            display((char)~0b11111101,2);
     abc:	62 e0       	ldi	r22, 0x02	; 2
     abe:	70 e0       	ldi	r23, 0x00	; 0
     ac0:	82 e0       	ldi	r24, 0x02	; 2
     ac2:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000ac6 <.LBB244>:
     ac6:	8f e9       	ldi	r24, 0x9F	; 159
     ac8:	9f e0       	ldi	r25, 0x0F	; 15

00000aca <.L1^B49>:
     aca:	01 97       	sbiw	r24, 0x01	; 1
     acc:	f1 f7       	brne	.-4      	; 0xaca <.L1^B49>
     ace:	00 c0       	rjmp	.+0      	; 0xad0 <L0^A>

00000ad0 <L0^A>:
	...

00000ad2 <.LBE244>:
                            display((char)~0b11100010,1);
     ad2:	61 e0       	ldi	r22, 0x01	; 1
     ad4:	70 e0       	ldi	r23, 0x00	; 0
     ad6:	8d e1       	ldi	r24, 0x1D	; 29
     ad8:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000adc <.LBB246>:
     adc:	8f e9       	ldi	r24, 0x9F	; 159
     ade:	9f e0       	ldi	r25, 0x0F	; 15

00000ae0 <.L1^B50>:
     ae0:	01 97       	sbiw	r24, 0x01	; 1
     ae2:	f1 f7       	brne	.-4      	; 0xae0 <.L1^B50>
     ae4:	00 c0       	rjmp	.+0      	; 0xae6 <L0^A>

00000ae6 <L0^A>:
	...

00000ae8 <.LBE246>:
                            display((char)~0b01110011,0);
     ae8:	60 e0       	ldi	r22, 0x00	; 0
     aea:	70 e0       	ldi	r23, 0x00	; 0
     aec:	8c e8       	ldi	r24, 0x8C	; 140
     aee:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000af2 <.LBB248>:
     af2:	8f e9       	ldi	r24, 0x9F	; 159
     af4:	9f e0       	ldi	r25, 0x0F	; 15

00000af6 <.L1^B51>:
     af6:	01 97       	sbiw	r24, 0x01	; 1
     af8:	f1 f7       	brne	.-4      	; 0xaf6 <.L1^B51>
     afa:	00 c0       	rjmp	.+0      	; 0xafc <L0^A>

00000afc <L0^A>:
	...

00000afe <.LBE248>:
                            display((char)~0b11111111,0123);
     afe:	63 e5       	ldi	r22, 0x53	; 83
     b00:	70 e0       	ldi	r23, 0x00	; 0
     b02:	80 e0       	ldi	r24, 0x00	; 0
     b04:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000b08 <.LBB250>:
     b08:	8f e9       	ldi	r24, 0x9F	; 159
     b0a:	9f e0       	ldi	r25, 0x0F	; 15

00000b0c <.L1^B52>:
     b0c:	01 97       	sbiw	r24, 0x01	; 1
     b0e:	f1 f7       	brne	.-4      	; 0xb0c <.L1^B52>
     b10:	00 c0       	rjmp	.+0      	; 0xb12 <L0^A>

00000b12 <L0^A>:
	...

00000b14 <.Loc.815>:
}
     b14:	ef ce       	rjmp	.-546    	; 0x8f4 <.L47>

00000b16 <.L67>:
                    if((((PIN_knop&(1<<plus))!=0)&&(letter==1))&&(plus2_ingedrukt==1))
     b16:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <plus2_ingedrukt.3>
     b1a:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <plus2_ingedrukt.3+0x1>
     b1e:	01 97       	sbiw	r24, 0x01	; 1
     b20:	11 f6       	brne	.-124    	; 0xaa6 <.L52>

00000b22 <.LBB252>:
	__builtin_avr_delay_cycles(__ticks_dc);
     b22:	8f e3       	ldi	r24, 0x3F	; 63
     b24:	9c e9       	ldi	r25, 0x9C	; 156

00000b26 <.L1^B53>:
     b26:	01 97       	sbiw	r24, 0x01	; 1
     b28:	f1 f7       	brne	.-4      	; 0xb26 <.L1^B53>
     b2a:	00 c0       	rjmp	.+0      	; 0xb2c <L0^A>

00000b2c <L0^A>:
	...

00000b2e <.LBE252>:
                        if ((((PIN_knop&(1<<plus))!=0)&&(letter==1))&&(plus2_ingedrukt==1))
     b2e:	02 9b       	sbis	0x00, 2	; 0
     b30:	ba cf       	rjmp	.-140    	; 0xaa6 <.L52>

00000b32 <.Loc.829>:
     b32:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <letter>
     b36:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <letter+0x1>
     b3a:	01 97       	sbiw	r24, 0x01	; 1
     b3c:	09 f0       	breq	.+2      	; 0xb40 <.Loc.830>

00000b3e <L0^A>:
     b3e:	b3 cf       	rjmp	.-154    	; 0xaa6 <.L52>

00000b40 <.Loc.830>:
     b40:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <plus2_ingedrukt.3>
     b44:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <plus2_ingedrukt.3+0x1>
     b48:	01 97       	sbiw	r24, 0x01	; 1
     b4a:	09 f0       	breq	.+2      	; 0xb4e <.Loc.831>

00000b4c <L0^A>:
     b4c:	ac cf       	rjmp	.-168    	; 0xaa6 <.L52>

00000b4e <.Loc.831>:
                            plus2_ingedrukt=0;
     b4e:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <plus2_ingedrukt.3+0x1>
     b52:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <plus2_ingedrukt.3>
     b56:	a7 cf       	rjmp	.-178    	; 0xaa6 <.L52>

00000b58 <.L46>:
                         if(((PIN_knop&(1<<plus))==0)&&(plus2_ingedrukt==0))        // punt dispay bij de letter R als plus is ingedrukt
     b58:	02 99       	sbic	0x00, 2	; 0
     b5a:	33 c0       	rjmp	.+102    	; 0xbc2 <.L53>

00000b5c <.Loc.835>:
     b5c:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <plus2_ingedrukt.3>
     b60:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <plus2_ingedrukt.3+0x1>
     b64:	89 2b       	or	r24, r25
     b66:	69 f5       	brne	.+90     	; 0xbc2 <.L53>

00000b68 <.LBB254>:
     b68:	8f e3       	ldi	r24, 0x3F	; 63
     b6a:	9c e9       	ldi	r25, 0x9C	; 156

00000b6c <.L1^B54>:
     b6c:	01 97       	sbiw	r24, 0x01	; 1
     b6e:	f1 f7       	brne	.-4      	; 0xb6c <.L1^B54>
     b70:	00 c0       	rjmp	.+0      	; 0xb72 <L0^A>

00000b72 <L0^A>:
	...

00000b74 <.LBE254>:
                        if(((PIN_knop&(1<<plus))==0)&&(plus2_ingedrukt==0))
     b74:	02 99       	sbic	0x00, 2	; 0
     b76:	25 c0       	rjmp	.+74     	; 0xbc2 <.L53>

00000b78 <.Loc.847>:
     b78:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <plus2_ingedrukt.3>
     b7c:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <plus2_ingedrukt.3+0x1>
     b80:	89 2b       	or	r24, r25
     b82:	f9 f4       	brne	.+62     	; 0xbc2 <.L53>

00000b84 <.Loc.848>:
                            lettertwee=0;
     b84:	10 92 21 02 	sts	0x0221, r1	; 0x800221 <lettertwee+0x1>
     b88:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <lettertwee>

00000b8c <.Loc.850>:
                            plus2_ingedrukt=1;
     b8c:	81 e0       	ldi	r24, 0x01	; 1
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	90 93 2d 02 	sts	0x022D, r25	; 0x80022d <plus2_ingedrukt.3+0x1>
     b94:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <plus2_ingedrukt.3>

00000b98 <.Loc.852>:
                        if(((PIN_knop&(1<<plus))!=0)&&(plus2_ingedrukt==1))
     b98:	02 9b       	sbis	0x00, 2	; 0
     b9a:	1b c0       	rjmp	.+54     	; 0xbd2 <.L55>

00000b9c <.L54>:
     b9c:	8f e3       	ldi	r24, 0x3F	; 63
     b9e:	9c e9       	ldi	r25, 0x9C	; 156

00000ba0 <.L1^B55>:
     ba0:	01 97       	sbiw	r24, 0x01	; 1
     ba2:	f1 f7       	brne	.-4      	; 0xba0 <.L1^B55>
     ba4:	00 c0       	rjmp	.+0      	; 0xba6 <L0^A>

00000ba6 <L0^A>:
	...

00000ba8 <.LBE256>:
                        if (((PIN_knop&(1<<plus))!=0)&&(plus2_ingedrukt==1))
     ba8:	02 9b       	sbis	0x00, 2	; 0
     baa:	13 c0       	rjmp	.+38     	; 0xbd2 <.L55>

00000bac <.Loc.865>:
     bac:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <plus2_ingedrukt.3>
     bb0:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <plus2_ingedrukt.3+0x1>
     bb4:	01 97       	sbiw	r24, 0x01	; 1
     bb6:	69 f4       	brne	.+26     	; 0xbd2 <.L55>

00000bb8 <.Loc.866>:
                            plus2_ingedrukt=0;
     bb8:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <plus2_ingedrukt.3+0x1>
     bbc:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <plus2_ingedrukt.3>
     bc0:	08 c0       	rjmp	.+16     	; 0xbd2 <.L55>

00000bc2 <.L53>:
                        if(((PIN_knop&(1<<plus))!=0)&&(plus2_ingedrukt==1))
     bc2:	02 9b       	sbis	0x00, 2	; 0
     bc4:	06 c0       	rjmp	.+12     	; 0xbd2 <.L55>

00000bc6 <.Loc.870>:
     bc6:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <plus2_ingedrukt.3>
     bca:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <plus2_ingedrukt.3+0x1>
     bce:	01 97       	sbiw	r24, 0x01	; 1
     bd0:	29 f3       	breq	.-54     	; 0xb9c <.L54>

00000bd2 <.L55>:
                            display(segmentcodes[2],3);          //laat 1 - L r op display zien met punt bij r
     bd2:	63 e0       	ldi	r22, 0x03	; 3
     bd4:	70 e0       	ldi	r23, 0x00	; 0
     bd6:	8a ed       	ldi	r24, 0xDA	; 218
     bd8:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000bdc <.LBB258>:
     bdc:	8f e9       	ldi	r24, 0x9F	; 159
     bde:	9f e0       	ldi	r25, 0x0F	; 15

00000be0 <.L1^B56>:
     be0:	01 97       	sbiw	r24, 0x01	; 1
     be2:	f1 f7       	brne	.-4      	; 0xbe0 <.L1^B56>
     be4:	00 c0       	rjmp	.+0      	; 0xbe6 <L0^A>

00000be6 <L0^A>:
	...

00000be8 <.LBE258>:
                            display((char)~0b11111101,2);
     be8:	62 e0       	ldi	r22, 0x02	; 2
     bea:	70 e0       	ldi	r23, 0x00	; 0
     bec:	82 e0       	ldi	r24, 0x02	; 2
     bee:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000bf2 <.LBB260>:
     bf2:	8f e9       	ldi	r24, 0x9F	; 159
     bf4:	9f e0       	ldi	r25, 0x0F	; 15

00000bf6 <.L1^B57>:
     bf6:	01 97       	sbiw	r24, 0x01	; 1
     bf8:	f1 f7       	brne	.-4      	; 0xbf6 <.L1^B57>
     bfa:	00 c0       	rjmp	.+0      	; 0xbfc <L0^A>

00000bfc <L0^A>:
	...

00000bfe <.LBE260>:
                            display((char)~0b11100011,1);
     bfe:	61 e0       	ldi	r22, 0x01	; 1
     c00:	70 e0       	ldi	r23, 0x00	; 0
     c02:	8c e1       	ldi	r24, 0x1C	; 28
     c04:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000c08 <.LBB262>:
     c08:	8f e9       	ldi	r24, 0x9F	; 159
     c0a:	9f e0       	ldi	r25, 0x0F	; 15

00000c0c <.L1^B58>:
     c0c:	01 97       	sbiw	r24, 0x01	; 1
     c0e:	f1 f7       	brne	.-4      	; 0xc0c <.L1^B58>
     c10:	00 c0       	rjmp	.+0      	; 0xc12 <L0^A>

00000c12 <L0^A>:
	...

00000c14 <.LBE262>:
                            display((char)~0b01110010,0);
     c14:	60 e0       	ldi	r22, 0x00	; 0
     c16:	70 e0       	ldi	r23, 0x00	; 0
     c18:	8d e8       	ldi	r24, 0x8D	; 141
     c1a:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000c1e <.LBB264>:
     c1e:	8f e9       	ldi	r24, 0x9F	; 159
     c20:	9f e0       	ldi	r25, 0x0F	; 15

00000c22 <.L1^B59>:
     c22:	01 97       	sbiw	r24, 0x01	; 1
     c24:	f1 f7       	brne	.-4      	; 0xc22 <.L1^B59>
     c26:	00 c0       	rjmp	.+0      	; 0xc28 <L0^A>

00000c28 <L0^A>:
	...

00000c2a <.LBE264>:
                            display((char)~0b11111111,0123);
     c2a:	63 e5       	ldi	r22, 0x53	; 83
     c2c:	70 e0       	ldi	r23, 0x00	; 0
     c2e:	80 e0       	ldi	r24, 0x00	; 0
     c30:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000c34 <.LBB266>:
     c34:	8f e9       	ldi	r24, 0x9F	; 159
     c36:	9f e0       	ldi	r25, 0x0F	; 15

00000c38 <.L1^B60>:
     c38:	01 97       	sbiw	r24, 0x01	; 1
     c3a:	f1 f7       	brne	.-4      	; 0xc38 <.L1^B60>
     c3c:	00 c0       	rjmp	.+0      	; 0xc3e <L0^A>

00000c3e <L0^A>:
	...

00000c40 <.Loc.920>:
}
     c40:	59 ce       	rjmp	.-846    	; 0x8f4 <.L47>

00000c42 <.L56>:
                 if (((PIN_knop&(1<<next))!=0)&&(next2_ingedrukt==1))
     c42:	04 9b       	sbis	0x00, 4	; 0
     c44:	07 c0       	rjmp	.+14     	; 0xc54 <.L58>

00000c46 <.Loc.924>:
     c46:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <next2_ingedrukt.2>
     c4a:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <next2_ingedrukt.2+0x1>
     c4e:	01 97       	sbiw	r24, 0x01	; 1
     c50:	09 f4       	brne	.+2      	; 0xc54 <.L58>

00000c52 <L0^A>:
     c52:	70 ce       	rjmp	.-800    	; 0x934 <.L57>

00000c54 <.L58>:
                if (((PIN_knop&(1<<back))==0)&&(back2_ingedrukt==0))// ga naar vorige stand als back is ingedrukt
     c54:	00 99       	sbic	0x00, 0	; 0
     c56:	21 c0       	rjmp	.+66     	; 0xc9a <.L59>

00000c58 <.Loc.927>:
     c58:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <back2_ingedrukt.1>
     c5c:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <back2_ingedrukt.1+0x1>
     c60:	89 2b       	or	r24, r25
     c62:	d9 f4       	brne	.+54     	; 0xc9a <.L59>

00000c64 <.LBB268>:
	__builtin_avr_delay_cycles(__ticks_dc);
     c64:	8f e3       	ldi	r24, 0x3F	; 63
     c66:	9c e9       	ldi	r25, 0x9C	; 156

00000c68 <.L1^B61>:
     c68:	01 97       	sbiw	r24, 0x01	; 1
     c6a:	f1 f7       	brne	.-4      	; 0xc68 <.L1^B61>
     c6c:	00 c0       	rjmp	.+0      	; 0xc6e <L0^A>

00000c6e <L0^A>:
	...

00000c70 <.LBE268>:
                    if (((PIN_knop&(1<<back))==0)&&(back2_ingedrukt==0))
     c70:	00 99       	sbic	0x00, 0	; 0
     c72:	13 c0       	rjmp	.+38     	; 0xc9a <.L59>

00000c74 <.Loc.939>:
     c74:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <back2_ingedrukt.1>
     c78:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <back2_ingedrukt.1+0x1>
     c7c:	89 2b       	or	r24, r25
     c7e:	69 f4       	brne	.+26     	; 0xc9a <.L59>

00000c80 <.Loc.940>:
                        lettertwee=0;
     c80:	10 92 21 02 	sts	0x0221, r1	; 0x800221 <lettertwee+0x1>
     c84:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <lettertwee>

00000c88 <.Loc.942>:
                        back2_ingedrukt=1;
     c88:	81 e0       	ldi	r24, 0x01	; 1
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <back2_ingedrukt.1+0x1>
     c90:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <back2_ingedrukt.1>

00000c94 <.Loc.944>:
                 if (((PIN_knop&(1<<back))!=0)&&(back2_ingedrukt==1))
     c94:	00 9b       	sbis	0x00, 0	; 0
     c96:	64 c0       	rjmp	.+200    	; 0xd60 <.L13>
     c98:	09 c0       	rjmp	.+18     	; 0xcac <.L60>

00000c9a <.L59>:
     c9a:	00 9b       	sbis	0x00, 0	; 0
     c9c:	61 c0       	rjmp	.+194    	; 0xd60 <.L13>

00000c9e <.Loc.948>:
     c9e:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <back2_ingedrukt.1>
     ca2:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <back2_ingedrukt.1+0x1>
     ca6:	01 97       	sbiw	r24, 0x01	; 1
     ca8:	09 f0       	breq	.+2      	; 0xcac <.L60>

00000caa <L0^A>:
     caa:	5a c0       	rjmp	.+180    	; 0xd60 <.L13>

00000cac <.L60>:
     cac:	8f e3       	ldi	r24, 0x3F	; 63
     cae:	9c e9       	ldi	r25, 0x9C	; 156

00000cb0 <.L1^B62>:
     cb0:	01 97       	sbiw	r24, 0x01	; 1
     cb2:	f1 f7       	brne	.-4      	; 0xcb0 <.L1^B62>
     cb4:	00 c0       	rjmp	.+0      	; 0xcb6 <L0^A>

00000cb6 <L0^A>:
	...

00000cb8 <.LBE270>:
                    if (((PIN_knop&(1<<back))!=0)&&(back2_ingedrukt==1))
     cb8:	00 9b       	sbis	0x00, 0	; 0
     cba:	52 c0       	rjmp	.+164    	; 0xd60 <.L13>

00000cbc <.Loc.960>:
     cbc:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <back2_ingedrukt.1>
     cc0:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <back2_ingedrukt.1+0x1>
     cc4:	01 97       	sbiw	r24, 0x01	; 1
     cc6:	09 f0       	breq	.+2      	; 0xcca <.Loc.961>

00000cc8 <L0^A>:
     cc8:	4b c0       	rjmp	.+150    	; 0xd60 <.L13>

00000cca <.Loc.961>:
                        h=1;
     cca:	81 e0       	ldi	r24, 0x01	; 1
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <h.10+0x1>
     cd2:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <h.10>

00000cd6 <.Loc.963>:
                        back2_ingedrukt=0;
     cd6:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <back2_ingedrukt.1+0x1>
     cda:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <back2_ingedrukt.1>
     cde:	40 c0       	rjmp	.+128    	; 0xd60 <.L13>

00000ce0 <.L61>:
                 if (((PIN_knop&(1<<start))!=0)&&(start_ingedrukt==1))
     ce0:	06 9b       	sbis	0x00, 6	; 0
     ce2:	07 c0       	rjmp	.+14     	; 0xcf2 <.L63>

00000ce4 <.Loc.967>:
     ce4:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <start_ingedrukt.0>
     ce8:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <start_ingedrukt.0+0x1>
     cec:	01 97       	sbiw	r24, 0x01	; 1
     cee:	09 f4       	brne	.+2      	; 0xcf2 <.L63>

00000cf0 <L0^A>:
     cf0:	19 cb       	rjmp	.-2510   	; 0x324 <.L62>

00000cf2 <.L63>:
                    }
                }
                            display((char)~0b01110001,3); // geef fred op display weer
     cf2:	63 e0       	ldi	r22, 0x03	; 3
     cf4:	70 e0       	ldi	r23, 0x00	; 0
     cf6:	8e e8       	ldi	r24, 0x8E	; 142
     cf8:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000cfc <.LBB272>:
     cfc:	8f e9       	ldi	r24, 0x9F	; 159
     cfe:	9f e0       	ldi	r25, 0x0F	; 15

00000d00 <.L1^B63>:
     d00:	01 97       	sbiw	r24, 0x01	; 1
     d02:	f1 f7       	brne	.-4      	; 0xd00 <.L1^B63>
     d04:	00 c0       	rjmp	.+0      	; 0xd06 <L0^A>

00000d06 <L0^A>:
	...

00000d08 <.LBE272>:
                            _delay_ms(1);
                            display((char)~0b01110011,2);
     d08:	62 e0       	ldi	r22, 0x02	; 2
     d0a:	70 e0       	ldi	r23, 0x00	; 0
     d0c:	8c e8       	ldi	r24, 0x8C	; 140
     d0e:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000d12 <.LBB274>:
     d12:	8f e9       	ldi	r24, 0x9F	; 159
     d14:	9f e0       	ldi	r25, 0x0F	; 15

00000d16 <.L1^B64>:
     d16:	01 97       	sbiw	r24, 0x01	; 1
     d18:	f1 f7       	brne	.-4      	; 0xd16 <.L1^B64>
     d1a:	00 c0       	rjmp	.+0      	; 0xd1c <L0^A>

00000d1c <L0^A>:
	...

00000d1e <.LBE274>:
                            _delay_ms(1);
                            display((char)~0b01100001,1);
     d1e:	61 e0       	ldi	r22, 0x01	; 1
     d20:	70 e0       	ldi	r23, 0x00	; 0
     d22:	8e e9       	ldi	r24, 0x9E	; 158
     d24:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000d28 <.LBB276>:
     d28:	8f e9       	ldi	r24, 0x9F	; 159
     d2a:	9f e0       	ldi	r25, 0x0F	; 15

00000d2c <.L1^B65>:
     d2c:	01 97       	sbiw	r24, 0x01	; 1
     d2e:	f1 f7       	brne	.-4      	; 0xd2c <.L1^B65>
     d30:	00 c0       	rjmp	.+0      	; 0xd32 <L0^A>

00000d32 <L0^A>:
	...

00000d34 <.LBE276>:
                            _delay_ms(1);
                            display((char)~0b10000101,0);
     d34:	60 e0       	ldi	r22, 0x00	; 0
     d36:	70 e0       	ldi	r23, 0x00	; 0
     d38:	8a e7       	ldi	r24, 0x7A	; 122
     d3a:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000d3e <.LBB278>:
     d3e:	8f e9       	ldi	r24, 0x9F	; 159
     d40:	9f e0       	ldi	r25, 0x0F	; 15

00000d42 <.L1^B66>:
     d42:	01 97       	sbiw	r24, 0x01	; 1
     d44:	f1 f7       	brne	.-4      	; 0xd42 <.L1^B66>
     d46:	00 c0       	rjmp	.+0      	; 0xd48 <L0^A>

00000d48 <L0^A>:
	...

00000d4a <.LBE278>:
                            _delay_ms(1);
                            display((char)~0b11111111,0123);
     d4a:	63 e5       	ldi	r22, 0x53	; 83
     d4c:	70 e0       	ldi	r23, 0x00	; 0
     d4e:	80 e0       	ldi	r24, 0x00	; 0
     d50:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000d54 <.LBB280>:
     d54:	8f e9       	ldi	r24, 0x9F	; 159
     d56:	9f e0       	ldi	r25, 0x0F	; 15

00000d58 <.L1^B67>:
     d58:	01 97       	sbiw	r24, 0x01	; 1
     d5a:	f1 f7       	brne	.-4      	; 0xd58 <.L1^B67>
     d5c:	00 c0       	rjmp	.+0      	; 0xd5e <L0^A>

00000d5e <L0^A>:
	...

00000d60 <.L13>:
                break;


        }

}
     d60:	df 91       	pop	r29
     d62:	cf 91       	pop	r28
     d64:	08 95       	ret

00000d66 <.L34>:
                    if((((PIN_knop&(1<<plus))!=0)&&(letter==1))&&(plus1_ingedrukt==1))
     d66:	02 99       	sbic	0x00, 2	; 0
     d68:	d3 cc       	rjmp	.-1626   	; 0x710 <.L64>

00000d6a <.L36>:
                            display(segmentcodes[1],3); //laat 1 - L r op display zien met punt bij L
     d6a:	63 e0       	ldi	r22, 0x03	; 3
     d6c:	70 e0       	ldi	r23, 0x00	; 0
     d6e:	80 e6       	ldi	r24, 0x60	; 96
     d70:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000d74 <.LBB282>:
     d74:	8f e9       	ldi	r24, 0x9F	; 159
     d76:	9f e0       	ldi	r25, 0x0F	; 15

00000d78 <.L1^B68>:
     d78:	01 97       	sbiw	r24, 0x01	; 1
     d7a:	f1 f7       	brne	.-4      	; 0xd78 <.L1^B68>
     d7c:	00 c0       	rjmp	.+0      	; 0xd7e <L0^A>

00000d7e <L0^A>:
	...

00000d80 <.LBE282>:
                            display((char)~0b11111101,2);
     d80:	62 e0       	ldi	r22, 0x02	; 2
     d82:	70 e0       	ldi	r23, 0x00	; 0
     d84:	82 e0       	ldi	r24, 0x02	; 2
     d86:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000d8a <.LBB284>:
     d8a:	8f e9       	ldi	r24, 0x9F	; 159
     d8c:	9f e0       	ldi	r25, 0x0F	; 15

00000d8e <.L1^B69>:
     d8e:	01 97       	sbiw	r24, 0x01	; 1
     d90:	f1 f7       	brne	.-4      	; 0xd8e <.L1^B69>
     d92:	00 c0       	rjmp	.+0      	; 0xd94 <L0^A>

00000d94 <L0^A>:
	...

00000d96 <.LBE284>:
                            display((char)~0b11100010,1);
     d96:	61 e0       	ldi	r22, 0x01	; 1
     d98:	70 e0       	ldi	r23, 0x00	; 0
     d9a:	8d e1       	ldi	r24, 0x1D	; 29
     d9c:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000da0 <.LBB286>:
     da0:	8f e9       	ldi	r24, 0x9F	; 159
     da2:	9f e0       	ldi	r25, 0x0F	; 15

00000da4 <.L1^B70>:
     da4:	01 97       	sbiw	r24, 0x01	; 1
     da6:	f1 f7       	brne	.-4      	; 0xda4 <.L1^B70>
     da8:	00 c0       	rjmp	.+0      	; 0xdaa <L0^A>

00000daa <L0^A>:
	...

00000dac <.LBE286>:
                            display((char)~0b01110011,0);
     dac:	60 e0       	ldi	r22, 0x00	; 0
     dae:	70 e0       	ldi	r23, 0x00	; 0
     db0:	8c e8       	ldi	r24, 0x8C	; 140
     db2:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000db6 <.LBB288>:
     db6:	8f e9       	ldi	r24, 0x9F	; 159
     db8:	9f e0       	ldi	r25, 0x0F	; 15

00000dba <.L1^B71>:
     dba:	01 97       	sbiw	r24, 0x01	; 1
     dbc:	f1 f7       	brne	.-4      	; 0xdba <.L1^B71>
     dbe:	00 c0       	rjmp	.+0      	; 0xdc0 <L0^A>

00000dc0 <L0^A>:
	...

00000dc2 <.LBE288>:
                            display((char)~0b11111111,0123);
     dc2:	63 e5       	ldi	r22, 0x53	; 83
     dc4:	70 e0       	ldi	r23, 0x00	; 0
     dc6:	80 e0       	ldi	r24, 0x00	; 0
     dc8:	0e 94 bb 00 	call	0x176	; 0x176 <display>

00000dcc <.LBB290>:
     dcc:	8f e9       	ldi	r24, 0x9F	; 159
     dce:	9f e0       	ldi	r25, 0x0F	; 15

00000dd0 <.L1^B72>:
     dd0:	01 97       	sbiw	r24, 0x01	; 1
     dd2:	f1 f7       	brne	.-4      	; 0xdd0 <.L1^B72>
     dd4:	00 c0       	rjmp	.+0      	; 0xdd6 <L0^A>

00000dd6 <L0^A>:
	...

00000dd8 <.Loc.1070>:
}
     dd8:	48 ca       	rjmp	.-2928   	; 0x26a <.L30>

00000dda <IR_init>:

int tel=0;

void IR_init()
{
    ddr_irout&=~(1<<pinnummer_ir);
     dda:	3f 98       	cbi	0x07, 7	; 7

00000ddc <.Loc.3>:
    ddr_led|=(1<<led1);
     ddc:	27 9a       	sbi	0x04, 7	; 4

00000dde <.Loc.5>:
    port_led|=(1<<led1);
     dde:	2f 9a       	sbi	0x05, 7	; 5

00000de0 <.Loc.7>:
}
     de0:	08 95       	ret

00000de2 <IR_RUN>:


void IR_RUN()// check of pin hoog of laag is
{
    static int gedetecteerd = 0;
    if ((pin_ir&(1<<pinnummer_ir))==0)
     de2:	37 99       	sbic	0x06, 7	; 6
     de4:	11 c0       	rjmp	.+34     	; 0xe08 <.L3>

00000de6 <.LBB6>:
	__builtin_avr_delay_cycles(__ticks_dc);
     de6:	2f ef       	ldi	r18, 0xFF	; 255
     de8:	89 ef       	ldi	r24, 0xF9	; 249
     dea:	90 e0       	ldi	r25, 0x00	; 0

00000dec <.L1^B1>:
     dec:	21 50       	subi	r18, 0x01	; 1
     dee:	80 40       	sbci	r24, 0x00	; 0
     df0:	90 40       	sbci	r25, 0x00	; 0
     df2:	e1 f7       	brne	.-8      	; 0xdec <.L1^B1>
     df4:	00 c0       	rjmp	.+0      	; 0xdf6 <L0^A>

00000df6 <L0^A>:
	...

00000df8 <.LBE6>:
    {
        _delay_ms(20); // debounce
        if ((pin_ir&(1<<pinnummer_ir))==0)
     df8:	37 99       	sbic	0x06, 7	; 6
     dfa:	10 c0       	rjmp	.+32     	; 0xe1c <.L2>

00000dfc <.Loc.23>:
        {
            gedetecteerd=0;
     dfc:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <gedetecteerd.0+0x1>
     e00:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <gedetecteerd.0>

00000e04 <.Loc.25>:
            port_led&=~(1<<led1);//led aan
     e04:	2f 98       	cbi	0x05, 7	; 5
     e06:	08 95       	ret

00000e08 <.L3>:
     e08:	2f ef       	ldi	r18, 0xFF	; 255
     e0a:	89 ef       	ldi	r24, 0xF9	; 249
     e0c:	90 e0       	ldi	r25, 0x00	; 0

00000e0e <.L1^B2>:
     e0e:	21 50       	subi	r18, 0x01	; 1
     e10:	80 40       	sbci	r24, 0x00	; 0
     e12:	90 40       	sbci	r25, 0x00	; 0
     e14:	e1 f7       	brne	.-8      	; 0xe0e <.L1^B2>
     e16:	00 c0       	rjmp	.+0      	; 0xe18 <L0^A>

00000e18 <L0^A>:
	...

00000e1a <.LBE8>:
        }
    }
    else
    {
        _delay_ms(20); // debounce
        if ((pin_ir&(1<<pinnummer_ir))!=0)
     e1a:	37 9b       	sbis	0x06, 7	; 6

00000e1c <.L2>:
            }
            gedetecteerd=1;
            port_led|=(1<<led1);//led uit
        }
    }
}
     e1c:	08 95       	ret

00000e1e <.Loc.39>:
            if(!gedetecteerd)
     e1e:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <gedetecteerd.0>
     e22:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <gedetecteerd.0+0x1>
     e26:	89 2b       	or	r24, r25
     e28:	49 f4       	brne	.+18     	; 0xe3c <.L5>

00000e2a <.Loc.41>:
                tel++;
     e2a:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <tel>
     e2e:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <tel+0x1>
     e32:	01 96       	adiw	r24, 0x01	; 1
     e34:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <tel+0x1>
     e38:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <tel>

00000e3c <.L5>:
            gedetecteerd=1;
     e3c:	81 e0       	ldi	r24, 0x01	; 1
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <gedetecteerd.0+0x1>
     e44:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <gedetecteerd.0>

00000e48 <.Loc.45>:
            port_led|=(1<<led1);//led uit
     e48:	2f 9a       	sbi	0x05, 7	; 5

00000e4a <.Loc.47>:
}
     e4a:	e8 cf       	rjmp	.-48     	; 0xe1c <.L2>

00000e4c <main>:
#include "main.h"
#include "ultrasoon.h"

int main(void)
{
    init_ultrasoon();
     e4c:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <init_ultrasoon>

00000e50 <.LVL0>:
    initStepper();
     e50:	0e 94 54 09 	call	0x12a8	; 0x12a8 <initStepper>

00000e54 <.LVL1>:

    vooruit();
     e54:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

00000e58 <.LVL2>:
    rechtsom();
     e58:	0e 94 d7 07 	call	0xfae	; 0xfae <rechtsom>

00000e5c <.LVL3>:
    vooruit();
     e5c:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

00000e60 <.LVL4>:
    return 0;
}
     e60:	80 e0       	ldi	r24, 0x00	; 0
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	08 95       	ret

00000e66 <metingPadbreedte>:

int padbreedte;

void metingPadbreedte(void){
    //neemt afmeting van de breedte van het pad in cm
    padbreedte = distance_left + distance_right + 13;
     e66:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <distance_left>
     e6a:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <distance_left+0x1>
     e6e:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <distance_right>
     e72:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <distance_right+0x1>
     e76:	82 0f       	add	r24, r18
     e78:	93 1f       	adc	r25, r19

00000e7a <.Loc.3>:
     e7a:	0d 96       	adiw	r24, 0x0d	; 13

00000e7c <.Loc.4>:
     e7c:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <padbreedte+0x1>
     e80:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <padbreedte>

00000e84 <.Loc.5>:
}
     e84:	08 95       	ret

00000e86 <vooruit>:

void vooruit(void){
    //agv rijdt ongecontroleerd vooruit
    speedStepperLeft(50);
     e86:	82 e3       	ldi	r24, 0x32	; 50
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	0e 94 62 09 	call	0x12c4	; 0x12c4 <speedStepperLeft>

00000e8e <.LVL0>:
    speedStepperRight(50);
     e8e:	82 e3       	ldi	r24, 0x32	; 50
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <speedStepperRight>

00000e96 <.LVL1>:
}
     e96:	08 95       	ret

00000e98 <stop>:

void stop(void){
    //agv stopt met rijden
    speedStepperLeft(0);
     e98:	80 e0       	ldi	r24, 0x00	; 0
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	0e 94 62 09 	call	0x12c4	; 0x12c4 <speedStepperLeft>

00000ea0 <.LVL2>:
    speedStepperRight(0);
     ea0:	80 e0       	ldi	r24, 0x00	; 0
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <speedStepperRight>

00000ea8 <.LVL3>:
}
     ea8:	08 95       	ret

00000eaa <rechtdoor>:

void rechtdoor(void){
     eaa:	ef 92       	push	r14
     eac:	ff 92       	push	r15
     eae:	0f 93       	push	r16
     eb0:	1f 93       	push	r17
     eb2:	cf 93       	push	r28
     eb4:	df 93       	push	r29

00000eb6 <.Loc.15>:
    int topspeed = 50;
    int directionState=0;
    //while agv binnen het pad is
    while(distance_left<50){
     eb6:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <distance_left>
     eba:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <distance_left+0x1>
     ebe:	c2 97       	sbiw	r24, 0x32	; 50
     ec0:	0c f0       	brlt	.+2      	; 0xec4 <.Loc.19>

00000ec2 <L0^A>:
     ec2:	6c c0       	rjmp	.+216    	; 0xf9c <.L5>

00000ec4 <.Loc.19>:
    int directionState=0;
     ec4:	80 e0       	ldi	r24, 0x00	; 0
     ec6:	90 e0       	ldi	r25, 0x00	; 0

00000ec8 <.Loc.20>:
            }
            if(distance_left < distance_right){
                if(directionState!=3){
                speedStepperRight(60);
                speedStepperLeft(topspeed);
                directionState = 3;
     ec8:	0f 2e       	mov	r0, r31
     eca:	f3 e0       	ldi	r31, 0x03	; 3
     ecc:	ef 2e       	mov	r14, r31
     ece:	f0 2d       	mov	r31, r0
     ed0:	f1 2c       	mov	r15, r1

00000ed2 <.Loc.21>:
            if(distance_left < distance_right){
     ed2:	d2 e0       	ldi	r29, 0x02	; 2
     ed4:	c0 e0       	ldi	r28, 0x00	; 0

00000ed6 <.Loc.22>:
                directionState = 1;
     ed6:	01 e0       	ldi	r16, 0x01	; 1
     ed8:	10 e0       	ldi	r17, 0x00	; 0
     eda:	0b c0       	rjmp	.+22     	; 0xef2 <.L10>

00000edc <.L15>:
            if(directionState!=1){
     edc:	81 30       	cpi	r24, 0x01	; 1
     ede:	91 05       	cpc	r25, r1
     ee0:	71 f5       	brne	.+92     	; 0xf3e <.L14>

00000ee2 <.L7>:
    while(distance_left<50){
     ee2:	20 91 4c 02 	lds	r18, 0x024C	; 0x80024c <distance_left>
     ee6:	30 91 4d 02 	lds	r19, 0x024D	; 0x80024d <distance_left+0x1>
     eea:	22 33       	cpi	r18, 0x32	; 50
     eec:	31 05       	cpc	r19, r1
     eee:	0c f0       	brlt	.+2      	; 0xef2 <.L10>

00000ef0 <L0^A>:
     ef0:	55 c0       	rjmp	.+170    	; 0xf9c <.L5>

00000ef2 <.L10>:
        if (distance_right==distance_left) {
     ef2:	40 91 4e 02 	lds	r20, 0x024E	; 0x80024e <distance_right>
     ef6:	50 91 4f 02 	lds	r21, 0x024F	; 0x80024f <distance_right+0x1>
     efa:	20 91 4c 02 	lds	r18, 0x024C	; 0x80024c <distance_left>
     efe:	30 91 4d 02 	lds	r19, 0x024D	; 0x80024d <distance_left+0x1>

00000f02 <.Loc.28>:
     f02:	42 17       	cp	r20, r18
     f04:	53 07       	cpc	r21, r19
     f06:	51 f3       	breq	.-44     	; 0xedc <.L15>

00000f08 <.Loc.29>:
            if (distance_right < distance_left){
     f08:	40 91 4e 02 	lds	r20, 0x024E	; 0x80024e <distance_right>
     f0c:	50 91 4f 02 	lds	r21, 0x024F	; 0x80024f <distance_right+0x1>
     f10:	20 91 4c 02 	lds	r18, 0x024C	; 0x80024c <distance_left>
     f14:	30 91 4d 02 	lds	r19, 0x024D	; 0x80024d <distance_left+0x1>

00000f18 <.Loc.31>:
     f18:	42 17       	cp	r20, r18
     f1a:	53 07       	cpc	r21, r19
     f1c:	24 f5       	brge	.+72     	; 0xf66 <.L8>

00000f1e <.Loc.32>:
                if(directionState!=2){
     f1e:	02 97       	sbiw	r24, 0x02	; 2
     f20:	c9 f4       	brne	.+50     	; 0xf54 <.L16>

00000f22 <.L9>:
            if(distance_left < distance_right){
     f22:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <distance_left>
     f26:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <distance_left+0x1>
     f2a:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <distance_right>
     f2e:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <distance_right+0x1>

00000f32 <.Loc.36>:
     f32:	82 17       	cp	r24, r18
     f34:	93 07       	cpc	r25, r19
     f36:	3c f1       	brlt	.+78     	; 0xf86 <.L11>
     f38:	8d 2f       	mov	r24, r29
     f3a:	9c 2f       	mov	r25, r28
     f3c:	d2 cf       	rjmp	.-92     	; 0xee2 <.L7>

00000f3e <.L14>:
                speedStepperLeft(topspeed);
     f3e:	82 e3       	ldi	r24, 0x32	; 50
     f40:	90 e0       	ldi	r25, 0x00	; 0

00000f42 <.Loc.38>:
     f42:	0e 94 62 09 	call	0x12c4	; 0x12c4 <speedStepperLeft>

00000f46 <.LVL11>:
                speedStepperRight(topspeed);
     f46:	82 e3       	ldi	r24, 0x32	; 50
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <speedStepperRight>

00000f4e <.LVL12>:
                directionState = 1;
     f4e:	80 2f       	mov	r24, r16
     f50:	91 2f       	mov	r25, r17
     f52:	c7 cf       	rjmp	.-114    	; 0xee2 <.L7>

00000f54 <.L16>:
                speedStepperLeft(60);
     f54:	8c e3       	ldi	r24, 0x3C	; 60
     f56:	90 e0       	ldi	r25, 0x00	; 0

00000f58 <.Loc.43>:
     f58:	0e 94 62 09 	call	0x12c4	; 0x12c4 <speedStepperLeft>

00000f5c <.LVL15>:
                speedStepperRight(topspeed);
     f5c:	82 e3       	ldi	r24, 0x32	; 50
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <speedStepperRight>

00000f64 <.LVL16>:
                directionState = 2;
     f64:	de cf       	rjmp	.-68     	; 0xf22 <.L9>

00000f66 <.L8>:
            if(distance_left < distance_right){
     f66:	40 91 4c 02 	lds	r20, 0x024C	; 0x80024c <distance_left>
     f6a:	50 91 4d 02 	lds	r21, 0x024D	; 0x80024d <distance_left+0x1>
     f6e:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <distance_right>
     f72:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <distance_right+0x1>

00000f76 <.Loc.49>:
     f76:	42 17       	cp	r20, r18
     f78:	53 07       	cpc	r21, r19
     f7a:	0c f0       	brlt	.+2      	; 0xf7e <.Loc.50>

00000f7c <L0^A>:
     f7c:	b2 cf       	rjmp	.-156    	; 0xee2 <.L7>

00000f7e <.Loc.50>:
                if(directionState!=3){
     f7e:	83 30       	cpi	r24, 0x03	; 3
     f80:	91 05       	cpc	r25, r1
     f82:	09 f4       	brne	.+2      	; 0xf86 <.L11>

00000f84 <L0^A>:
     f84:	ae cf       	rjmp	.-164    	; 0xee2 <.L7>

00000f86 <.L11>:
                speedStepperRight(60);
     f86:	8c e3       	ldi	r24, 0x3C	; 60
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <speedStepperRight>

00000f8e <.LVL19>:
                speedStepperLeft(topspeed);
     f8e:	82 e3       	ldi	r24, 0x32	; 50
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	0e 94 62 09 	call	0x12c4	; 0x12c4 <speedStepperLeft>

00000f96 <.LVL20>:
                directionState = 3;
     f96:	8e 2d       	mov	r24, r14
     f98:	9f 2d       	mov	r25, r15
     f9a:	a3 cf       	rjmp	.-186    	; 0xee2 <.L7>

00000f9c <.L5>:
                }
            }
        }
    }
    //stop driving
    stop();
     f9c:	0e 94 4c 07 	call	0xe98	; 0xe98 <stop>

00000fa0 <.LVL22>:
}
     fa0:	df 91       	pop	r29
     fa2:	cf 91       	pop	r28
     fa4:	1f 91       	pop	r17
     fa6:	0f 91       	pop	r16
     fa8:	ff 90       	pop	r15
     faa:	ef 90       	pop	r14
     fac:	08 95       	ret

00000fae <rechtsom>:

void rechtsom(void){
    clearStepCnt();
     fae:	0e 94 b9 09 	call	0x1372	; 0x1372 <clearStepCnt>

00000fb2 <.LVL23>:
    while(stepCounterLeft<2100){      //agv rijdt ietsjes verder buiten het pad
     fb2:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
     fb6:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
     fba:	84 33       	cpi	r24, 0x34	; 52
     fbc:	98 40       	sbci	r25, 0x08	; 8
     fbe:	48 f4       	brcc	.+18     	; 0xfd2 <.L18>

00000fc0 <.L19>:
        vooruit();
     fc0:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

00000fc4 <.LVL24>:
    while(stepCounterLeft<2100){      //agv rijdt ietsjes verder buiten het pad
     fc4:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
     fc8:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
     fcc:	84 33       	cpi	r24, 0x34	; 52
     fce:	98 40       	sbci	r25, 0x08	; 8
     fd0:	b8 f3       	brcs	.-18     	; 0xfc0 <.L19>

00000fd2 <.L18>:
    }
    clearStepCnt();
     fd2:	0e 94 b9 09 	call	0x1372	; 0x1372 <clearStepCnt>

00000fd6 <.LVL25>:
    toggleStepperDirectionRight();
     fd6:	0e 94 69 09 	call	0x12d2	; 0x12d2 <toggleStepperDirectionRight>

00000fda <.LVL26>:
    while(stepCounterLeft<2150){   //agv draait 90 graden
     fda:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
     fde:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
     fe2:	86 36       	cpi	r24, 0x66	; 102
     fe4:	98 40       	sbci	r25, 0x08	; 8
     fe6:	48 f4       	brcc	.+18     	; 0xffa <.L20>

00000fe8 <.L21>:
        vooruit();
     fe8:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

00000fec <.LVL27>:
    while(stepCounterLeft<2150){   //agv draait 90 graden
     fec:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
     ff0:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
     ff4:	86 36       	cpi	r24, 0x66	; 102
     ff6:	98 40       	sbci	r25, 0x08	; 8
     ff8:	b8 f3       	brcs	.-18     	; 0xfe8 <.L21>

00000ffa <.L20>:
    }
    toggleStepperDirectionRight();
     ffa:	0e 94 69 09 	call	0x12d2	; 0x12d2 <toggleStepperDirectionRight>

00000ffe <.LVL28>:
    clearStepCnt();
     ffe:	0e 94 b9 09 	call	0x1372	; 0x1372 <clearStepCnt>

00001002 <.LVL29>:
    while(stepCounterLeft<(7100)){    //agv rijdt naar volgende pad
    1002:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
    1006:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
    100a:	8c 3b       	cpi	r24, 0xBC	; 188
    100c:	9b 41       	sbci	r25, 0x1B	; 27
    100e:	48 f4       	brcc	.+18     	; 0x1022 <.L22>

00001010 <.L23>:
        vooruit();
    1010:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

00001014 <.LVL30>:
    while(stepCounterLeft<(7100)){    //agv rijdt naar volgende pad
    1014:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
    1018:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
    101c:	8c 3b       	cpi	r24, 0xBC	; 188
    101e:	9b 41       	sbci	r25, 0x1B	; 27
    1020:	b8 f3       	brcs	.-18     	; 0x1010 <.L23>

00001022 <.L22>:
    }
    toggleStepperDirectionRight();      //agv draati 90 graden
    1022:	0e 94 69 09 	call	0x12d2	; 0x12d2 <toggleStepperDirectionRight>

00001026 <.LVL31>:
    clearStepCnt();
    1026:	0e 94 b9 09 	call	0x1372	; 0x1372 <clearStepCnt>

0000102a <.LVL32>:
    while(stepCounterLeft<(2150)){
    102a:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
    102e:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
    1032:	86 36       	cpi	r24, 0x66	; 102
    1034:	98 40       	sbci	r25, 0x08	; 8
    1036:	48 f4       	brcc	.+18     	; 0x104a <.L24>

00001038 <.L25>:
        vooruit();
    1038:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

0000103c <.LVL33>:
    while(stepCounterLeft<(2150)){
    103c:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
    1040:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
    1044:	86 36       	cpi	r24, 0x66	; 102
    1046:	98 40       	sbci	r25, 0x08	; 8
    1048:	b8 f3       	brcs	.-18     	; 0x1038 <.L25>

0000104a <.L24>:
    }
    toggleStepperDirectionRight();
    104a:	0e 94 69 09 	call	0x12d2	; 0x12d2 <toggleStepperDirectionRight>

0000104e <.LVL34>:
    clearStepCnt();
    104e:	0e 94 b9 09 	call	0x1372	; 0x1372 <clearStepCnt>

00001052 <.LVL35>:
    vooruit();
    1052:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

00001056 <.LVL36>:
    while(distance_left>25){           //agv is in het volgende pad
    1056:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <distance_left>
    105a:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <distance_left+0x1>
    105e:	4a 97       	sbiw	r24, 0x1a	; 26
    1060:	44 f0       	brlt	.+16     	; 0x1072 <.L26>

00001062 <.L27>:
        vooruit();
    1062:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

00001066 <.LVL37>:
    while(distance_left>25){           //agv is in het volgende pad
    1066:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <distance_left>
    106a:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <distance_left+0x1>
    106e:	4a 97       	sbiw	r24, 0x1a	; 26
    1070:	c4 f7       	brge	.-16     	; 0x1062 <.L27>

00001072 <.L26>:
    }
    stop();
    1072:	0e 94 4c 07 	call	0xe98	; 0xe98 <stop>

00001076 <.LVL38>:
}
    1076:	08 95       	ret

00001078 <linksom>:

void linksom(void){
    clearStepCnt();
    1078:	0e 94 b9 09 	call	0x1372	; 0x1372 <clearStepCnt>

0000107c <.LVL39>:
    while(stepCounterLeft<2100){      //agv rijdt ietsjes verder buiten het pad
    107c:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
    1080:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
    1084:	84 33       	cpi	r24, 0x34	; 52
    1086:	98 40       	sbci	r25, 0x08	; 8
    1088:	48 f4       	brcc	.+18     	; 0x109c <.L34>

0000108a <.L35>:
        vooruit();
    108a:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

0000108e <.LVL40>:
    while(stepCounterLeft<2100){      //agv rijdt ietsjes verder buiten het pad
    108e:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
    1092:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
    1096:	84 33       	cpi	r24, 0x34	; 52
    1098:	98 40       	sbci	r25, 0x08	; 8
    109a:	b8 f3       	brcs	.-18     	; 0x108a <.L35>

0000109c <.L34>:
    }
    clearStepCnt();
    109c:	0e 94 b9 09 	call	0x1372	; 0x1372 <clearStepCnt>

000010a0 <.LVL41>:
    toggleStepperDirectionLeft();
    10a0:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <toggleStepperDirectionLeft>

000010a4 <.LVL42>:
    while(stepCounterLeft<2150){   //agv draait 90 graden
    10a4:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
    10a8:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
    10ac:	86 36       	cpi	r24, 0x66	; 102
    10ae:	98 40       	sbci	r25, 0x08	; 8
    10b0:	48 f4       	brcc	.+18     	; 0x10c4 <.L36>

000010b2 <.L37>:
        vooruit();
    10b2:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

000010b6 <.LVL43>:
    while(stepCounterLeft<2150){   //agv draait 90 graden
    10b6:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
    10ba:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
    10be:	86 36       	cpi	r24, 0x66	; 102
    10c0:	98 40       	sbci	r25, 0x08	; 8
    10c2:	b8 f3       	brcs	.-18     	; 0x10b2 <.L37>

000010c4 <.L36>:
    }
    toggleStepperDirectionLeft();
    10c4:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <toggleStepperDirectionLeft>

000010c8 <.LVL44>:
    clearStepCnt();
    10c8:	0e 94 b9 09 	call	0x1372	; 0x1372 <clearStepCnt>

000010cc <.LVL45>:
    while(stepCounterLeft<(7100)){    //agv rijdt naar volgende pad
    10cc:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
    10d0:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
    10d4:	8c 3b       	cpi	r24, 0xBC	; 188
    10d6:	9b 41       	sbci	r25, 0x1B	; 27
    10d8:	48 f4       	brcc	.+18     	; 0x10ec <.L38>

000010da <.L39>:
        vooruit();
    10da:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

000010de <.LVL46>:
    while(stepCounterLeft<(7100)){    //agv rijdt naar volgende pad
    10de:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
    10e2:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
    10e6:	8c 3b       	cpi	r24, 0xBC	; 188
    10e8:	9b 41       	sbci	r25, 0x1B	; 27
    10ea:	b8 f3       	brcs	.-18     	; 0x10da <.L39>

000010ec <.L38>:
    }
    toggleStepperDirectionLeft();      //agv draati 90 graden
    10ec:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <toggleStepperDirectionLeft>

000010f0 <.LVL47>:
    clearStepCnt();
    10f0:	0e 94 b9 09 	call	0x1372	; 0x1372 <clearStepCnt>

000010f4 <.LVL48>:
    while(stepCounterLeft<(2150)){
    10f4:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
    10f8:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
    10fc:	86 36       	cpi	r24, 0x66	; 102
    10fe:	98 40       	sbci	r25, 0x08	; 8
    1100:	48 f4       	brcc	.+18     	; 0x1114 <.L40>

00001102 <.L41>:
        vooruit();
    1102:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

00001106 <.LVL49>:
    while(stepCounterLeft<(2150)){
    1106:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
    110a:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
    110e:	86 36       	cpi	r24, 0x66	; 102
    1110:	98 40       	sbci	r25, 0x08	; 8
    1112:	b8 f3       	brcs	.-18     	; 0x1102 <.L41>

00001114 <.L40>:
    }
    toggleStepperDirectionLeft();
    1114:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <toggleStepperDirectionLeft>

00001118 <.LVL50>:
    clearStepCnt();
    1118:	0e 94 b9 09 	call	0x1372	; 0x1372 <clearStepCnt>

0000111c <.LVL51>:
    vooruit();
    111c:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

00001120 <.LVL52>:
    while(distance_left>25){           //agv is in het volgende pad
    1120:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <distance_left>
    1124:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <distance_left+0x1>
    1128:	4a 97       	sbiw	r24, 0x1a	; 26
    112a:	44 f0       	brlt	.+16     	; 0x113c <.L42>

0000112c <.L43>:
        vooruit();
    112c:	0e 94 43 07 	call	0xe86	; 0xe86 <vooruit>

00001130 <.LVL53>:
    while(distance_left>25){           //agv is in het volgende pad
    1130:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <distance_left>
    1134:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <distance_left+0x1>
    1138:	4a 97       	sbiw	r24, 0x1a	; 26
    113a:	c4 f7       	brge	.-16     	; 0x112c <.L43>

0000113c <.L42>:
    }
    stop();
    113c:	0e 94 4c 07 	call	0xe98	; 0xe98 <stop>

00001140 <.LVL54>:
}
    1140:	08 95       	ret

00001142 <rechtdoor1>:

//------------------------------------TROUBLESHOOTING-----------

//TESTING WITH JUST ONE SENSOR
void rechtdoor1(void){
    1142:	ef 92       	push	r14
    1144:	ff 92       	push	r15
    1146:	0f 93       	push	r16
    1148:	1f 93       	push	r17
    114a:	cf 93       	push	r28
    114c:	df 93       	push	r29

0000114e <.Loc.125>:
    int topspeed = 50;
    int directionState=0;
    //while agv binnen het pad is
    while(distance_left<50){
    114e:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <distance_left>
    1152:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <distance_left+0x1>
    1156:	c2 97       	sbiw	r24, 0x32	; 50
    1158:	0c f0       	brlt	.+2      	; 0x115c <.Loc.129>

0000115a <L0^A>:
    115a:	59 c0       	rjmp	.+178    	; 0x120e <.L50>

0000115c <.Loc.129>:
    int directionState=0;
    115c:	80 e0       	ldi	r24, 0x00	; 0
    115e:	90 e0       	ldi	r25, 0x00	; 0

00001160 <.Loc.130>:
            }
            if(distance_right > 10){
                if(directionState!=3){
                speedStepperRight(60);
                speedStepperLeft(topspeed);
                directionState = 3;
    1160:	0f 2e       	mov	r0, r31
    1162:	f3 e0       	ldi	r31, 0x03	; 3
    1164:	ef 2e       	mov	r14, r31
    1166:	f0 2d       	mov	r31, r0
    1168:	f1 2c       	mov	r15, r1

0000116a <.Loc.131>:
            if(distance_right > 10){
    116a:	d2 e0       	ldi	r29, 0x02	; 2
    116c:	c0 e0       	ldi	r28, 0x00	; 0

0000116e <.Loc.132>:
                directionState = 1;
    116e:	01 e0       	ldi	r16, 0x01	; 1
    1170:	10 e0       	ldi	r17, 0x00	; 0
    1172:	0b c0       	rjmp	.+22     	; 0x118a <.L55>

00001174 <.L60>:
            if(directionState!=1){
    1174:	81 30       	cpi	r24, 0x01	; 1
    1176:	91 05       	cpc	r25, r1
    1178:	09 f5       	brne	.+66     	; 0x11bc <.L59>

0000117a <.L52>:
    while(distance_left<50){
    117a:	20 91 4c 02 	lds	r18, 0x024C	; 0x80024c <distance_left>
    117e:	30 91 4d 02 	lds	r19, 0x024D	; 0x80024d <distance_left+0x1>
    1182:	22 33       	cpi	r18, 0x32	; 50
    1184:	31 05       	cpc	r19, r1
    1186:	0c f0       	brlt	.+2      	; 0x118a <.L55>

00001188 <L0^A>:
    1188:	42 c0       	rjmp	.+132    	; 0x120e <.L50>

0000118a <.L55>:
        if (distance_right==10) {
    118a:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <distance_right>
    118e:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <distance_right+0x1>

00001192 <.Loc.138>:
    1192:	2a 30       	cpi	r18, 0x0A	; 10
    1194:	31 05       	cpc	r19, r1
    1196:	71 f3       	breq	.-36     	; 0x1174 <.L60>

00001198 <.Loc.139>:
            if (distance_right < 10){
    1198:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <distance_right>
    119c:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <distance_right+0x1>

000011a0 <.Loc.141>:
    11a0:	2a 30       	cpi	r18, 0x0A	; 10
    11a2:	31 05       	cpc	r19, r1
    11a4:	fc f4       	brge	.+62     	; 0x11e4 <.L53>

000011a6 <.Loc.142>:
                if(directionState!=2){
    11a6:	02 97       	sbiw	r24, 0x02	; 2
    11a8:	a1 f4       	brne	.+40     	; 0x11d2 <.L61>

000011aa <.L54>:
            if(distance_right > 10){
    11aa:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <distance_right>
    11ae:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <distance_right+0x1>

000011b2 <.Loc.146>:
    11b2:	0b 97       	sbiw	r24, 0x0b	; 11
    11b4:	0c f5       	brge	.+66     	; 0x11f8 <.L56>
    11b6:	8d 2f       	mov	r24, r29
    11b8:	9c 2f       	mov	r25, r28
    11ba:	df cf       	rjmp	.-66     	; 0x117a <.L52>

000011bc <.L59>:
                speedStepperLeft(topspeed);
    11bc:	82 e3       	ldi	r24, 0x32	; 50
    11be:	90 e0       	ldi	r25, 0x00	; 0

000011c0 <.Loc.148>:
    11c0:	0e 94 62 09 	call	0x12c4	; 0x12c4 <speedStepperLeft>

000011c4 <.LVL62>:
                speedStepperRight(topspeed);
    11c4:	82 e3       	ldi	r24, 0x32	; 50
    11c6:	90 e0       	ldi	r25, 0x00	; 0
    11c8:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <speedStepperRight>

000011cc <.LVL63>:
                directionState = 1;
    11cc:	80 2f       	mov	r24, r16
    11ce:	91 2f       	mov	r25, r17
    11d0:	d4 cf       	rjmp	.-88     	; 0x117a <.L52>

000011d2 <.L61>:
                speedStepperLeft(60);
    11d2:	8c e3       	ldi	r24, 0x3C	; 60
    11d4:	90 e0       	ldi	r25, 0x00	; 0

000011d6 <.Loc.153>:
    11d6:	0e 94 62 09 	call	0x12c4	; 0x12c4 <speedStepperLeft>

000011da <.LVL66>:
                speedStepperRight(topspeed);
    11da:	82 e3       	ldi	r24, 0x32	; 50
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <speedStepperRight>

000011e2 <.LVL67>:
                directionState = 2;
    11e2:	e3 cf       	rjmp	.-58     	; 0x11aa <.L54>

000011e4 <.L53>:
            if(distance_right > 10){
    11e4:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <distance_right>
    11e8:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <distance_right+0x1>

000011ec <.Loc.159>:
    11ec:	2b 30       	cpi	r18, 0x0B	; 11
    11ee:	31 05       	cpc	r19, r1
    11f0:	24 f2       	brlt	.-120    	; 0x117a <.L52>

000011f2 <.Loc.160>:
                if(directionState!=3){
    11f2:	83 30       	cpi	r24, 0x03	; 3
    11f4:	91 05       	cpc	r25, r1
    11f6:	09 f2       	breq	.-126    	; 0x117a <.L52>

000011f8 <.L56>:
                speedStepperRight(60);
    11f8:	8c e3       	ldi	r24, 0x3C	; 60
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <speedStepperRight>

00001200 <.LVL70>:
                speedStepperLeft(topspeed);
    1200:	82 e3       	ldi	r24, 0x32	; 50
    1202:	90 e0       	ldi	r25, 0x00	; 0
    1204:	0e 94 62 09 	call	0x12c4	; 0x12c4 <speedStepperLeft>

00001208 <.LVL71>:
                directionState = 3;
    1208:	8e 2d       	mov	r24, r14
    120a:	9f 2d       	mov	r25, r15
    120c:	b6 cf       	rjmp	.-148    	; 0x117a <.L52>

0000120e <.L50>:
                }
            }
        }
    }
    //stop driving
    stop();
    120e:	0e 94 4c 07 	call	0xe98	; 0xe98 <stop>

00001212 <.LVL73>:
}
    1212:	df 91       	pop	r29
    1214:	cf 91       	pop	r28
    1216:	1f 91       	pop	r17
    1218:	0f 91       	pop	r16
    121a:	ff 90       	pop	r15
    121c:	ef 90       	pop	r14
    121e:	08 95       	ret

00001220 <rechtdoor2>:

//TESTING SPAMMING ICR
void rechtdoor2(void){
    int topspeed = 50;
    while(1){
        speedStepperLeft(topspeed);
    1220:	82 e3       	ldi	r24, 0x32	; 50
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	0e 94 62 09 	call	0x12c4	; 0x12c4 <speedStepperLeft>

00001228 <.LVL74>:
        speedStepperRight(topspeed);
    1228:	82 e3       	ldi	r24, 0x32	; 50
    122a:	90 e0       	ldi	r25, 0x00	; 0
    122c:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <speedStepperRight>

00001230 <.LVL75>:
    while(1){
    1230:	f7 cf       	rjmp	.-18     	; 0x1220 <rechtdoor2>

00001232 <initPinsStepper>:
#include <avr/interrupt.h>
#include "stepperDriver.h"

void initPinsStepper (void){
	// Config pins as output
	DDR_STEP_R |= (1<<STEPPER_RIGHT);
    1232:	6b 9a       	sbi	0x0d, 3	; 13

00001234 <.Loc.3>:
	DDR_STEP_L |= (1<<STEPPER_LEFT);
    1234:	e1 e0       	ldi	r30, 0x01	; 1
    1236:	f1 e0       	ldi	r31, 0x01	; 1
    1238:	80 81       	ld	r24, Z

0000123a <.Loc.4>:
    123a:	88 60       	ori	r24, 0x08	; 8
    123c:	80 83       	st	Z, r24

0000123e <.Loc.5>:
	DDR_DIR_R |= (1<<DIRECTION_R);
    123e:	9d 9a       	sbi	0x13, 5	; 19

00001240 <.Loc.7>:
	DDR_DIR_L |= (1<<DIRECTION_L);
    1240:	80 81       	ld	r24, Z

00001242 <.Loc.8>:
    1242:	80 61       	ori	r24, 0x10	; 16
    1244:	80 83       	st	Z, r24

00001246 <.Loc.10>:

	// Output low
	PORT_STEP_R &= ~(1<<STEPPER_RIGHT);
    1246:	73 98       	cbi	0x0e, 3	; 14

00001248 <.Loc.11>:
	PORT_STEP_L &= ~(1<<STEPPER_LEFT);
    1248:	e2 e0       	ldi	r30, 0x02	; 2
    124a:	f1 e0       	ldi	r31, 0x01	; 1
    124c:	80 81       	ld	r24, Z
    124e:	87 7f       	andi	r24, 0xF7	; 247
    1250:	80 83       	st	Z, r24

00001252 <.Loc.13>:
	PORT_DIR_R &= ~(1<<DIRECTION_R);
    1252:	a5 98       	cbi	0x14, 5	; 20

00001254 <.Loc.15>:
	PORT_DIR_L &= ~(1<<DIRECTION_L);
    1254:	80 81       	ld	r24, Z
    1256:	8f 7e       	andi	r24, 0xEF	; 239
    1258:	80 83       	st	Z, r24

0000125a <.Loc.17>:
}
    125a:	08 95       	ret

0000125c <initTimer3Stepper>:

//stepper right
void initTimer3Stepper(void){
    // Use mode 14, prescaler = 256
    TCCR3A = (1<<WGM31) | (0<<WGM30) | (1<<COM3A1) | (1<<COM3A0);
    125c:	82 ec       	ldi	r24, 0xC2	; 194
    125e:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>

00001262 <.Loc.21>:
    TCCR3B = (1<<WGM33) | (1<<WGM32) | (1<<CS32) | (0<<CS31) | (0<<CS30);
    1262:	8c e1       	ldi	r24, 0x1C	; 28
    1264:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x700091>

00001268 <.Loc.23>:
    TIMSK3 |= (1<<TOIE4);
    1268:	e1 e7       	ldi	r30, 0x71	; 113
    126a:	f0 e0       	ldi	r31, 0x00	; 0
    126c:	80 81       	ld	r24, Z

0000126e <.Loc.24>:
    126e:	81 60       	ori	r24, 0x01	; 1
    1270:	80 83       	st	Z, r24

00001272 <.Loc.25>:

	//define top value
    OCR3A = STEPVALUE;
    1272:	81 e0       	ldi	r24, 0x01	; 1
    1274:	90 e0       	ldi	r25, 0x00	; 0
    1276:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
    127a:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>

0000127e <.Loc.27>:
    sei();
    127e:	78 94       	sei

00001280 <.Loc.28>:
}
    1280:	08 95       	ret

00001282 <initTimer4Stepper>:

//stepper left
void initTimer4Stepper(void){
    // Use mode 14, prescaler = 256
    TCCR4A = (1<<WGM41) | (0<<WGM40) | (1<<COM4A1) | (1<<COM4A0);
    1282:	82 ec       	ldi	r24, 0xC2	; 194
    1284:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>

00001288 <.Loc.32>:
    TCCR4B = (1<<WGM43) | (1<<WGM42) | (1<<CS42) | (0<<CS41) | (0<<CS40);
    1288:	8c e1       	ldi	r24, 0x1C	; 28
    128a:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>

0000128e <.Loc.34>:
    TIMSK4 |= (1<<TOIE4);
    128e:	e2 e7       	ldi	r30, 0x72	; 114
    1290:	f0 e0       	ldi	r31, 0x00	; 0
    1292:	80 81       	ld	r24, Z

00001294 <.Loc.35>:
    1294:	81 60       	ori	r24, 0x01	; 1
    1296:	80 83       	st	Z, r24

00001298 <.Loc.36>:

	//define top value
    OCR4A = STEPVALUE;
    1298:	81 e0       	ldi	r24, 0x01	; 1
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
    12a0:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>

000012a4 <.Loc.38>:
    sei();
    12a4:	78 94       	sei

000012a6 <.Loc.39>:
}
    12a6:	08 95       	ret

000012a8 <initStepper>:


void initStepper(void){
    initTimer4Stepper();
    12a8:	0e 94 41 09 	call	0x1282	; 0x1282 <initTimer4Stepper>

000012ac <.LVL0>:
    initTimer3Stepper();
    12ac:	0e 94 2e 09 	call	0x125c	; 0x125c <initTimer3Stepper>

000012b0 <.LVL1>:
    initPinsStepper();
    12b0:	0e 94 19 09 	call	0x1232	; 0x1232 <initPinsStepper>

000012b4 <.LVL2>:
}
    12b4:	08 95       	ret

000012b6 <speedStepperRight>:

void speedStepperRight(int PWMRight){
    12b6:	28 2f       	mov	r18, r24
    12b8:	39 2f       	mov	r19, r25

000012ba <.Loc.47>:
    ICR3 = PWMRight;
    12ba:	30 93 97 00 	sts	0x0097, r19	; 0x800097 <__TEXT_REGION_LENGTH__+0x700097>
    12be:	20 93 96 00 	sts	0x0096, r18	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>

000012c2 <.Loc.49>:
}
    12c2:	08 95       	ret

000012c4 <speedStepperLeft>:

void speedStepperLeft(int PWMLeft){
    12c4:	28 2f       	mov	r18, r24
    12c6:	39 2f       	mov	r19, r25

000012c8 <.Loc.52>:
    ICR4 = PWMLeft;
    12c8:	30 93 a7 00 	sts	0x00A7, r19	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
    12cc:	20 93 a6 00 	sts	0x00A6, r18	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>

000012d0 <.Loc.54>:
}
    12d0:	08 95       	ret

000012d2 <toggleStepperDirectionRight>:

void toggleStepperDirectionRight(void){
    static int state = 0;
    if(state == 0){
    12d2:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <state.1>
    12d6:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <state.1+0x1>
    12da:	89 2b       	or	r24, r25
    12dc:	41 f4       	brne	.+16     	; 0x12ee <.L8>

000012de <.Loc.59>:
        PORT_DIR_R |= (1<<DIRECTION_R);
    12de:	a5 9a       	sbi	0x14, 5	; 20

000012e0 <.Loc.61>:
        state = 1;
    12e0:	81 e0       	ldi	r24, 0x01	; 1
    12e2:	90 e0       	ldi	r25, 0x00	; 0

000012e4 <.L9>:
    12e4:	90 93 49 02 	sts	0x0249, r25	; 0x800249 <state.1+0x1>
    12e8:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <state.1>

000012ec <.Loc.63>:
    }
    else{
        PORT_DIR_R &= ~(1<<DIRECTION_R);
        state = 0;
    }
}
    12ec:	08 95       	ret

000012ee <.L8>:
        PORT_DIR_R &= ~(1<<DIRECTION_R);
    12ee:	a5 98       	cbi	0x14, 5	; 20

000012f0 <.Loc.66>:
    12f0:	80 e0       	ldi	r24, 0x00	; 0
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	f7 cf       	rjmp	.-18     	; 0x12e4 <.L9>

000012f6 <toggleStepperDirectionLeft>:

void toggleStepperDirectionLeft(void){
    static int state = 0;
    if(state == 0){
    12f6:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <state.0>
    12fa:	90 91 47 02 	lds	r25, 0x0247	; 0x800247 <state.0+0x1>
    12fe:	89 2b       	or	r24, r25
    1300:	61 f4       	brne	.+24     	; 0x131a <.L11>

00001302 <.Loc.72>:
        PORT_DIR_L |= (1<<DIRECTION_L);
    1302:	e2 e0       	ldi	r30, 0x02	; 2
    1304:	f1 e0       	ldi	r31, 0x01	; 1
    1306:	80 81       	ld	r24, Z

00001308 <.Loc.73>:
    1308:	80 61       	ori	r24, 0x10	; 16
    130a:	80 83       	st	Z, r24

0000130c <.Loc.74>:
        state = 1;
    130c:	81 e0       	ldi	r24, 0x01	; 1
    130e:	90 e0       	ldi	r25, 0x00	; 0

00001310 <.L12>:
    1310:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <state.0+0x1>
    1314:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <state.0>

00001318 <.Loc.76>:
    }
    else{
        PORT_DIR_L &= ~(1<<DIRECTION_L);
        state = 0;
    }
}
    1318:	08 95       	ret

0000131a <.L11>:
        PORT_DIR_L &= ~(1<<DIRECTION_L);
    131a:	e2 e0       	ldi	r30, 0x02	; 2
    131c:	f1 e0       	ldi	r31, 0x01	; 1
    131e:	80 81       	ld	r24, Z
    1320:	8f 7e       	andi	r24, 0xEF	; 239
    1322:	80 83       	st	Z, r24

00001324 <.Loc.79>:
    1324:	80 e0       	ldi	r24, 0x00	; 0
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	f3 cf       	rjmp	.-26     	; 0x1310 <.L12>

0000132a <__vector_45>:


volatile unsigned int stepCounterLeft = 0;
ISR(TIMER4_OVF_vect){
    132a:	8f 93       	push	r24
    132c:	8f b7       	in	r24, 0x3f	; 63
    132e:	8f 93       	push	r24
    1330:	9f 93       	push	r25

00001332 <.Loc.82>:
    stepCounterLeft++;
    1332:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <stepCounterLeft>
    1336:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <stepCounterLeft+0x1>
    133a:	01 96       	adiw	r24, 0x01	; 1
    133c:	90 93 45 02 	sts	0x0245, r25	; 0x800245 <stepCounterLeft+0x1>
    1340:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <stepCounterLeft>

00001344 <.Loc.84>:
}
    1344:	9f 91       	pop	r25
    1346:	8f 91       	pop	r24
    1348:	8f bf       	out	0x3f, r24	; 63
    134a:	8f 91       	pop	r24
    134c:	18 95       	reti

0000134e <__vector_35>:

volatile unsigned int stepCounterRight = 0;
ISR(TIMER3_OVF_vect){
    134e:	8f 93       	push	r24
    1350:	8f b7       	in	r24, 0x3f	; 63
    1352:	8f 93       	push	r24
    1354:	9f 93       	push	r25

00001356 <.Loc.86>:
    stepCounterRight++;
    1356:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <stepCounterRight>
    135a:	90 91 43 02 	lds	r25, 0x0243	; 0x800243 <stepCounterRight+0x1>
    135e:	01 96       	adiw	r24, 0x01	; 1
    1360:	90 93 43 02 	sts	0x0243, r25	; 0x800243 <stepCounterRight+0x1>
    1364:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <stepCounterRight>

00001368 <.Loc.88>:
}
    1368:	9f 91       	pop	r25
    136a:	8f 91       	pop	r24
    136c:	8f bf       	out	0x3f, r24	; 63
    136e:	8f 91       	pop	r24
    1370:	18 95       	reti

00001372 <clearStepCnt>:

void clearStepCnt(void){
    stepCounterLeft = 0;
    1372:	10 92 45 02 	sts	0x0245, r1	; 0x800245 <stepCounterLeft+0x1>
    1376:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <stepCounterLeft>

0000137a <.Loc.92>:
    stepCounterRight = 0;
    137a:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <stepCounterRight+0x1>
    137e:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <stepCounterRight>

00001382 <.Loc.94>:
}
    1382:	08 95       	ret

00001384 <init_timer5>:
#include <avr/interrupt.h>
#include "ultrasoon.h"

void init_timer5(void){
    //set timer mode 15
    TCCR5A = (1<<COM5B1) | (1<<COM5C1) | (1<<WGM51) | (1<<WGM50); //set output compare on B and C
    1384:	8b e2       	ldi	r24, 0x2B	; 43
    1386:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>

0000138a <.Loc.3>:
    TCCR5B = (1<<ICES5) | (1<<WGM53) | (1<<WGM52) | (1<<CS51);  //set input capture to rising edge and prescaler 8
    138a:	8a e5       	ldi	r24, 0x5A	; 90
    138c:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>

00001390 <.Loc.5>:
    //set interrupt register for input capture and overflow
    TIMSK5 = (1<<ICIE5) | (1<<TOIE5);
    1390:	81 e2       	ldi	r24, 0x21	; 33
    1392:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>

00001396 <.Loc.7>:
    //define top value
    OCR5A = 0XFFFF;
    1396:	8f ef       	ldi	r24, 0xFF	; 255
    1398:	9f ef       	ldi	r25, 0xFF	; 255
    139a:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
    139e:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>

000013a2 <.Loc.10>:
    //set trigger start signal
    OCR5B = 20;
    13a2:	84 e1       	ldi	r24, 0x14	; 20
    13a4:	90 e0       	ldi	r25, 0x00	; 0
    13a6:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
    13aa:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>

000013ae <.Loc.11>:
    OCR5C = 20;
    13ae:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__TEXT_REGION_LENGTH__+0x70012d>
    13b2:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__TEXT_REGION_LENGTH__+0x70012c>

000013b6 <.Loc.13>:
    //set enable interrupt
    sei();
    13b6:	78 94       	sei

000013b8 <.Loc.14>:
}
    13b8:	08 95       	ret

000013ba <init_pins_ultrasoon>:

void init_pins_ultrasoon(void){
    //set trigger pins to output
    DDRL |= (1<<Pin_Trig_Left);
    13ba:	ea e0       	ldi	r30, 0x0A	; 10
    13bc:	f1 e0       	ldi	r31, 0x01	; 1
    13be:	80 81       	ld	r24, Z

000013c0 <.Loc.17>:
    13c0:	80 61       	ori	r24, 0x10	; 16
    13c2:	80 83       	st	Z, r24

000013c4 <.Loc.18>:
    DDRL |= (1<<Pin_Trig_Right);
    13c4:	80 81       	ld	r24, Z

000013c6 <.Loc.19>:
    13c6:	80 62       	ori	r24, 0x20	; 32
    13c8:	80 83       	st	Z, r24

000013ca <.Loc.20>:
    //set trigger pins to low
    PORTL &= ~(1<<Pin_Trig_Left);
    13ca:	ab e0       	ldi	r26, 0x0B	; 11
    13cc:	b1 e0       	ldi	r27, 0x01	; 1
    13ce:	8c 91       	ld	r24, X
    13d0:	8f 7e       	andi	r24, 0xEF	; 239
    13d2:	8c 93       	st	X, r24

000013d4 <.Loc.22>:
    PORTL &= ~(1<<Pin_Trig_Right);
    13d4:	8c 91       	ld	r24, X
    13d6:	8f 7d       	andi	r24, 0xDF	; 223
    13d8:	8c 93       	st	X, r24

000013da <.Loc.24>:
    //set echo pin to input
    DDRL &= ~(1<<Pin_echo);
    13da:	80 81       	ld	r24, Z
    13dc:	8d 7f       	andi	r24, 0xFD	; 253
    13de:	80 83       	st	Z, r24

000013e0 <.Loc.26>:
}
    13e0:	08 95       	ret

000013e2 <init_ultrasoon>:

void init_ultrasoon(void){
    init_pins_ultrasoon();
    13e2:	0e 94 dd 09 	call	0x13ba	; 0x13ba <init_pins_ultrasoon>

000013e6 <.LVL0>:
    init_timer5();
    13e6:	0e 94 c2 09 	call	0x1384	; 0x1384 <init_timer5>

000013ea <.LVL1>:
}
    13ea:	08 95       	ret

000013ec <__vector_50>:

volatile int distance_right;
volatile int distance_left;
volatile int current_sensor=0;

ISR(TIMER5_OVF_vect){
    13ec:	8f 93       	push	r24
    13ee:	8f b7       	in	r24, 0x3f	; 63
    13f0:	8f 93       	push	r24
    13f2:	8b b7       	in	r24, 0x3b	; 59
    13f4:	8f 93       	push	r24
    13f6:	ef 93       	push	r30
    13f8:	ff 93       	push	r31

000013fa <.Loc.32>:
    //set input capture to rising edge
    TCCR5B |= (1<<ICES5);
    13fa:	e1 e2       	ldi	r30, 0x21	; 33
    13fc:	f1 e0       	ldi	r31, 0x01	; 1
    13fe:	80 81       	ld	r24, Z

00001400 <.Loc.33>:
    1400:	80 64       	ori	r24, 0x40	; 64
    1402:	80 83       	st	Z, r24

00001404 <.Loc.34>:
}
    1404:	ff 91       	pop	r31
    1406:	ef 91       	pop	r30
    1408:	8f 91       	pop	r24
    140a:	8b bf       	out	0x3b, r24	; 59
    140c:	8f 91       	pop	r24
    140e:	8f bf       	out	0x3f, r24	; 63
    1410:	8f 91       	pop	r24
    1412:	18 95       	reti

00001414 <__vector_46>:

ISR(TIMER5_CAPT_vect){
    1414:	0f 92       	push	r0
    1416:	0f b6       	in	r0, 0x3f	; 63
    1418:	0f 92       	push	r0
    141a:	1f 92       	push	r1
    141c:	11 24       	eor	r1, r1
    141e:	2f 93       	push	r18
    1420:	2b b7       	in	r18, 0x3b	; 59
    1422:	2f 93       	push	r18
    1424:	3f 93       	push	r19
    1426:	6f 93       	push	r22
    1428:	7f 93       	push	r23
    142a:	8f 93       	push	r24
    142c:	9f 93       	push	r25
    142e:	af 93       	push	r26
    1430:	bf 93       	push	r27
    1432:	ef 93       	push	r30
    1434:	ff 93       	push	r31

00001436 <.Loc.36>:
    static volatile int start_time;
    // If interrupt is set to rising edge
    if (TCCR5B & (1 << ICES5)) {
    1436:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>

0000143a <.Loc.39>:
    143a:	86 ff       	sbrs	r24, 6
    143c:	1e c0       	rjmp	.+60     	; 0x147a <.L6>

0000143e <.Loc.40>:
        start_time = ICR5;
    143e:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
    1442:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>

00001446 <.Loc.42>:
    1446:	90 93 51 02 	sts	0x0251, r25	; 0x800251 <start_time.0+0x1>
    144a:	80 93 50 02 	sts	0x0250, r24	; 0x800250 <start_time.0>

0000144e <.Loc.43>:
        TCCR5B &= ~(1 << ICES5);  // Switch to falling edge
    144e:	e1 e2       	ldi	r30, 0x21	; 33
    1450:	f1 e0       	ldi	r31, 0x01	; 1
    1452:	80 81       	ld	r24, Z
    1454:	8f 7b       	andi	r24, 0xBF	; 191
    1456:	80 83       	st	Z, r24

00001458 <.L5>:
            current_sensor = 0;  // Switch to Sensor A
            TCCR5A &= ~(1 << COM5B1);  // Turn off Sensor Right
            TCCR5A |= (1 << COM5C1);   // Turn on Sensor Left
        }
    }
}
    1458:	ff 91       	pop	r31
    145a:	ef 91       	pop	r30
    145c:	bf 91       	pop	r27
    145e:	af 91       	pop	r26
    1460:	9f 91       	pop	r25
    1462:	8f 91       	pop	r24
    1464:	7f 91       	pop	r23
    1466:	6f 91       	pop	r22
    1468:	3f 91       	pop	r19
    146a:	2f 91       	pop	r18
    146c:	2b bf       	out	0x3b, r18	; 59
    146e:	2f 91       	pop	r18
    1470:	1f 90       	pop	r1
    1472:	0f 90       	pop	r0
    1474:	0f be       	out	0x3f, r0	; 63
    1476:	0f 90       	pop	r0
    1478:	18 95       	reti

0000147a <.L6>:
        int distance = (ICR5 - start_time) / 117;  // Calculate distance in mm
    147a:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
    147e:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>

00001482 <.Loc.48>:
    1482:	80 91 50 02 	lds	r24, 0x0250	; 0x800250 <start_time.0>
    1486:	90 91 51 02 	lds	r25, 0x0251	; 0x800251 <start_time.0+0x1>
    148a:	28 1b       	sub	r18, r24
    148c:	39 0b       	sbc	r19, r25

0000148e <.Loc.49>:
    148e:	a9 e0       	ldi	r26, 0x09	; 9
    1490:	bc e8       	ldi	r27, 0x8C	; 140
    1492:	0e 94 99 0a 	call	0x1532	; 0x1532 <__umulhisi3>
    1496:	00 24       	eor	r0, r0
    1498:	88 0f       	add	r24, r24
    149a:	99 1f       	adc	r25, r25
    149c:	00 1c       	adc	r0, r0
    149e:	88 0f       	add	r24, r24
    14a0:	99 1f       	adc	r25, r25
    14a2:	00 1c       	adc	r0, r0
    14a4:	89 2f       	mov	r24, r25
    14a6:	90 2d       	mov	r25, r0

000014a8 <.Loc.50>:
        if (current_sensor == 0) {
    14a8:	20 91 4a 02 	lds	r18, 0x024A	; 0x80024a <current_sensor>
    14ac:	30 91 4b 02 	lds	r19, 0x024B	; 0x80024b <current_sensor+0x1>

000014b0 <.Loc.52>:
    14b0:	23 2b       	or	r18, r19
    14b2:	c9 f4       	brne	.+50     	; 0x14e6 <.L8>

000014b4 <.Loc.53>:
            distance_left = distance;  // Store distance for Sensor A
    14b4:	90 93 4d 02 	sts	0x024D, r25	; 0x80024d <distance_left+0x1>
    14b8:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <distance_left>

000014bc <.L9>:
        if (current_sensor == 0) {
    14bc:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <current_sensor>
    14c0:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <current_sensor+0x1>

000014c4 <.Loc.57>:
    14c4:	89 2b       	or	r24, r25
    14c6:	a1 f4       	brne	.+40     	; 0x14f0 <.L10>

000014c8 <.Loc.58>:
            current_sensor = 1;  // Switch to Sensor B
    14c8:	81 e0       	ldi	r24, 0x01	; 1
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	90 93 4b 02 	sts	0x024B, r25	; 0x80024b <current_sensor+0x1>
    14d0:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <current_sensor>

000014d4 <.Loc.60>:
            TCCR5A &= ~(1 << COM5C1);  // Turn off Sensor Left
    14d4:	e0 e2       	ldi	r30, 0x20	; 32
    14d6:	f1 e0       	ldi	r31, 0x01	; 1
    14d8:	80 81       	ld	r24, Z
    14da:	87 7f       	andi	r24, 0xF7	; 247
    14dc:	80 83       	st	Z, r24

000014de <.Loc.62>:
            TCCR5A |= (1 << COM5B1);   // Turn on Sensor Right
    14de:	80 81       	ld	r24, Z

000014e0 <.Loc.63>:
    14e0:	80 62       	ori	r24, 0x20	; 32
    14e2:	80 83       	st	Z, r24
    14e4:	b9 cf       	rjmp	.-142    	; 0x1458 <.L5>

000014e6 <.L8>:
            distance_right = distance;  // Store distance for Sensor B
    14e6:	90 93 4f 02 	sts	0x024F, r25	; 0x80024f <distance_right+0x1>
    14ea:	80 93 4e 02 	sts	0x024E, r24	; 0x80024e <distance_right>
    14ee:	e6 cf       	rjmp	.-52     	; 0x14bc <.L9>

000014f0 <.L10>:
            current_sensor = 0;  // Switch to Sensor A
    14f0:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <current_sensor+0x1>
    14f4:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <current_sensor>

000014f8 <.Loc.68>:
            TCCR5A &= ~(1 << COM5B1);  // Turn off Sensor Right
    14f8:	e0 e2       	ldi	r30, 0x20	; 32
    14fa:	f1 e0       	ldi	r31, 0x01	; 1
    14fc:	80 81       	ld	r24, Z
    14fe:	8f 7d       	andi	r24, 0xDF	; 223
    1500:	80 83       	st	Z, r24

00001502 <.Loc.70>:
            TCCR5A |= (1 << COM5C1);   // Turn on Sensor Left
    1502:	80 81       	ld	r24, Z

00001504 <.Loc.71>:
    1504:	88 60       	ori	r24, 0x08	; 8
    1506:	80 83       	st	Z, r24

00001508 <.LBE2>:
}
    1508:	a7 cf       	rjmp	.-178    	; 0x1458 <.L5>

0000150a <__divmodhi4>:
    150a:	97 fb       	bst	r25, 7

0000150c <.Loc.1>:
    150c:	07 2e       	mov	r0, r23

0000150e <.Loc.2>:
    150e:	16 f4       	brtc	.+4      	; 0x1514 <.L^B1>

00001510 <.Loc.3>:
    1510:	00 94       	com	r0

00001512 <.Loc.4>:
    1512:	07 d0       	rcall	.+14     	; 0x1522 <__divmodhi4_neg1>

00001514 <.L^B1>:
    1514:	77 fd       	sbrc	r23, 7

00001516 <.Loc.6>:
    1516:	09 d0       	rcall	.+18     	; 0x152a <__divmodhi4_neg2>

00001518 <.Loc.7>:
    1518:	0e 94 a8 0a 	call	0x1550	; 0x1550 <__udivmodhi4>

0000151c <.Loc.8>:
    151c:	07 fc       	sbrc	r0, 7

0000151e <.Loc.9>:
    151e:	05 d0       	rcall	.+10     	; 0x152a <__divmodhi4_neg2>

00001520 <.Loc.10>:
    1520:	3e f4       	brtc	.+14     	; 0x1530 <__divmodhi4_exit>

00001522 <__divmodhi4_neg1>:
    1522:	90 95       	com	r25

00001524 <.Loc.12>:
    1524:	81 95       	neg	r24

00001526 <.Loc.13>:
    1526:	9f 4f       	sbci	r25, 0xFF	; 255

00001528 <.Loc.14>:
    1528:	08 95       	ret

0000152a <__divmodhi4_neg2>:
    152a:	70 95       	com	r23

0000152c <.Loc.16>:
    152c:	61 95       	neg	r22

0000152e <.Loc.17>:
    152e:	7f 4f       	sbci	r23, 0xFF	; 255

00001530 <__divmodhi4_exit>:
    1530:	08 95       	ret

00001532 <__umulhisi3>:
    1532:	a2 9f       	mul	r26, r18

00001534 <.Loc.1>:
    1534:	b0 01       	movw	r22, r0

00001536 <.Loc.2>:
    1536:	b3 9f       	mul	r27, r19

00001538 <.Loc.3>:
    1538:	c0 01       	movw	r24, r0

0000153a <.Loc.4>:
    153a:	a3 9f       	mul	r26, r19

0000153c <.Loc.5>:
    153c:	70 0d       	add	r23, r0

0000153e <.Loc.6>:
    153e:	81 1d       	adc	r24, r1

00001540 <.Loc.7>:
    1540:	11 24       	eor	r1, r1

00001542 <.Loc.8>:
    1542:	91 1d       	adc	r25, r1

00001544 <.Loc.9>:
    1544:	b2 9f       	mul	r27, r18

00001546 <.Loc.10>:
    1546:	70 0d       	add	r23, r0

00001548 <.Loc.11>:
    1548:	81 1d       	adc	r24, r1

0000154a <.Loc.12>:
    154a:	11 24       	eor	r1, r1

0000154c <.Loc.13>:
    154c:	91 1d       	adc	r25, r1

0000154e <.Loc.14>:
    154e:	08 95       	ret

00001550 <__udivmodhi4>:
    1550:	aa 1b       	sub	r26, r26

00001552 <.Loc.1>:
    1552:	bb 1b       	sub	r27, r27

00001554 <.Loc.2>:
    1554:	51 e1       	ldi	r21, 0x11	; 17

00001556 <.Loc.3>:
    1556:	07 c0       	rjmp	.+14     	; 0x1566 <__udivmodhi4_ep>

00001558 <__udivmodhi4_loop>:
    1558:	aa 1f       	adc	r26, r26

0000155a <.Loc.5>:
    155a:	bb 1f       	adc	r27, r27

0000155c <.Loc.6>:
    155c:	a6 17       	cp	r26, r22

0000155e <.Loc.7>:
    155e:	b7 07       	cpc	r27, r23

00001560 <.Loc.8>:
    1560:	10 f0       	brcs	.+4      	; 0x1566 <__udivmodhi4_ep>

00001562 <.Loc.9>:
    1562:	a6 1b       	sub	r26, r22

00001564 <.Loc.10>:
    1564:	b7 0b       	sbc	r27, r23

00001566 <__udivmodhi4_ep>:
    1566:	88 1f       	adc	r24, r24

00001568 <.Loc.12>:
    1568:	99 1f       	adc	r25, r25

0000156a <.Loc.13>:
    156a:	5a 95       	dec	r21

0000156c <.Loc.14>:
    156c:	a9 f7       	brne	.-22     	; 0x1558 <__udivmodhi4_loop>

0000156e <.Loc.15>:
    156e:	80 95       	com	r24

00001570 <.Loc.16>:
    1570:	90 95       	com	r25

00001572 <.Loc.17>:
    1572:	bc 01       	movw	r22, r24

00001574 <.Loc.18>:
    1574:	cd 01       	movw	r24, r26

00001576 <.Loc.19>:
    1576:	08 95       	ret

00001578 <_exit>:
    1578:	f8 94       	cli

0000157a <__stop_program>:
    157a:	ff cf       	rjmp	.-2      	; 0x157a <__stop_program>
